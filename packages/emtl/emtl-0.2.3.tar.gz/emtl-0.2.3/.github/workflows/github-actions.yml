name: build
on:
  push:
    branches:
    - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'check'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'check'
            os: 'ubuntu-latest'
          - name: 'docs'
            python: '3.11'
            toxpython: 'python3.11'
            tox_env: 'docs'
            os: 'ubuntu-latest'
          - name: 'py310-cover (ubuntu)'
            python: '3.10'
            toxpython: 'python3.10'
            python_arch: 'x64'
            tox_env: 'py310-cover'
            os: 'ubuntu-latest'
          - name: 'py311-cover (ubuntu)'
            python: '3.11'
            toxpython: 'python3.11'
            python_arch: 'x64'
            tox_env: 'py311-cover'
            os: 'ubuntu-latest'
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python }}
        architecture: ${{ matrix.python_arch }}
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: test
      env:
        TOXPYTHON: '${{ matrix.toxpython }}'
        EM_USERNAME: ${{ secrets.EM_USERNAME }}
        EM_PASSWORD: ${{ secrets.EM_PASSWORD }}
      run: >
        tox -e ${{ matrix.tox_env }} -v
  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11
        architecture: x64
    - name: install dependencies
      run: |
        python -mpip install --progress-bar=off -r ci/requirements.txt
        virtualenv --version
        pip --version
        tox --version
        pip list --format=freeze
    - name: test
      env:
        TOXPYTHON: 'python311'
        PYTEST_ADDOPTS: '--cov-append'
        EM_USERNAME: ${{ secrets.EM_USERNAME }}
        EM_PASSWORD: ${{ secrets.EM_PASSWORD }}
      run: >
        PYTEST_ADDOPTS=--cov-append tox -e py310-cover -v
    - uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        EM_USERNAME: ${{ secrets.EM_USERNAME }}
        EM_PASSWORD: ${{ secrets.EM_PASSWORD }}
