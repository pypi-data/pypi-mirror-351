import logging

# watchtower-specific logging levels that signal the start and end of
# tasks, respectively.
START_LEVEL_NUM = logging.INFO + 2
DONE_LEVEL_NUM = logging.INFO + 4

# default host to send the watchtower requests to
# should be given by the main code in most cases
DEFAULT_HOST = 'localhost:8855'

# key in the logging payload that holds the deduplication identifier
DEDUP_ID_KEY = 'dedup_id'

# default name of the logger, when no name is provided by the user
# or through an environment variable called K_SERVICE or FUNCTION_NAME
DEFAULT_LOGGER_NAME = 'watchtower-logging'

# length of the execution_id generated by default
EXECUTION_ID_LENGTH = 10

# interval with which the python environment is send with the logging events
DEFAULT_ENV_INTERVAL = 600

# default configuration on http logging requests
DEFAULT_HTTP_TIMEOUT = 2
DEFAULT_RETRY_COUNT = 3
DEFAULT_BACKOFF_FACTOR = 1

# default time the logger.monitor_func waits for the queue listener to finish before returning the result of the function
DEFAULT_MAX_WAIT_FOR_HANDLER = 60.0

# format string for the user-agent-string, that holds the version
USER_AGENT_STR_FMT = 'watchtower-logging-python/{version}'

# configuration for sending an incident to the alerts endpoint
DEFAULT_ALERT_RETRY_COUNT = 5
DEFAULT_ALERT_BACKOFF_FACTOR = 1
DEFAULT_ALERT_HTTP_TIMEOUT = 10

# default settings for logging in Django
DEFAULT_DJANGO_PROTOCOL = 'https'
DEFAULT_DJANGO_NUM_RETRY = 1
DEFAULT_DJANGO_BACKOFF_FACTOR = 1
DEFAULT_DJANGO_HTTP_TIMEOUT = 1.0
DEFAULT_DJANGO_DEDUP = True
DEFAULT_DJANGO_DEDUP_KEYS = None
DEFAULT_DJANGO_USE_FALLBACK = True
DEFAULT_DJANGO_FALLBACK_HOST = None
DEFAULT_DJANGO_DEV = False

WATCHTOWER_INTERNAL_INDEX = 'watchtower_internal_logging'