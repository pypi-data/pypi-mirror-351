{"version":3,"file":"lib_index_js.75db2d6a1f39abdd613f.js","mappings":"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","sources":["webpack://pergamon_theme/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { IThemeManager, NotificationManager } from '@jupyterlab/apputils';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\n/**\n * Initialization data for the pergamon_theme extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'pergamon_theme:plugin',\n  description: 'Pergamon Theme Extension.',\n  autoStart: true,\n  requires: [IThemeManager],\n  optional: [ISettingRegistry],\n  activate: (app: JupyterFrontEnd, manager: IThemeManager) => {\n    console.log('JupyterLab extension pergamon_theme is activated!!');\n    const style = 'pergamon_theme/index.css';\n\n    manager.register({\n      name: 'pergamon_theme',\n      isLight: true,\n      load: () => manager.loadCSS(style),\n      unload: () => Promise.resolve(undefined)\n    });\n\n    manager.setTheme('pergamon_theme');\n    const id = setInterval(() => {\n      const restartAndRun = document.querySelector(\n        '.jp-Toolbar-item[data-jp-item-name=\"restart-and-run\"]'\n      );\n\n      const debug = document.querySelector(\n        '.jp-Toolbar-item[data-jp-item-name=\"debugger-icon\"]'\n      );\n\n      const spacer = document.querySelector(\n        '.jp-NotebookPanel-toolbar .jp-Toolbar-spacer.jp-Toolbar-item[data-jp-item-name=\"spacer\"]'\n      );\n\n      if (debug) {\n        if (restartAndRun) {\n          restartAndRun.after(debug);\n        }\n        if (spacer) {\n          debug.after(spacer);\n        }\n\n        clearInterval(id);\n      }\n    }, 100);\n\n    // Create a custom loading screen element\n    const customLoadingScreen = document.createElement('div');\n    customLoadingScreen.className = 'custom-loading-screen';\n    customLoadingScreen.textContent = 'Loading, please wait...';\n\n    // Add the custom loading screen to the document\n    document.body.appendChild(customLoadingScreen);\n\n    const splashElement = document.querySelector('.jp-Splash');\n    if (splashElement) {\n      splashElement.remove();\n    }\n\n    // Remove the custom loading screen once JupyterLab is fully loaded\n    app.restored.then(() => {\n      document.body.removeChild(customLoadingScreen);\n    });\n\n    const observer = new MutationObserver((mutationsList, observer) => {\n      if (document.querySelector('.pergamon-calliope-avatar') === null) {\n        const jupyternaut = document.querySelector('.MuiAvatar-root');\n\n        if (jupyternaut) {\n          jupyternaut.classList.add('pergamon-calliope-avatar');\n        }\n\n        const jupyternautParent = jupyternaut?.parentElement;\n        if (jupyternautParent) {\n          const img = jupyternautParent.querySelector('img');\n          if (img) {\n            img.remove();\n          }\n          jupyternautParent.classList.add('pergamon-calliope-container');\n        }\n\n        const textContent = jupyternautParent?.childNodes?.[1].childNodes?.[0];\n\n        if (textContent) {\n          textContent.textContent = '';\n\n          const text = document.createElement('p');\n          text.className = 'pergamon-calliope-text';\n          text.textContent =\n            \"Hi there! I'm Calliope, your programming assistant. You can ask me a question using the text box below.\";\n\n          const command = document.createElement('p');\n          command.className = 'pergamon-calliope-text';\n          command.textContent = 'You can also use these commands:';\n\n          textContent.appendChild(text);\n          textContent.appendChild(command);\n        }\n      }\n\n      const splashElement = document.querySelector('.jp-Splash');\n      if (splashElement) {\n        splashElement.remove();\n        observer.disconnect();\n      }\n    });\n\n    // @ts-expect-error error\n    NotificationManager.prototype.notify = function () {};\n\n    observer.observe(document.body, { childList: true, subtree: true });\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}