services:
  control_plane:
    image: multi_workflows_app:latest
    command: sh -c "python -m multi_workflows_app.deployment.core -q 'aws' "
    env_file:
      - ./aws/docker/.env.aws
      - ./.env.docker
    ports:
      - "8000:8000"
    volumes:
      - ./_app/multi_workflows_app:/app/multi_workflows_app # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
      # - ~/.aws/credentials:/home/appuser/.aws/credentials:ro  # use if want to load creds from /.aws/credentials NOTE: must also set AWS_REGION
    platform: linux/amd64
    build:
      context: .
      dockerfile: ./Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8000/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
  funny_joke_workflow:
    image: multi_workflows_app:latest
    command: sh -c "python -m multi_workflows_app.deployment.workflow_funny_joke"
    env_file:
      - ./aws/docker/.env.aws
      - ./.env.docker
      - ./.env.openai
    ports:
      - "8001:8001"
    volumes:
      - ./_app/multi_workflows_app:/app/multi_workflows_app # load local code change to container without the need of rebuild
      - ./logging.ini:/app/logging.ini
      # - ~/.aws/credentials:/home/appuser/.aws/credentials:ro  # use if want to load creds from /.aws/credentials
    platform: linux/amd64
    depends_on:
      control_plane:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./Dockerfile
    healthcheck:
      test: wget --no-verbose --tries=1 http://0.0.0.0:8001/ || exit 1
      interval: 30s
      retries: 5
      start_period: 20s
      timeout: 10s
