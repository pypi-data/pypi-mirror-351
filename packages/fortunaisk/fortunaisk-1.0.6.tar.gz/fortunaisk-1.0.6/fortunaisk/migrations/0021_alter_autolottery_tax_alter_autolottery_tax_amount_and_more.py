# Generated by Django 4.2.21 on 2025-05-30 20:04

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('eveonline', '0017_alliance_and_corp_names_are_not_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fortunaisk', '0007_add_new_schema_squashed_0020_alter_ticketanomaly_detail'),
    ]

    operations = [
        migrations.AlterField(
            model_name='autolottery',
            name='tax',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage of tax applied to the total pot before distribution.', max_digits=5, verbose_name='Tax (%)'),
        ),
        migrations.AlterField(
            model_name='autolottery',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount of tax (in ISK) computed from the gross pot.', max_digits=25, verbose_name='Tax Amount (ISK)'),
        ),
        migrations.AlterField(
            model_name='autolottery',
            name='winners_distribution',
            field=models.JSONField(blank=True, default=list, help_text='List of percentage distributions for winners (sum must be 100).', verbose_name='Winners Distribution'),
        ),
        migrations.AlterField(
            model_name='lottery',
            name='payment_receiver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lotteries', to='eveonline.evecorporationinfo', verbose_name='Payment Receiver'),
        ),
        migrations.AlterField(
            model_name='lottery',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], db_index=True, default='active', max_length=20, verbose_name='Lottery Status'),
        ),
        migrations.AlterField(
            model_name='lottery',
            name='tax',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage of tax applied to the gross pot before distribution.', max_digits=5, verbose_name='Tax (%)'),
        ),
        migrations.AlterField(
            model_name='lottery',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount of tax (in ISK) computed from the gross pot.', max_digits=25, verbose_name='Tax Amount (ISK)'),
        ),
        migrations.AlterField(
            model_name='lottery',
            name='total_pot',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total ISK pot from ticket purchases after tax.', max_digits=25, verbose_name='Total Pot (ISK)'),
        ),
        migrations.AlterField(
            model_name='processedpayment',
            name='character',
            field=models.ForeignKey(blank=True, help_text='EVE character (if identified).', null=True, on_delete=django.db.models.deletion.SET_NULL, to='eveonline.evecharacter', verbose_name='Eve Character'),
        ),
        migrations.AlterField(
            model_name='processedpayment',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Django user (if identified).', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Django User'),
        ),
        migrations.AlterField(
            model_name='ticketanomaly',
            name='detail',
            field=models.TextField(blank=True, default='', help_text='Resolution details.', null=True, verbose_name='Resolution Detail'),
        ),
        migrations.AlterField(
            model_name='ticketanomaly',
            name='solved',
            field=models.BooleanField(default=False, help_text='Anomaly marked as solved.', verbose_name='Solved'),
        ),
        migrations.AlterField(
            model_name='ticketanomaly',
            name='solved_at',
            field=models.DateTimeField(blank=True, help_text='Resolution date & time.', null=True, verbose_name='Solved At'),
        ),
        migrations.AlterField(
            model_name='ticketanomaly',
            name='solved_by',
            field=models.ForeignKey(blank=True, help_text='User who resolved the anomaly.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_anomalies', to=settings.AUTH_USER_MODEL, verbose_name='Solved By'),
        ),
        migrations.AlterField(
            model_name='webhookconfiguration',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhook_configurations', to=settings.AUTH_USER_MODEL, verbose_name='Created By'),
        ),
        migrations.AlterField(
            model_name='webhookconfiguration',
            name='name',
            field=models.CharField(blank=True, default='', help_text='A unique name for this webhook configuration.', max_length=100, unique=True, verbose_name='Configuration Name'),
        ),
        migrations.AlterField(
            model_name='webhookconfiguration',
            name='notification_config',
            field=models.JSONField(blank=True, default=list, help_text='Which events (by key) should be sent to this webhook.', verbose_name='Events to Notify'),
        ),
        migrations.AlterField(
            model_name='webhookconfiguration',
            name='ping_roles',
            field=models.JSONField(blank=True, default=list, help_text='List of Discord role IDs to mention when sending.', verbose_name='Ping Roles'),
        ),
        migrations.AlterField(
            model_name='webhookconfiguration',
            name='webhook_url',
            field=models.URLField(blank=True, help_text='The URL to post embeds and messages to.', null=True, verbose_name='Discord Webhook URL'),
        ),
        migrations.AlterField(
            model_name='winner',
            name='distributed_at',
            field=models.DateTimeField(blank=True, help_text='Prize distribution date & time.', null=True, verbose_name='Distributed At'),
        ),
        migrations.AlterField(
            model_name='winner',
            name='distributed_by',
            field=models.ForeignKey(blank=True, help_text='User who distributed the prize.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='distributed_winnings', to=settings.AUTH_USER_MODEL, verbose_name='Distributed By'),
        ),
    ]
