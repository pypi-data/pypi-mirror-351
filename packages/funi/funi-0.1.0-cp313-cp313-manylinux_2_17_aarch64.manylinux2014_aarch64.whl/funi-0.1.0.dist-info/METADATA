Metadata-Version: 2.2
Name: funi
Version: 0.1.0
Summary: Find unique float arrays.
Author-Email: Jaewook Lee <jaewooklee042@gmail.com>
License: MIT License
         
         Copyright (c) 2023 tataratat
         
         Permission is hereby granted, free of charge, to any person obtaining a copy
         of this software and associated documentation files (the "Software"), to deal
         in the Software without restriction, including without limitation the rights
         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         copies of the Software, and to permit persons to whom the Software is
         furnished to do so, subject to the following conditions:
         
         The above copyright notice and this permission notice shall be included in all
         copies or substantial portions of the Software.
         
         THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         SOFTWARE.
         
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Natural Language :: English
Classifier: Topic :: Scientific/Engineering
Project-URL: Homepage, https://github.com/tataratat/funi
Requires-Python: >=3.7
Requires-Dist: numpy
Description-Content-Type: text/markdown

# funi
Find UNIque float array rows.
[numpy.unique](https://numpy.org/doc/stable/reference/generated/numpy.unique.html) is an awesome function that alleviates headaches, fast.
Haven't you wished that it'd be applicable for 2D float arrays?
`funi` is here to help!
There are two available methods: `axis` and `lexicographic`.
`axis` will first project each array to an axis to sort, where as
`lexicographic` sorts given array in lexicographical manner.

## Install
```bash
pip install funi
```

## Quick Start
```python
import funi
import numpy as np

# create a random array with duplicating entries
arr = np.random.random((10000, 3))
arr = np.vstack((arr, arr, arr))
np.random.shuffle(arr)

# specify tolerance and if you want your unique ids to be stable sorted.
unique_data, unique_ids, inverse = funi.unique_rows(
    arr,
    tolerance=1e-11,
    sorted_index=True,
    method="axis",
)

# use ids to extract unique_data from the original array
assert np.allclose(unique_data, arr[unique_ids])

# use inverse to map unique_data back to the original array
assert np.allclose(arr, unique_data[inverse])

# sorted_index=True gives you sorted unique_ids and corresponding inverse
assert np.alltrue(np.sort(unique_ids) == unique_ids)
```
