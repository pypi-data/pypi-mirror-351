name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering
    inputs:
      test_pypi_only:
        description: 'Publish to TestPyPI only'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build hatch pytest pytest-mock
    
    - name: Install package dependencies
      run: |
        pip install -e .
    
    - name: Run tests
      run: |
        pytest tests/ -v
    
    - name: Test uvx compatibility
      run: |
        pip install uvx
        uvx --help  # Verify uvx is available
        # Test package can be built and executed
        python -m build
        pip install dist/*.whl
        python -c "import src.server; print('Import successful')"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        # Fetch full history for proper versioning
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build hatch
    
    - name: Verify package metadata
      run: |
        python -m build --check
        hatch version
    
    - name: Build package
      run: |
        python -m build
    
    - name: Verify build artifacts
      run: |
        ls -la dist/
        # Verify wheel contains expected files
        python -m zipfile -l dist/*.whl
        # Test installation from wheel
        pip install dist/*.whl
        python -c "import src.server; print('Package import successful')"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  publish-test:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || contains(github.ref, 'test') || github.event.inputs.test_pypi_only == 'true'
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        verbose: true
    
    - name: Test installation from TestPyPI
      run: |
        pip install uvx
        sleep 60  # Wait for package to be available
        # Test installation with explicit TestPyPI index
        pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ task-list-code-review-mcp
        python -c "import src.server; print('TestPyPI installation successful')"

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published' && !contains(github.ref, 'test')
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true
    
    - name: Verify PyPI publication
      run: |
        sleep 120  # Wait for package to be available on PyPI
        pip install uvx
        # Test installation with uvx
        uvx --from task-list-code-review-mcp --help || echo "Package may still be propagating"

  post-publish:
    needs: [publish-pypi]
    runs-on: ubuntu-latest
    if: success()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create success notification
      run: |
        echo "âœ… Package successfully published to PyPI"
        echo "ðŸ“¦ Installation: uvx --from task-list-code-review-mcp task-list-code-review-mcp"
        echo "ðŸ”— PyPI: https://pypi.org/project/task-list-code-review-mcp/"
    
    - name: Update release notes
      uses: actions/github-script@v6
      with:
        script: |
          const { owner, repo } = context.repo;
          const release_id = context.payload.release.id;
          
          const installInstructions = `
          ## Installation
          
          The package is now available on PyPI! Install using uvx:
          
          \`\`\`bash
          uvx --from task-list-code-review-mcp task-list-code-review-mcp
          \`\`\`
          
          Or install globally:
          
          \`\`\`bash
          pip install task-list-code-review-mcp
          task-list-code-review-mcp
          \`\`\`
          `;
          
          await github.rest.repos.updateRelease({
            owner,
            repo,
            release_id,
            body: context.payload.release.body + installInstructions
          });