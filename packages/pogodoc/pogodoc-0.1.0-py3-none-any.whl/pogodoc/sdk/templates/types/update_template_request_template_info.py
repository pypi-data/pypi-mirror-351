# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .update_template_request_template_info_categories_item import UpdateTemplateRequestTemplateInfoCategoriesItem
from .update_template_request_template_info_type import UpdateTemplateRequestTemplateInfoType


class UpdateTemplateRequestTemplateInfo(UniversalBaseModel):
    title: str
    description: str
    type: UpdateTemplateRequestTemplateInfoType
    sample_data: typing_extensions.Annotated[
        typing.Dict[str, typing.Optional[typing.Any]], FieldMetadata(alias="sampleData")
    ]
    source_code: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="sourceCode")] = None
    categories: typing.List[UpdateTemplateRequestTemplateInfoCategoriesItem]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
