# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawTokensClient, RawTokensClient


class TokensClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawTokensClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawTokensClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawTokensClient
        """
        return self._raw_client

    def delete_api_token(self, token_id: str, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Invalidates an API token by storing it in the deleted tokens S3 bucket, preventing future use of the token for authentication.

        Parameters
        ----------
        token_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from pogodoc import PogodocApi

        client = PogodocApi(
            token="YOUR_TOKEN",
        )
        client.tokens.delete_api_token(
            token_id="tokenId",
        )
        """
        _response = self._raw_client.delete_api_token(token_id, request_options=request_options)
        return _response.data


class AsyncTokensClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawTokensClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawTokensClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawTokensClient
        """
        return self._raw_client

    async def delete_api_token(self, token_id: str, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Invalidates an API token by storing it in the deleted tokens S3 bucket, preventing future use of the token for authentication.

        Parameters
        ----------
        token_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from pogodoc import AsyncPogodocApi

        client = AsyncPogodocApi(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.tokens.delete_api_token(
                token_id="tokenId",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_api_token(token_id, request_options=request_options)
        return _response.data
