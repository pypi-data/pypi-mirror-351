# ==============================================================================
# Python pipeline for ncw
# using components
# ==============================================================================

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE != "merge_request_event"


include:
  - component: $CI_SERVER_FQDN/blackstream-x/generic-components/meta-gitlab-security@~latest
  - component: $CI_SERVER_FQDN/blackstream-x/python-components/meta-uv-pipeline@feature/uv-version
    inputs:
      module-name: ncw
      uv-version: "0.7.8"
      mypy-args: "--exclude tools/"
      python-version: "3.13"
      python-variant: "alpine"
      pylint-args: "--disable=fixme --report=yes"
      relax-pylint: true
      pytest-rules:
        - if: $CI_COMMIT_TAG == null
      pytest-matrix:
        - TEST_PYTHON_VERSION: ["3.10", "3.11", "3.12"]
      publish-rules:
        - when: never


stages:
  - codestyle
  - test
  - pre-build
  - build
  - upload


.release-base:
  # Abstract base job for "release" jobs.
  # Extending jobs must define the following variables:
  # - PYPI_OIDC_AUD: Audience for the ID token that GitLab
  #   issues to the pipeline job
  # - PYPI_OIDC_URL: PyPI endpoint for retrieving a publish
  #   token with GitLabâ€™s ID token
  # - UV_PUBLISH_URL: PyPI endpoint for the actual upload
  stage: 'upload'
  extends: .uv:patch-version
  id_tokens:
    PYPI_ID_TOKEN:
      aud: '$PYPI_OIDC_AUD'
  script:
    # Use the GitLab ID token to retrieve an API token from PyPI
    - publish_token=$(uv run tools/ci_get_pypi_token.py)
    # Upload the files from "dist/"
    - uv publish --token "$publish_token"
    # Print the link to PyPI so we can quickly go there to verify the result:
    - version="$(uv version --short)"
    - 'echo -e "\033[34;1mPackage on PyPI:\033[0m ${CI_ENVIRONMENT_URL}${version}/"'


release-test:
  extends: '.release-base'
  rules:
    # Run in the main branch only
    - if: $CI_COMMIT_BRANCH == "main"
  environment:
    name: 'release-test'
    url: 'https://test.pypi.org/project/ncw/'
  variables:
    PYPI_OIDC_AUD: 'testpypi'
    PYPI_OIDC_URL: 'https://test.pypi.org/_/oidc/mint-token'
    UV_PUBLISH_URL: 'https://test.pypi.org/legacy/'


release:
  extends: '.release-base'
  rules:
    # Only run in tag pipelines:
    - if: '$CI_COMMIT_TAG'
  environment:
    name: 'release'
    url: 'https://pypi.org/project/ncw/'
  variables:
    PYPI_OIDC_AUD: 'pypi'
    PYPI_OIDC_URL: 'https://pypi.org/_/oidc/mint-token'
    UV_PUBLISH_URL: 'https://upload.pypi.org/legacy/'
