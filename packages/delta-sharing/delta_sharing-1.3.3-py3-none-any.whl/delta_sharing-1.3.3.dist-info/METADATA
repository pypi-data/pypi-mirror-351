Metadata-Version: 2.4
Name: delta-sharing
Version: 1.3.3
Summary: Python Connector for Delta Sharing
Home-page: https://github.com/delta-io/delta-sharing/
Author: The Delta Lake Project Authors
Author-email: delta-users@googlegroups.com
License: Apache-2.0
Project-URL: Source, https://github.com/delta-io/delta-sharing
Project-URL: Documentation, https://github.com/delta-io/delta-sharing
Project-URL: Issues, https://github.com/delta-io/delta-sharing/issues
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: NOTICE.txt
Requires-Dist: delta-kernel-rust-sharing-wrapper>=0.2.0
Requires-Dist: pandas
Requires-Dist: pyarrow>=16.1.0
Requires-Dist: fsspec>=0.7.4
Requires-Dist: requests
Requires-Dist: aiohttp
Requires-Dist: dataclasses; python_version < "3.8"
Requires-Dist: yarl>=1.6.0
Provides-Extra: s3
Requires-Dist: s3fs; extra == "s3"
Provides-Extra: abfs
Requires-Dist: adlfs; extra == "abfs"
Provides-Extra: adl
Requires-Dist: adlfs; extra == "adl"
Provides-Extra: gcs
Requires-Dist: gcsfs; extra == "gcs"
Provides-Extra: gs
Requires-Dist: gcsfs; extra == "gs"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Delta Sharing

[Delta Sharing](https://delta.io/sharing) is an open protocol for secure real-time exchange of large datasets, which enables secure data sharing across different computing platforms. It lets organizations share access to existing [Delta Lake](https://delta.io) and [Apache Parquet](https://parquet.apache.org) tables with other organizations, who can then directly read the table in Pandas, Apache Spark, or any other software that implements the open protocol.

This is the Python client library for Delta Sharing, which lets you load shared tables as [pandas](https://pandas.pydata.org/) DataFrames or as [Apache Spark](http://spark.apache.org/) DataFrames if running in PySpark with the [Apache Spark Connector library](https://github.com/delta-io/delta-sharing#set-up-apache-spark).

## Installation and Usage

1. Install using `pip install delta-sharing`.
    a. On some environments, you may also need to [install Rust](https://www.rust-lang.org/tools/install). This is because the `delta-sharing` package depends on the `delta-kernel-rust-sharing-wrapper` package, which does not have a pre-built Python wheel for all environments. As a result, pip will have to build `delta-kernel-rust-sharing-wrapper` from source.
2. To use the Python Connector, see [the project docs](https://github.com/delta-io/delta-sharing) for details.

## Documentation

This README only contains basic information about the Delta Sharing Python Connector. Please read [the project documentation](https://github.com/delta-io/delta-sharing) for full usage details.
