"use strict";(self.webpackChunk_jupyter_docprovider_extension=self.webpackChunk_jupyter_docprovider_extension||[]).push([[214],{734:(e,t,n)=>{n.d(t,{CW:()=>f,D7:()=>o,P1:()=>s,WD:()=>c,vZ:()=>u,wt:()=>r});const o=64,r=128,s=63,c=127,u=2147483647,f=4294967295},214:(e,t,n)=>{n.d(t,{Bw:()=>f,Fo:()=>a,Gu:()=>p,Qj:()=>b,xv:()=>u,zd:()=>h});var o=n(801),r=n(734),s=n(554);class c{constructor(){this.cpos=0,this.cbuf=new Uint8Array(100),this.bufs=[]}}const u=()=>new c,f=e=>{let t=e.cpos;for(let n=0;n<e.bufs.length;n++)t+=e.bufs[n].length;return t},a=e=>{const t=new Uint8Array(f(e));let n=0;for(let o=0;o<e.bufs.length;o++){const r=e.bufs[o];t.set(r,n),n+=r.length}return t.set(new Uint8Array(e.cbuf.buffer,0,e.cpos),n),t},l=(e,t)=>{const n=e.cbuf.length;e.cpos===n&&(e.bufs.push(e.cbuf),e.cbuf=new Uint8Array(2*n),e.cpos=0),e.cbuf[e.cpos++]=t},h=(e,t)=>{for(;t>r.WD;)l(e,r.wt|r.WD&t),t=o.RI(t/128);l(e,r.WD&t)},d=new Uint8Array(3e4),i=d.length/3,b=s.db&&s.db.encodeInto?(e,t)=>{if(t.length<i){const n=s.db.encodeInto(t,d).written||0;h(e,n);for(let t=0;t<n;t++)l(e,d[t])}else p(e,s.Af(t))}:(e,t)=>{const n=unescape(encodeURIComponent(t)),o=n.length;h(e,o);for(let t=0;t<o;t++)l(e,n.codePointAt(t))},p=(e,t)=>{h(e,t.byteLength),((e,t)=>{const n=e.cbuf.length,r=e.cpos,s=o.jk(n-r,t.length),c=t.length-s;e.cbuf.set(t.subarray(0,s),r),e.cpos+=s,c>0&&(e.bufs.push(e.cbuf),e.cbuf=new Uint8Array(o.T9(2*n,c)),e.cbuf.set(t.subarray(s)),e.cpos=c)})(e,t)};new DataView(new ArrayBuffer(4))},801:(e,t,n)=>{n.d(t,{RI:()=>o,T9:()=>s,jk:()=>r,n7:()=>c,sj:()=>u});const o=Math.floor,r=(Math.ceil,Math.abs,Math.imul,Math.round,Math.log10,Math.log2,Math.log,Math.sqrt,(e,t)=>e<t?e:t),s=(e,t)=>e>t?e:t,c=(Number.isNaN,Math.pow),u=(Math.sign,e=>0!==e?e<0:1/e<0)},554:(e,t,n)=>{n.d(t,{Af:()=>f,QV:()=>o,db:()=>u,jN:()=>c,tv:()=>a});const o=String.fromCharCode,r=(String.fromCodePoint,o(65535),/^\s*/g),s=/([A-Z])/g,c=(e,t)=>(e=>e.replace(r,""))(e.replace(s,(e=>`${t}${(e=>e.toLowerCase())(e)}`))),u="undefined"!=typeof TextEncoder?new TextEncoder:null,f=u?e=>u.encode(e):e=>{const t=unescape(encodeURIComponent(e)),n=t.length,o=new Uint8Array(n);for(let e=0;e<n;e++)o[e]=t.codePointAt(e);return o};let a="undefined"==typeof TextDecoder?null:new TextDecoder("utf-8",{fatal:!0,ignoreBOM:!0});a&&1===a.decode(new Uint8Array).length&&(a=null)}}]);