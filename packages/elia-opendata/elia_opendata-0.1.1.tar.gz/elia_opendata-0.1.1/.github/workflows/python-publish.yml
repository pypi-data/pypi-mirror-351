name: Python Package

# This workflow will:
# 1. Be manually triggered via GitHub Actions UI
# 2. Check out the 'release' branch
# 3. Build the package
# 4. Publish to PyPI

on:
  # This allows manual triggering from the Actions tab
  workflow_dispatch:
    inputs:
      confirm_release_branch:
        description: 'Confirm you want to deploy from release branch'
        required: true
        type: boolean
        default: true

jobs:
  build-and-publish:
    # Only run the job if confirmation is true
    if: ${{ inputs.confirm_release_branch }}
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release  # Always use the release branch
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      
      - name: Get version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep -E "version\s*=\s*" pyproject.toml | sed -E 's/.*version\s*=\s*"([^"]+)".*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version found: $VERSION"
      
      - name: Clean previous build artifacts
        run: |
          rm -rf build/ dist/ *.egg-info/
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Verify built distributions
        run: |
          echo "Files built for distribution:"
          ls -la dist/
          python -m twine check dist/*
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          password: ${{ secrets.PYPI_TOKEN }}
          # Use this option if you want to skip existing versions instead of failing
          # skip-existing: true