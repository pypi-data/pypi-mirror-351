"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .stagefiletypeenum import StageFileTypeEnum
from flowai_sdk.types import BaseModel
from flowai_sdk.utils import FieldMetadata, MultipartFormMetadata
import io
import pydantic
from typing import IO, List, Optional, Union
from typing_extensions import Annotated, NotRequired, TypedDict


class FileTypedDict(TypedDict):
    file_name: str
    content: Union[bytes, IO[bytes], io.BufferedReader]
    content_type: NotRequired[str]


class File(BaseModel):
    file_name: Annotated[
        str, pydantic.Field(alias="fileName"), FieldMetadata(multipart=True)
    ]

    content: Annotated[
        Union[bytes, IO[bytes], io.BufferedReader],
        pydantic.Field(alias=""),
        FieldMetadata(multipart=MultipartFormMetadata(content=True)),
    ]

    content_type: Annotated[
        Optional[str],
        pydantic.Field(alias="Content-Type"),
        FieldMetadata(multipart=True),
    ] = None


class BodyCreateStagesForProjectStagesPostTypedDict(TypedDict):
    files: List[FileTypedDict]
    source_type: StageFileTypeEnum
    project_id: str


class BodyCreateStagesForProjectStagesPost(BaseModel):
    files: Annotated[List[File], FieldMetadata(multipart=True)]

    source_type: Annotated[StageFileTypeEnum, FieldMetadata(multipart=True)]

    project_id: Annotated[str, FieldMetadata(multipart=True)]
