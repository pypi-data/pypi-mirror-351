[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "qageneratorllm"
version = "0.1.3a"
description = "A Python package for generating educational questions and answers using various LLM providers."
readme = "README.md"
authors = [
    {name = "Alex Kameni", email = "kamenialexnea@gmail.com"}
]
requires-python = ">=3.10,<4.0"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
keywords = ["education", "llm", "questions", "ai", "mcq", "quiz"]
dependencies = [
    "pydantic",
    "langchain-ollama",
    "langchain-xai",
    "langchain-openai",
    "langchain-anthropic",
    "langchain",
    "llm-output-parser",
    "node-chunker",
    "langchain-groq>=0.3.2",
]

[project.urls]
Homepage = "https://github.com/KameniAlexNea/create-dataset"
Repository = "https://github.com/KameniAlexNea/create-dataset"
"Bug Tracker" = "https://github.com/KameniAlexNea/create-dataset/issues"

[project.optional-dependencies]
test = [
    "pytest>=8.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
]
dev = [
    "tox",
    "sphinx",
    "wheel",
    "twine",
    "build",
    "pickleshare",
    "black>=23.0,<25.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "codespell>=2.2.0",
    "pre-commit>=3.0",
    "safety",
    "coverage>=5.0",
    "gradio>=5.30.0",
]


[project.scripts]
qa-generator = "qageneratorllm.generator:main"

[tool.hatch.build.targets.wheel]
packages = ["qageneratorllm"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.black]
line-length = 88
target-version = ['py310', 'py311']

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",
    "W",
    "F",
    "I",
    "ANN",
    "B",
    "C4",
    "PT",
    "RUF",
]
ignore = [
    "ANN101",
    "ANN102",
    "E501",
]

[tool.ruff.lint.isort]
known-first-party = ["qageneratorllm"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
plugins = "pydantic.mypy"

[[tool.mypy.overrides]]
module = "pydantic.*"
ignore_missing_imports = true


[tool.codespell]
skip = "*.json,*.jsonl,*.csv,*.ipynb,./.git,./.mypy_cache,./.pytest_cache,./.ruff_cache,./build,./dist,./*.egg-info,./venv"
ignore-words-list = ""
check-filenames = true
check-hidden = true
