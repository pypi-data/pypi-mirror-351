#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ ChromaDB
"""

import chromadb
from datetime import datetime

def test_chroma_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –≤ ChromaDB"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ ChromaDB...")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print()
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ ChromaDB
        chroma_client = chromadb.PersistentClient(path='./chroma')
        collection = chroma_client.get_collection("telegram_group_messages")
        
        print(f"üìä –í—Å–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: {collection.count()}")
        print()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏
        all_docs = collection.get(include=['documents', 'metadatas'])
        
        print("üìÑ –í—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –±–∞–∑–µ:")
        for i, (doc, meta) in enumerate(zip(all_docs['documents'], all_docs['metadatas']), 1):
            print(f"\n{i}. –î–æ–∫—É–º–µ–Ω—Ç:")
            print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {meta.get('source', 'unknown')}")
            print(f"   –¢–∏–ø: {meta.get('message_type', 'unknown')}")
            print(f"   URL: {meta.get('original_url', '–Ω–µ—Ç')}")
            print(f"   –í—Ä–µ–º—è: {meta.get('timestamp', 'unknown')[:16]}")
            print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {doc[:200]}...")
        
        print("\n" + "="*50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ GitHub
        print("\nüîç –ü–æ–∏—Å–∫ GitHub —Å—Å—ã–ª–æ–∫:")
        github_results = collection.query(
            query_texts=["github repository code"],
            n_results=5,
            include=['documents', 'metadatas']
        )
        
        if github_results['documents'][0]:
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(github_results['documents'][0])} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for i, (doc, meta) in enumerate(zip(github_results['documents'][0], github_results['metadatas'][0]), 1):
                print(f"\n{i}. GitHub —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
                print(f"   URL: {meta.get('original_url', '–Ω–µ—Ç')}")
                print(f"   –¢–∏–ø: {meta.get('message_type', 'unknown')}")
                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {doc[:150]}...")
        else:
            print("‚ùå GitHub —Å—Å—ã–ª–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        print("\n" + "="*50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—â–∏–π –ø–æ–∏—Å–∫
        print("\nüîç –û–±—â–∏–π –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º:")
        general_results = collection.query(
            query_texts=["–∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞"],
            n_results=3,
            include=['documents', 'metadatas']
        )
        
        if general_results['documents'][0]:
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(general_results['documents'][0])} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
            for i, (doc, meta) in enumerate(zip(general_results['documents'][0], general_results['metadatas'][0]), 1):
                print(f"\n{i}. –†–µ–∑—É–ª—å—Ç–∞—Ç:")
                print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {meta.get('source', 'unknown')}")
                print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {doc[:150]}...")
        else:
            print("‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_chroma_search() 