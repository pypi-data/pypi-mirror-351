[project]
name = "mcp-kubectl"
version = "1.1.0"
description = "A Model Context Protocol (MCP) server for Kubernetes"
readme = "README.md"
license = "Apache-2.0"
authors = [
    { name = "Rohit Ghumare", email = "your.email@example.com" }
]
keywords = ["kubernetes", "mcp", "ai", "kubectl", "model-context-protocol"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
requires-python = ">=3.10"
dependencies = [
    "aiohttp>=3.8.0",
    "aiohttp-sse>=2.1.0",
    "cryptography>=42.0.2",
    "fastapi>=0.100.0",
    "jsonschema>=4.20.0",
    "kubernetes>=28.1.0",
    "mcp>=1.5.0",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.1",
    "requests>=2.31.0",
    "rich>=13.0.0",
    "urllib3>=2.1.0",
    "uvicorn>=0.22.0",
    "websocket-client>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/rohitg00/kubectl-mcp-server"
Documentation = "https://github.com/rohitg00/kubectl-mcp-server/blob/main/docs/README.md"
Repository = "https://github.com/rohitg00/kubectl-mcp-server.git"
Issues = "https://github.com/rohitg00/kubectl-mcp-server/issues"
Changelog = "https://github.com/rohitg00/kubectl-mcp-server/blob/main/CHANGES.md"

[project.scripts]
mcp-kubectl = "mcp_kubectl.cli:main"

[dependency-groups]
dev = [
    "black>=23.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "twine>=6.1.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mcp_kubectl"]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--verbose",
]

