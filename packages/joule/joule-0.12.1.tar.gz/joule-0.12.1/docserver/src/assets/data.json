[
    {
        "author": "John Donnal",
        "description": "read data from file or named pipe",
        "inputs": "<p>None</p>",
        "license": "Open",
        "module_config": "[Main]\nname = Random Reader\nexec_cmd = joule-file-reader /name/of/file\n\n[Arguments]\ntimestamps = yes # [yes|no]\n\n[Outputs]\noutput = /path/to/output",
        "name": "File Reader",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\">float32 with N elements auto detected from input source</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = File Data\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n# [width] number of elements\n[Element1]\nname = Data Column 1\n\n[Element2]\nname = Data Column 2\n\n#additional elements...",
                "name": "output"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/joule.git</p>",
        "usage": "<p>Read data in from a file or a named pipe.\nOptionally add timestamps to data (note, this should only be\nused for real time sources. The 8us difference in example below\nis the actual time taken to read the file line)</p>\n<p>Example:</p>\n<pre><code class=\"python\">  $&gt; cat /tmp/file\n  3 4\n  4 6\n  $&gt; joule-file-reader --timestamps=yes /tmp/file\n  1485274825371860 3.0 4.0\n  1485274825371868 5.0 6.0\n</code></pre>"
    },
    {
        "author": "John Donnal",
        "description": "adjustable moving average",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">input</dt>\n<dd class=\"col-sm-9\"><strong><any type=\"\"></any></strong> with N elements</dd>\n</dl>",
        "license": "Open",
        "module_config": "[Main]\nname = Mean Filter\nexec_cmd = joule-mean-filter\n\n[Arguments]\nwindow = 11 # must be odd\n\n[Inputs]\ninput = /path/to/input \n\n[Outputs]\noutput = /path/to/output",
        "name": "Mean Filter",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><strong>float32</strong> with N elements</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Raw Data\npath = /path/to/input\ndatatype = int32\nkeep = 1w\n\n[Element1]\nname = Element 1\n\n[Element2]\nname = Element 2\n\n#additional elements...",
                "name": "input"
            },
            {
                "config": "[Main]\nname = Filtered Data\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n#same number of elements as input\n[Element1]\nname = Element 1\n\n[Element2]\nname = Element 2\n\n#additional elements...",
                "name": "output"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/joule.git</p>",
        "usage": "<p>Apply a moving average to the input stream with an\nadjustable window size</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>window</code></td>\n<td>samples to average, must be odd</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">input</dt>\n<dd class=\"col-sm-9\"><strong><any type=\"\"></any></strong> with N elements</dd>\n</dl>",
        "license": "Open",
        "module_config": "[Main]\nname = Mean Filter\nexec_cmd = joule-median-filter\n\n[Arguments]\nwindow = 11 # must be odd\n\n[Inputs]\ninput = /path/to/input\n\n[Outputs]\noutput = /path/to/output",
        "name": "Median Filter",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><strong>float32</strong> with N elements</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Filtered Data\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n#same number of elements as input\n[Element1]\nname = Element 1\n\n[Element2]\nname = Element 2\n\n#additional elements...",
                "name": "output"
            },
            {
                "config": "[Main]\nname = Raw Data\npath = /path/to/input\ndatatype = int32\nkeep = 1w\n\n[Element1]\nname = Element 1\n\n[Element2]\nname = Element 2\n\n#additional elements...",
                "name": "input"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/joule.git</p>",
        "usage": "<p>Apply a windowed median filter to the input stream.</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>window</code></td>\n<td>samples to average, must be odd</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal",
        "inputs": "<p>None</p>",
        "license": "Closed",
        "module_config": "[Main]\nname = NILM Reader\nexec_cmd = nilm-reader\n\n[Arguments]\nmax-gap = 10\nalign-with-clock = yes\nmeter-type = noncontact\ntty = /dev/nilm/meter001-data\n\n[Outputs]\noutput = /path/to/output",
        "name": "NILM Reader",
        "outputs": "<p>Noncontact Meter:</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><code>int16</code> with 8 elements @ 3kHz</dd>\n</dl>\n<p>Contact Meter:</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><code>uint16</code> with 6 elements @ 8kHz</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Raw\npath = /path/to/output\ndatatype = int16\nkeep = 1w\n\n# for D-Board configuration\n[Element1]\nname = dE-Field 1\n[Element2]\nname = B-Field 1\n[Element3]\nname = dE-Field 2\n[Element4]\nname = B-Field 2\n[Element5]\nname = dE-Field 3\n[Element6]\nname = B-Field 3\n[Element7]\nname = dE-Field 4\n[Element8]\nname = B-Field 4",
                "name": "output (noncontact)"
            },
            {
                "config": "[Main]\nname = Raw\npath = /path/to/output\ndatatype = uint16\nkeep = 1w\n\n# data is in ADC counts\n[Element1]\nname = Current A\n[Element2]\nname = Current B\n[Element3]\nname = Current C\n[Element4]\nname = Voltage A\n[Element5]\nname = Voltage B\n[Element6]\nname = Voltage C",
                "name": "output (contact)"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/nilm.git</p>",
        "usage": "<p>Capture data from NILM acquisition devices (contact or non-contact)</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>max-gap</code></td>\n<td>10</td>\n<td>max seconds between sample ts and clock</td>\n</tr>\n<tr>\n<td><code>align-with-clock</code></td>\n<td>yes</td>\n<td>[<strong>yes</strong>,<strong>no</strong>] align samples with system clock</td>\n</tr>\n<tr>\n<td><code>meter-type</code></td>\n<td>--</td>\n<td>[<strong>contact</strong>,<strong>noncontact</strong>] required parameter</td>\n</tr>\n<tr>\n<td><code>ip-address</code></td>\n<td>192.168.1.209</td>\n<td>contact meter IP address</td>\n</tr>\n<tr>\n<td><code>tty</code></td>\n<td>--</td>\n<td>non-contact meter serial port</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal",
        "description": "convert raw data to I/V",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">raw</dt>\n<dd class=\"col-sm-9\">output from nilm-reader module</dd>\n</dl>",
        "license": "Closed",
        "module_config": "[Main]\nname = NILM Reconstructor\nexec_cmd = nilm-filter-reconstructor\n\n[Arguments]\nm-indices = [1,2,3]\ne-indices = [4,5,6]\nmax-gap = 10\ncurrent-matrix = [[1,0,0],[0,1,0],[0,0,1]]\nvoltage-matrix = [[1,0,0],[0,1,0],[0,0,1]]\n\n[Inputs]\nraw = /path/to/raw\n\n[Outputs]\niv = /path/to/iv",
        "name": "NILM Reconstructor",
        "outputs": "<p>Noncontact Meter:</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><code>float32</code> with voltage reference and phase currents</dd>\n</dl>\n<p>Contact Meter:</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\"><code>float32</code> with phase voltages and phase currents</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = I/V\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n# for 3 phase\n[Element1]\nname = Vref\n[Element2]\nname = I A\n[Element3]\nname = I B\n[Element4]\nname = I C",
                "name": "output (noncontact)"
            },
            {
                "config": "[Main]\nname = I/V\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n# for 3 phase\n[Element1]\nname = Current A\n[Element2]\nname = Current B\n[Element3]\nname = Current C\n[Element4]\nname = Voltage A\n[Element5]\nname = Voltage B\n[Element6]\nname = Voltage C",
                "name": "output (contact)"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/nilm.git</p>",
        "usage": "<p>Convert data collected by nilm-reader into current (I) and voltage (V)</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>m-indices</code></td>\n<td>--</td>\n<td>magnetic sensors <em>json array</em> (1 indexed)</td>\n</tr>\n<tr>\n<td><code>e-indices</code></td>\n<td>--</td>\n<td>e-field sensors (1 indexed)</td>\n</tr>\n<tr>\n<td><code>max-gap</code></td>\n<td>10</td>\n<td>max seconds between sample ts and clock</td>\n</tr>\n<tr>\n<td><code>current-matrix</code></td>\n<td>--</td>\n<td>convert sensors to currents</td>\n</tr>\n<tr>\n<td><code>integrate</code></td>\n<td>yes</td>\n<td>integrate e-field <em>non-contact only</em></td>\n</tr>\n<tr>\n<td><code>voltage-scale</code></td>\n<td>1.0</td>\n<td>e-field scale factor <em>non-contact only</em></td>\n</tr>\n<tr>\n<td><code>voltage-matrix</code></td>\n<td>--</td>\n<td>convert sensors to voltages <em>contact only</em></td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal, James Paris",
        "description": "characterize a voltage waveform",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">iv</dt>\n<dd class=\"col-sm-9\">voltage source (output from nilm-reconstructor)</dd>\n</dl>",
        "license": "Closed",
        "module_config": "[Main]\nname = NILM Sinefit\nexec_cmd = nilm-filter-sinefit\n\n[Arguments]\nv-index = 1\nfrequency = 60\nmin-freq = 55\nmax-freq = 65\nmin-amp = 10\n\n[Inputs]\niv = /path/to/iv\n\n[Outputs]\nzero_crossings = /path/to/zero_crossings",
        "name": "NILM Sinefit",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">zero_crossings</dt>\n<dd class=\"col-sm-9\"><code>float32</code> with phase, amplitude and offset elements</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Zero Crossings\npath = /path/to/zero_crossings\ndatatype = float32\nkeep = 1w\n\n[Element1]\nname = Amplitude\n[Element2]\nname = Offset\n[Element3]\nname = Phase",
                "name": "zero_crossings"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/nilm.git</p>",
        "usage": "<p>Compute phase, amplitude and offset at each zero crossing of a signal.</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>v-index</code></td>\n<td>--</td>\n<td>voltage element (1 indexed)</td>\n</tr>\n<tr>\n<td><code>frequency</code></td>\n<td>60</td>\n<td>utility line frequency</td>\n</tr>\n<tr>\n<td><code>min-freq</code></td>\n<td>65</td>\n<td>reject frequencies below threshold</td>\n</tr>\n<tr>\n<td><code>max-freq</code></td>\n<td>55</td>\n<td>reject frequencies above threshold</td>\n</tr>\n<tr>\n<td><code>min-amp</code></td>\n<td>10</td>\n<td>reject signals below threshold</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal, James Paris",
        "description": "compute power spectral envelopes",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">iv</dt>\n<dd class=\"col-sm-9\">current data (nilm-reconstructor)</dd>\n<dt class=\"col-sm-3 text-truncate\">zero_crossings</dt>\n<dd class=\"col-sm-9\">phase, amplitude and offset data (nilm-sinefit)</dd>\n</dl>",
        "license": "Closed",
        "module_config": "[Main]\nname = NILM Prep\nexec_cmd = nilm-filter-prep\n\n[Arguments]\ncurrent-indices = [1,2,3]\nrotations = [0, 120, 240]\nscale-factor = 120\nmerge = yes\npolar = no\n\n[Inputs]\niv = /path/to/iv\nzero_crossings = /path/to/zero_crossings\n\n[Outputs]\nprep = /path/to/prep",
        "name": "NILM Prep",
        "outputs": "<p>for merged 3 phase</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">prep</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1A, Q1A, ..., P1B, Q1B, ... P1C, Q1C, ...]</dd>\n</dl>\n<p>for unmerged 3 phase</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">prep-a</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n<dt class=\"col-sm-3 text-truncate\">prep-b</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n<dt class=\"col-sm-3 text-truncate\">prep-c</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Prep\npath = /path/to/prep\ndatatype = float32\nkeep = 1w\n\n# Phase A\n[Element1]\nname = P1A\n[Element2]\nname = Q1A\n[Element1]\nname = P3A\n[Element2]\nname = Q3A\n[Element1]\nname = P5A\n[Element2]\nname = Q5A\n[Element1]\nname = P7A\n[Element2]\nname = Q7A\n\n# Phase B\n[Element1]\nname = P1B\n[Element2]\nname = Q1B\n[Element1]\nname = P3B\n[Element2]\nname = Q3B\n[Element1]\nname = P5B\n[Element2]\nname = Q5B\n[Element1]\nname = P7B\n[Element2]\nname = Q7B\n\n# Phase C\n[Element1]\nname = P1C\n[Element2]\nname = Q1C\n[Element1]\nname = P3C\n[Element2]\nname = Q3C\n[Element1]\nname = P5C\n[Element2]\nname = Q5C\n[Element1]\nname = P7C\n[Element2]\nname = Q7C",
                "name": "prep (merged)"
            },
            {
                "config": "[Main]\nname = Prep A\npath = /path/to/prep-a\ndatatype = float32\nkeep = 1w\n\n[Element1]\nname = P1\n[Element2]\nname = Q1\n[Element1]\nname = P3\n[Element2]\nname = Q3\n[Element1]\nname = P5\n[Element2]\nname = Q5\n[Element1]\nname = P7\n[Element2]\nname = Q7",
                "name": "prep-a (unmerged)"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/nilm.git</p>",
        "usage": "<p>Compute real and reactive envelopes of a current waveform</p>\n<p>'current_indices':  [N,] #current columns (1 indexed)\n  'rotations': [N.0,] #voltage angles for each phase\n  'nshift': 1         #amount to shift window\n  'nharm': 4          #number of odd harmonics to compute\n  'scale_factor': 1.0 #scale result to watts\n  'merge': True       #set to use a single prep output stream\n  'polar': False      #compute polar data (mag/phase) instead of PQ</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>current-indices</code></td>\n<td>--</td>\n<td>up to three current elements (1 indexed)</td>\n</tr>\n<tr>\n<td><code>rotations</code></td>\n<td>--</td>\n<td>voltage angle for each current (degrees)</td>\n</tr>\n<tr>\n<td><code>nshift</code></td>\n<td>1</td>\n<td>amount to shift window</td>\n</tr>\n<tr>\n<td><code>nharm</code></td>\n<td>4</td>\n<td>number of odd harmonics to compute</td>\n</tr>\n<tr>\n<td><code>scale-factor</code></td>\n<td>1.0</td>\n<td>scale result to watts (RMS voltage)</td>\n</tr>\n<tr>\n<td><code>merge</code></td>\n<td>yes</td>\n<td>[yes</td>\n</tr>\n<tr>\n<td><code>polar</code></td>\n<td>no</td>\n<td>[yes</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal, James Paris",
        "description": "run the full filter stack",
        "inputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">raw</dt>\n<dd class=\"col-sm-9\">output from nilm-reader module</dd>\n</dl>",
        "license": "Closed",
        "module_config": "[Main]\nname = NILM RawToPrep\nexec_cmd = nilm-filter-rawtoprep\n\n[Arguments]\nmeter = meter1\nmerge = yes\npolar = no\n\n[Inputs]\nraw = /path/to/raw\n\n[Outputs]\nzero_crossings = /path/to/zero_crossings\nprep = /path/to/prep\n# for unmerged prep specify prep-a, prep-b, etc.",
        "name": "NILM RawToPrep",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">zero_crossings</dt>\n<dd class=\"col-sm-9\"><code>float32</code> with phase, amplitude and offset elements</dd>\n</dl>\n<p>for merged 3 phase</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">prep</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1A, Q1A, ..., P1B, Q1B, ... P1C, Q1C, ...]</dd>\n</dl>\n<p>for unmerged 3 phase</p>\n<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">prep-a</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n<dt class=\"col-sm-3 text-truncate\">prep-b</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n<dt class=\"col-sm-3 text-truncate\">prep-c</dt>\n<dd class=\"col-sm-9\"><code>float32</code> [P1, Q1, ... P7, Q7]</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Prep A\npath = /path/to/prep-a\ndatatype = float32\nkeep = 1w\n\n[Element1]\nname = P1\n[Element2]\nname = Q1\n[Element1]\nname = P3\n[Element2]\nname = Q3\n[Element1]\nname = P5\n[Element2]\nname = Q5\n[Element1]\nname = P7\n[Element2]\nname = Q7",
                "name": "prep-a (unmerged)"
            },
            {
                "config": "[Main]\nname = Zero Crossings\npath = /path/to/zero_crossings\ndatatype = float32\nkeep = 1w\n\n[Element1]\nname = Amplitude\n[Element2]\nname = Offset\n[Element3]\nname = Phase",
                "name": "zero_crossings"
            },
            {
                "config": "[Main]\nname = Prep\npath = /path/to/prep\ndatatype = float32\nkeep = 1w\n\n# Phase A\n[Element1]\nname = P1A\n[Element2]\nname = Q1A\n[Element1]\nname = P3A\n[Element2]\nname = Q3A\n[Element1]\nname = P5A\n[Element2]\nname = Q5A\n[Element1]\nname = P7A\n[Element2]\nname = Q7A\n\n# Phase B\n[Element1]\nname = P1B\n[Element2]\nname = Q1B\n[Element1]\nname = P3B\n[Element2]\nname = Q3B\n[Element1]\nname = P5B\n[Element2]\nname = Q5B\n[Element1]\nname = P7B\n[Element2]\nname = Q7B\n\n# Phase C\n[Element1]\nname = P1C\n[Element2]\nname = Q1C\n[Element1]\nname = P3C\n[Element2]\nname = Q3C\n[Element1]\nname = P5C\n[Element2]\nname = Q5C\n[Element1]\nname = P7C\n[Element2]\nname = Q7C",
                "name": "prep (merged)"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/nilm.git</p>",
        "usage": "<p>This is a composite module that runs nilm-reconstructor, nilm-sinefit,\nand nilm-prep. It uses the settings in meters.yml to\ninitialize the modules. In most use cases this is preferred over\nrunning the modules individually</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>meter</code></td>\n<td>--</td>\n<td>meter name in meters.yml</td>\n</tr>\n<tr>\n<td><code>config-file</code></td>\n<td>/opt/configs/meters.yml</td>\n<td>location of meters.yml</td>\n</tr>\n<tr>\n<td><code>calibration-file</code></td>\n<td>--</td>\n<td>(optional) specify calibration file directly</td>\n</tr>\n<tr>\n<td><code>calibration-directory</code></td>\n<td>/opt/configs/meters</td>\n<td>location of calibration files</td>\n</tr>\n<tr>\n<td><code>merge-prep</code></td>\n<td>yes</td>\n<td>[yes</td>\n</tr>\n<tr>\n<td><code>polar</code></td>\n<td>no</td>\n<td>[yes</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal",
        "description": "generate a random data stream",
        "inputs": "<p>None</p>",
        "license": "Open",
        "module_config": "[Main]\nname = Random Reader\nexec_cmd = joule modules random-reader\n\n[Arguments]\nwidth = 4\nrate = 10 #Hz\n\n[Outputs]\noutput = /path/to/output",
        "name": "Random Reader",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\">float32 with N elements specified by [width] argument</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = Random Data\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n# [width] number of elements\n[Element1]\nname = Random Set 1\n\n[Element2]\nname = Random Set 2\n\n#additional elements...",
                "name": "output"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/joule.git</p>",
        "usage": "<p>This is a module that generates random numbers.\nSpecify width (number of elements) and the rate in Hz.</p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>width</code></td>\n<td>number of elements</td>\n</tr>\n<tr>\n<td><code>rate</code></td>\n<td>data rate in Hz</td>\n</tr>\n</tbody>\n</table>"
    },
    {
        "author": "John Donnal",
        "description": "Read analog FIO/EIO channels on U3 LabJack",
        "inputs": "<p>None</p>",
        "license": "Open",
        "module_config": "[Main]\nname = LabJack U3 Reader\nexec_cmd = labjack_u3\n\n[Arguments]\n#valid values are [0-15]\nchannels = 0,1,2 \n#data rate in Hz\nrate = 500\n\n[Inputs]\n#none\n\n[Outputs]\noutput = /path/to/output",
        "name": "LabJack U3 Reader",
        "outputs": "<dl class=\"row\">\n<dt class=\"col-sm-3 text-truncate\">output</dt>\n<dd class=\"col-sm-9\">float32 with N elements specified by [channels] argument</dd>\n</dl>",
        "stream_configs": [
            {
                "config": "[Main]\nname = LabJack Data\npath = /path/to/output\ndatatype = float32\nkeep = 1w\n\n# [channels] number of elements\n# units are voltages\n[Element1]\nname = Channel 0\nunits = V \n\n[Element2]\nname = Channel 1\nunits = V \n\n[Element3]\nname = Channel 2\nunits = V \n\n#additional elements...",
                "name": "output"
            }
        ],
        "url": "<p>http://git.wattsworth.net/wattsworth/labjack_modules.git</p>",
        "usage": "<p>Read analog data from FIO and EIO channels on the U3 LabJack. The\nFIO channels are on screw terminals and the EIO channels are available \non the expansion board connector. On the HV model FIO0-3\nare marked AIN0-3 and accept voltages between +/- 10V. All other channels\nare 0-2.44V. <em>Specify at least 2 channels</em></p>\n<table class=\"table table-sm table-bordered\">\n<thead>\n<tr>\n<th>Arguments</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>channels</code></td>\n<td>comma separated channel numbers (0-15)</td>\n</tr>\n<tr>\n<td><code>rate</code></td>\n<td>data rate in Hz</td>\n</tr>\n</tbody>\n</table>"
    }
]