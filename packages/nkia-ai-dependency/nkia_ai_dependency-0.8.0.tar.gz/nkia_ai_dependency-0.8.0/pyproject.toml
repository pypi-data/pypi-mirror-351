[tool.poetry]
name = "nkia-ai-dependency"
version = "0.8.0"
description = "NKIA AI Shared Dependency"
authors = ["hjyang <hjyang@nkia.co.kr>"]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.all]
optional = true

[tool.poetry.group.all.dependencies]
pandas = "2.2.2"
numpy = "1.26.4"
statsmodels = "0.14.1"
more-itertools = "10.2.0"
pytimekr = "0.1.0"
scipy = "1.13.0"
scikit-learn = "1.3.2"
pytz = "2024.1"
pytest = "8.3.2"
networkx = "3.1"
seaborn = "0.13.2"
fastapi = "0.109.2"
gunicorn = "21.2.0"
uvicorn = "0.27.1"
httpx = "0.25.2"
python-dotenv = "1.0.1"
pydantic = "2.11.4"
aiohttp = "3.9.3"
redis = "3.5.3"
redis-py-cluster = "2.1.3"
cassandra-driver = "3.29.0"
elasticsearch = "7.15.1"
pymongo = "4.12.1"

[tool.poetry.extras]
metricanomaly = [
    "pandas", 
    "numpy", 
    "statsmodels", 
    "more-itertools", 
    "pytimekr", 
    "scipy", 
    "scikit-learn", 
    "pytz", 
    "pytest"
]
processrca = [
    "pandas", 
    "numpy", 
    "networkx", 
    "scipy", 
    "statsmodels", 
    "scikit-learn", 
    "pytest"
]
threcommender = [
    "pandas", 
    "numpy", 
    "more-itertools", 
    "scipy", 
    "seaborn", 
    "pytest"
]
staticthreshold = [
    "pandas", 
    "numpy", 
    "more-itertools", 
    "pytest"
]
deploy = [
    "fastapi", 
    "gunicorn", 
    "uvicorn", 
    "httpx", 
    "pandas", 
    "numpy", 
    "python-dotenv", 
    "pydantic", 
    "aiohttp", 
    "redis", 
    "redis-py-cluster", 
    "cassandra-driver", 
    "elasticsearch", 
    "pymongo", 
    "pytest"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"