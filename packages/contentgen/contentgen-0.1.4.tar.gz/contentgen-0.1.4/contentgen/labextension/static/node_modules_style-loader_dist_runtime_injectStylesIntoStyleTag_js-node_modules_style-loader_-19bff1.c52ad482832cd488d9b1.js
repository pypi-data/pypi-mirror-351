"use strict";
(self["webpackChunkcontentgen"] = self["webpackChunkcontentgen"] || []).push([["node_modules_style-loader_dist_runtime_injectStylesIntoStyleTag_js-node_modules_style-loader_-19bff1"],{

/***/ "./node_modules/css-loader/dist/cjs.js!./style/base.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./style/base.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/sourceMaps.js */ "./node_modules/css-loader/dist/runtime/sourceMaps.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js");
/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);
// Imports


var ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));
// Module
___CSS_LOADER_EXPORT___.push([module.id, `/*
    See the JupyterLab Developer Guide for useful CSS Patterns:

    https://jupyterlab.readthedocs.io/en/stable/developer/css.html
*/

/* Arrange elements in a vertical stack */
.chatbot-panel {
    padding: 16px;
    height: 100%;
    display: flex;
    flex-direction: column;
    min-width: 25vw;
}

/* Title styling */
.chatbot-title {
    text-align: center;
    padding: 10px;
    border-bottom: 1px solid #e0e0e0;
    margin-bottom: 16px;
}

/* Container for the prompt box and return button */
.input-container {
    display: flex;
    gap: 8px;
    padding: 10px;
    margin-top: auto;
}

/* Style for the input box */
.input-container input {
    flex: 1;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

/* Style for the return button */
.input-container button {
    padding: 8px 16px;
    background-color: #7a7876;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.input-container button:hover {
    background-color: #9c9995;
}

/* Container for displaying chat messages */
.chat-container {
    flex: 1;
    overflow-y: auto;
    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 10px;
}

/* Shared styles for all chat messages */
.chat-message {
    padding: 5px;
    margin-bottom: 5px;           /* Add some space inside the message box */
    word-wrap: break-word;       /* Wrap long words if necessary */
  }
  
  /* Style specifically for user messages */
.chat-message.user {
    text-align: right;           /* Align text to the right */
    margin-left: auto;           /* Push message to the right */
  }
  
  /* Style specifically for assistant messages */
.chat-message.assistant {
    text-align: left;            /* Align text to the left */
    margin-right: auto;          /* Push message to the left */
  }
  
  /* Optional: Style for system or error messages */
.chat-message.system {
    background-color: #ffe6e6;   /* Light red background */
    color: #a00;                 /* Dark red text */
    font-style: italic;          /* Italicize text */
    text-align: center;          /* Center-align system messages */
  }
  








/* API Key Panel Styles */
.api-key-panel {
    padding: 16px;
    height: 100%;
    display: flex;
    flex-direction: column;
    min-width: 25vw;
}


.api-key-header {
    text-align: center;
    font-size: 1.2em;
    font-weight: bold;
    padding: 10px;
    border-bottom: 1px solid #e0e0e0;
    margin-bottom: 16px;
    top: 20px;
    left: 0;
    right: 0;
}


.api-key-container {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding: 10px;
}


.api-key-description {
    text-align: center;
    color: #666;
    margin-bottom: 20px;
    top: 80px; 
    left: 0;
    right: 0;
}

.api-key-input-container {
    display: flex;
    gap: 8px;
    padding: 10px;
    width: 80%; /* Make the input container narrower */
    margin: 0 auto; /* Center it horizontally */
    padding-top: 30vh;
}

.api-key-input {
    flex: 1;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}

.api-key-submit {
    padding: 8px 16px;
    background-color: #7a7876;
    color: white;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

.api-key-submit:hover {
    background-color: #9c9995;
}

.api-key-signup {
    text-align: center;
    color: #666;
    margin-top: 5vh;
    font-size: 0.9em;
}

.api-key-signup a {
    color: #2196F3;
    text-decoration: none;
}

.api-key-signup a:hover {
    text-decoration: underline;
}

.api-key-error {
    /* color: #d32f2f; */
    color:#7a7876;
    text-align: left;
    font-size: 1em;
    width: 80%;
    padding-left: 10px;
    margin: -15px auto 0px;
}

`, "",{"version":3,"sources":["webpack://./style/base.css"],"names":[],"mappings":"AAAA;;;;CAIC;;AAED,yCAAyC;AACzC;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,eAAe;AACnB;;AAEA,kBAAkB;AAClB;IACI,kBAAkB;IAClB,aAAa;IACb,gCAAgC;IAChC,mBAAmB;AACvB;;AAEA,mDAAmD;AACnD;IACI,aAAa;IACb,QAAQ;IACR,aAAa;IACb,gBAAgB;AACpB;;AAEA,4BAA4B;AAC5B;IACI,OAAO;IACP,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA,gCAAgC;AAChC;IACI,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA,2CAA2C;AAC3C;IACI,OAAO;IACP,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA,wCAAwC;AACxC;IACI,YAAY;IACZ,kBAAkB,YAAY,0CAA0C;IACxE,qBAAqB,QAAQ,iCAAiC;EAChE;;EAEA,yCAAyC;AAC3C;IACI,iBAAiB,YAAY,4BAA4B;IACzD,iBAAiB,YAAY,8BAA8B;EAC7D;;EAEA,8CAA8C;AAChD;IACI,gBAAgB,aAAa,2BAA2B;IACxD,kBAAkB,WAAW,6BAA6B;EAC5D;;EAEA,iDAAiD;AACnD;IACI,yBAAyB,IAAI,yBAAyB;IACtD,WAAW,kBAAkB,kBAAkB;IAC/C,kBAAkB,WAAW,mBAAmB;IAChD,kBAAkB,WAAW,iCAAiC;EAChE;;;;;;;;;;AAUF,yBAAyB;AACzB;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,sBAAsB;IACtB,eAAe;AACnB;;;AAGA;IACI,kBAAkB;IAClB,gBAAgB;IAChB,iBAAiB;IACjB,aAAa;IACb,gCAAgC;IAChC,mBAAmB;IACnB,SAAS;IACT,OAAO;IACP,QAAQ;AACZ;;;AAGA;IACI,OAAO;IACP,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;;AAGA;IACI,kBAAkB;IAClB,WAAW;IACX,mBAAmB;IACnB,SAAS;IACT,OAAO;IACP,QAAQ;AACZ;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,aAAa;IACb,UAAU,EAAE,sCAAsC;IAClD,cAAc,EAAE,2BAA2B;IAC3C,iBAAiB;AACrB;;AAEA;IACI,OAAO;IACP,YAAY;IACZ,sBAAsB;IACtB,kBAAkB;AACtB;;AAEA;IACI,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,eAAe;AACnB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,kBAAkB;IAClB,WAAW;IACX,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,gBAAgB;IAChB,cAAc;IACd,UAAU;IACV,kBAAkB;IAClB,sBAAsB;AAC1B","sourcesContent":["/*\n    See the JupyterLab Developer Guide for useful CSS Patterns:\n\n    https://jupyterlab.readthedocs.io/en/stable/developer/css.html\n*/\n\n/* Arrange elements in a vertical stack */\n.chatbot-panel {\n    padding: 16px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    min-width: 25vw;\n}\n\n/* Title styling */\n.chatbot-title {\n    text-align: center;\n    padding: 10px;\n    border-bottom: 1px solid #e0e0e0;\n    margin-bottom: 16px;\n}\n\n/* Container for the prompt box and return button */\n.input-container {\n    display: flex;\n    gap: 8px;\n    padding: 10px;\n    margin-top: auto;\n}\n\n/* Style for the input box */\n.input-container input {\n    flex: 1;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\n/* Style for the return button */\n.input-container button {\n    padding: 8px 16px;\n    background-color: #7a7876;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.input-container button:hover {\n    background-color: #9c9995;\n}\n\n/* Container for displaying chat messages */\n.chat-container {\n    flex: 1;\n    overflow-y: auto;\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    padding: 10px;\n}\n\n/* Shared styles for all chat messages */\n.chat-message {\n    padding: 5px;\n    margin-bottom: 5px;           /* Add some space inside the message box */\n    word-wrap: break-word;       /* Wrap long words if necessary */\n  }\n  \n  /* Style specifically for user messages */\n.chat-message.user {\n    text-align: right;           /* Align text to the right */\n    margin-left: auto;           /* Push message to the right */\n  }\n  \n  /* Style specifically for assistant messages */\n.chat-message.assistant {\n    text-align: left;            /* Align text to the left */\n    margin-right: auto;          /* Push message to the left */\n  }\n  \n  /* Optional: Style for system or error messages */\n.chat-message.system {\n    background-color: #ffe6e6;   /* Light red background */\n    color: #a00;                 /* Dark red text */\n    font-style: italic;          /* Italicize text */\n    text-align: center;          /* Center-align system messages */\n  }\n  \n\n\n\n\n\n\n\n\n/* API Key Panel Styles */\n.api-key-panel {\n    padding: 16px;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    min-width: 25vw;\n}\n\n\n.api-key-header {\n    text-align: center;\n    font-size: 1.2em;\n    font-weight: bold;\n    padding: 10px;\n    border-bottom: 1px solid #e0e0e0;\n    margin-bottom: 16px;\n    top: 20px;\n    left: 0;\n    right: 0;\n}\n\n\n.api-key-container {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: 10px;\n}\n\n\n.api-key-description {\n    text-align: center;\n    color: #666;\n    margin-bottom: 20px;\n    top: 80px; \n    left: 0;\n    right: 0;\n}\n\n.api-key-input-container {\n    display: flex;\n    gap: 8px;\n    padding: 10px;\n    width: 80%; /* Make the input container narrower */\n    margin: 0 auto; /* Center it horizontally */\n    padding-top: 30vh;\n}\n\n.api-key-input {\n    flex: 1;\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n}\n\n.api-key-submit {\n    padding: 8px 16px;\n    background-color: #7a7876;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n}\n\n.api-key-submit:hover {\n    background-color: #9c9995;\n}\n\n.api-key-signup {\n    text-align: center;\n    color: #666;\n    margin-top: 5vh;\n    font-size: 0.9em;\n}\n\n.api-key-signup a {\n    color: #2196F3;\n    text-decoration: none;\n}\n\n.api-key-signup a:hover {\n    text-decoration: underline;\n}\n\n.api-key-error {\n    /* color: #d32f2f; */\n    color:#7a7876;\n    text-align: left;\n    font-size: 1em;\n    width: 80%;\n    padding-left: 10px;\n    margin: -15px auto 0px;\n}\n\n"],"sourceRoot":""}]);
// Exports
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);


/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {



/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
module.exports = function (cssWithMappingToString) {
  var list = [];

  // return the list of modules as css string
  list.toString = function toString() {
    return this.map(function (item) {
      var content = "";
      var needLayer = typeof item[5] !== "undefined";
      if (item[4]) {
        content += "@supports (".concat(item[4], ") {");
      }
      if (item[2]) {
        content += "@media ".concat(item[2], " {");
      }
      if (needLayer) {
        content += "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {");
      }
      content += cssWithMappingToString(item);
      if (needLayer) {
        content += "}";
      }
      if (item[2]) {
        content += "}";
      }
      if (item[4]) {
        content += "}";
      }
      return content;
    }).join("");
  };

  // import a list of modules into the list
  list.i = function i(modules, media, dedupe, supports, layer) {
    if (typeof modules === "string") {
      modules = [[null, modules, undefined]];
    }
    var alreadyImportedModules = {};
    if (dedupe) {
      for (var k = 0; k < this.length; k++) {
        var id = this[k][0];
        if (id != null) {
          alreadyImportedModules[id] = true;
        }
      }
    }
    for (var _k = 0; _k < modules.length; _k++) {
      var item = [].concat(modules[_k]);
      if (dedupe && alreadyImportedModules[item[0]]) {
        continue;
      }
      if (typeof layer !== "undefined") {
        if (typeof item[5] === "undefined") {
          item[5] = layer;
        } else {
          item[1] = "@layer".concat(item[5].length > 0 ? " ".concat(item[5]) : "", " {").concat(item[1], "}");
          item[5] = layer;
        }
      }
      if (media) {
        if (!item[2]) {
          item[2] = media;
        } else {
          item[1] = "@media ".concat(item[2], " {").concat(item[1], "}");
          item[2] = media;
        }
      }
      if (supports) {
        if (!item[4]) {
          item[4] = "".concat(supports);
        } else {
          item[1] = "@supports (".concat(item[4], ") {").concat(item[1], "}");
          item[4] = supports;
        }
      }
      list.push(item);
    }
  };
  return list;
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/sourceMaps.js":
/*!************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/sourceMaps.js ***!
  \************************************************************/
/***/ ((module) => {



module.exports = function (item) {
  var content = item[1];
  var cssMapping = item[3];
  if (!cssMapping) {
    return content;
  }
  if (typeof btoa === "function") {
    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));
    var data = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(base64);
    var sourceMapping = "/*# ".concat(data, " */");
    return [content].concat([sourceMapping]).join("\n");
  }
  return [content].join("\n");
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {



var stylesInDOM = [];
function getIndexByIdentifier(identifier) {
  var result = -1;
  for (var i = 0; i < stylesInDOM.length; i++) {
    if (stylesInDOM[i].identifier === identifier) {
      result = i;
      break;
    }
  }
  return result;
}
function modulesToDom(list, options) {
  var idCountMap = {};
  var identifiers = [];
  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var count = idCountMap[id] || 0;
    var identifier = "".concat(id, " ").concat(count);
    idCountMap[id] = count + 1;
    var indexByIdentifier = getIndexByIdentifier(identifier);
    var obj = {
      css: item[1],
      media: item[2],
      sourceMap: item[3],
      supports: item[4],
      layer: item[5]
    };
    if (indexByIdentifier !== -1) {
      stylesInDOM[indexByIdentifier].references++;
      stylesInDOM[indexByIdentifier].updater(obj);
    } else {
      var updater = addElementStyle(obj, options);
      options.byIndex = i;
      stylesInDOM.splice(i, 0, {
        identifier: identifier,
        updater: updater,
        references: 1
      });
    }
    identifiers.push(identifier);
  }
  return identifiers;
}
function addElementStyle(obj, options) {
  var api = options.domAPI(options);
  api.update(obj);
  var updater = function updater(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {
        return;
      }
      api.update(obj = newObj);
    } else {
      api.remove();
    }
  };
  return updater;
}
module.exports = function (list, options) {
  options = options || {};
  list = list || [];
  var lastIdentifiers = modulesToDom(list, options);
  return function update(newList) {
    newList = newList || [];
    for (var i = 0; i < lastIdentifiers.length; i++) {
      var identifier = lastIdentifiers[i];
      var index = getIndexByIdentifier(identifier);
      stylesInDOM[index].references--;
    }
    var newLastIdentifiers = modulesToDom(newList, options);
    for (var _i = 0; _i < lastIdentifiers.length; _i++) {
      var _identifier = lastIdentifiers[_i];
      var _index = getIndexByIdentifier(_identifier);
      if (stylesInDOM[_index].references === 0) {
        stylesInDOM[_index].updater();
        stylesInDOM.splice(_index, 1);
      }
    }
    lastIdentifiers = newLastIdentifiers;
  };
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {



var memo = {};

/* istanbul ignore next  */
function getTarget(target) {
  if (typeof memo[target] === "undefined") {
    var styleTarget = document.querySelector(target);

    // Special case to return head of iframe instead of iframe itself
    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
      try {
        // This will throw an exception if access to iframe is blocked
        // due to cross-origin restrictions
        styleTarget = styleTarget.contentDocument.head;
      } catch (e) {
        // istanbul ignore next
        styleTarget = null;
      }
    }
    memo[target] = styleTarget;
  }
  return memo[target];
}

/* istanbul ignore next  */
function insertBySelector(insert, style) {
  var target = getTarget(insert);
  if (!target) {
    throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
  }
  target.appendChild(style);
}
module.exports = insertBySelector;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function insertStyleElement(options) {
  var element = document.createElement("style");
  options.setAttributes(element, options.attributes);
  options.insert(element, options.options);
  return element;
}
module.exports = insertStyleElement;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {



/* istanbul ignore next  */
function setAttributesWithoutAttributes(styleElement) {
  var nonce =  true ? __webpack_require__.nc : 0;
  if (nonce) {
    styleElement.setAttribute("nonce", nonce);
  }
}
module.exports = setAttributesWithoutAttributes;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function apply(styleElement, options, obj) {
  var css = "";
  if (obj.supports) {
    css += "@supports (".concat(obj.supports, ") {");
  }
  if (obj.media) {
    css += "@media ".concat(obj.media, " {");
  }
  var needLayer = typeof obj.layer !== "undefined";
  if (needLayer) {
    css += "@layer".concat(obj.layer.length > 0 ? " ".concat(obj.layer) : "", " {");
  }
  css += obj.css;
  if (needLayer) {
    css += "}";
  }
  if (obj.media) {
    css += "}";
  }
  if (obj.supports) {
    css += "}";
  }
  var sourceMap = obj.sourceMap;
  if (sourceMap && typeof btoa !== "undefined") {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  }

  // For old IE
  /* istanbul ignore if  */
  options.styleTagTransform(css, styleElement, options.options);
}
function removeStyleElement(styleElement) {
  // istanbul ignore if
  if (styleElement.parentNode === null) {
    return false;
  }
  styleElement.parentNode.removeChild(styleElement);
}

/* istanbul ignore next  */
function domAPI(options) {
  if (typeof document === "undefined") {
    return {
      update: function update() {},
      remove: function remove() {}
    };
  }
  var styleElement = options.insertStyleElement(options);
  return {
    update: function update(obj) {
      apply(styleElement, options, obj);
    },
    remove: function remove() {
      removeStyleElement(styleElement);
    }
  };
}
module.exports = domAPI;

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {



/* istanbul ignore next  */
function styleTagTransform(css, styleElement) {
  if (styleElement.styleSheet) {
    styleElement.styleSheet.cssText = css;
  } else {
    while (styleElement.firstChild) {
      styleElement.removeChild(styleElement.firstChild);
    }
    styleElement.appendChild(document.createTextNode(css));
  }
}
module.exports = styleTagTransform;

/***/ })

}]);
//# sourceMappingURL=node_modules_style-loader_dist_runtime_injectStylesIntoStyleTag_js-node_modules_style-loader_-19bff1.c52ad482832cd488d9b1.js.map