[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pybatis-neo"
version = "0.1.2"
description = "MyBatis-style SQL Mapper for FastAPI - Modern and Pythonic Implementation"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "jinto", email = "jaypark@gmail.com" }
]
maintainers = [
    { name = "pyBatis Contributors", email = "jaypark@gmail.com" },
]
keywords = ["fastapi", "sql", "mapper", "mybatis", "async", "pydantic"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Operating System :: OS Independent",
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]
postgres = [
    "asyncpg>=0.28.0",
]
mysql = [
    "aiomysql>=0.2.0",
]
sqlite = [
    "aiosqlite>=0.19.0",
]
all = [
    "pybatis-neo[postgres,mysql,sqlite]",
]

[project.urls]
Homepage = "https://github.com/jinto/pybatis"
Documentation = "https://pybatis-neo.readthedocs.io"
Repository = "https://github.com/jinto/pybatis"
Issues = "https://github.com/jinto/pybatis/issues"
Changelog = "https://github.com/pybatis/pybatis/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["src/pybatis"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=pybatis",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.coverage.run]
source = ["src/pybatis"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "asyncpg.*",
    "aiomysql.*",
    "aiosqlite.*",
]
ignore_missing_imports = true