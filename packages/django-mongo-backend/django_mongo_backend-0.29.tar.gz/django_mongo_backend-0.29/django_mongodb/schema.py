from django.db.backends.base.schema import BaseDatabaseSchemaEditor


class DatabaseSchemaEditor(BaseDatabaseSchemaEditor):
    def quote_value(self, value):
        return value

    def add_constraint(self, model, constraint): ...

    def add_field(self, model, field): ...

    def add_index(self, model, index): ...

    def alter_db_table(self, model, old_db_table, new_db_table): ...

    def alter_db_table_comment(self, model, old_db_table_comment, new_db_table_comment): ...

    def alter_db_tablespace(self, model, old_db_tablespace, new_db_tablespace): ...

    def alter_field(self, model, old_field, new_field, strict=False): ...

    def alter_index_together(self, model, old_index_together, new_index_together): ...

    def alter_unique_together(self, model, old_unique_together, new_unique_together): ...

    def create_model(self, model): ...

    def delete_model(self, model): ...

    def effective_default(self, field): ...

    def prepare_default(self, value): ...

    def quote_name(self, name): ...

    def remove_constraint(self, model, constraint): ...

    def remove_field(self, model, field): ...

    def remove_index(self, model, index): ...

    def remove_procedure(self, procedure_name, param_types=()): ...

    def rename_index(self, model, old_index_name, new_index_name): ...

    def skip_default(self, field): ...

    def skip_default_on_alter(self, field): ...
