# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: chalk/server/v1/graph.proto
# Protobuf Python Version: 4.25.3
"""Generated protocol buffer code."""

from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from chalk._gen.chalk.artifacts.v1 import export_pb2 as chalk_dot_artifacts_dot_v1_dot_export__pb2
from chalk._gen.chalk.auth.v1 import permissions_pb2 as chalk_dot_auth_dot_v1_dot_permissions__pb2
from chalk._gen.chalk.common.v1 import chalk_error_pb2 as chalk_dot_common_dot_v1_dot_chalk__error__pb2
from chalk._gen.chalk.graph.v1 import graph_pb2 as chalk_dot_graph_dot_v1_dot_graph__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x1b\x63halk/server/v1/graph.proto\x12\x0f\x63halk.server.v1\x1a\x1f\x63halk/artifacts/v1/export.proto\x1a\x1f\x63halk/auth/v1/permissions.proto\x1a!chalk/common/v1/chalk_error.proto\x1a\x1a\x63halk/graph/v1/graph.proto"\xd8\x04\n\nFeatureSQL\x12\x0e\n\x02id\x18\x01 \x01(\x03R\x02id\x12%\n\x0e\x65nvironment_id\x18\x02 \x01(\tR\renvironmentId\x12(\n\rdeployment_id\x18\x03 \x01(\tH\x00R\x0c\x64\x65ploymentId\x88\x01\x01\x12\x10\n\x03\x66qn\x18\x04 \x01(\tR\x03\x66qn\x12\x12\n\x04name\x18\x05 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x06 \x01(\tR\tnamespace\x12(\n\rmax_staleness\x18\x07 \x01(\tH\x01R\x0cmaxStaleness\x88\x01\x01\x12\x31\n\x15\x65tl_offline_to_online\x18\x08 \x01(\x08R\x12\x65tlOfflineToOnline\x12%\n\x0b\x64\x65scription\x18\t \x01(\tH\x02R\x0b\x64\x65scription\x88\x01\x01\x12\x19\n\x05owner\x18\n \x01(\tH\x03R\x05owner\x88\x01\x01\x12\x12\n\x04tags\x18\x0b \x03(\tR\x04tags\x12\x1b\n\tkind_enum\x18\x0c \x01(\tR\x08kindEnum\x12\x12\n\x04kind\x18\r \x01(\tR\x04kind\x12\x1b\n\twas_reset\x18\x0e \x01(\x08R\x08wasReset\x12.\n\x10internal_version\x18\x0f \x01(\x03H\x04R\x0finternalVersion\x88\x01\x01\x12!\n\x0cis_singleton\x18\x10 \x01(\x08R\x0bisSingletonB\x10\n\x0e_deployment_idB\x10\n\x0e_max_stalenessB\x0e\n\x0c_descriptionB\x08\n\x06_ownerB\x13\n\x11_internal_version"P\n\x15GetFeatureSQLResponse\x12\x37\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32\x1b.chalk.server.v1.FeatureSQLR\x08\x66\x65\x61tures";\n\x14GetFeatureSQLRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId"\xb4\x02\n\x0f\x46\x65\x61tureMetadata\x12\x10\n\x03\x66qn\x18\x01 \x01(\tR\x03\x66qn\x12\x12\n\x04name\x18\x02 \x01(\tR\x04name\x12\x1c\n\tnamespace\x18\x03 \x01(\tR\tnamespace\x12%\n\x0b\x64\x65scription\x18\x04 \x01(\tH\x00R\x0b\x64\x65scription\x88\x01\x01\x12\x19\n\x05owner\x18\x05 \x01(\tH\x01R\x05owner\x88\x01\x01\x12\x12\n\x04tags\x18\x06 \x03(\tR\x04tags\x12(\n\rmax_staleness\x18\x07 \x01(\tH\x02R\x0cmaxStaleness\x88\x01\x01\x12\x31\n\x15\x65tl_offline_to_online\x18\x08 \x01(\x08R\x12\x65tlOfflineToOnlineB\x0e\n\x0c_descriptionB\x08\n\x06_ownerB\x10\n\x0e_max_staleness"\xa7\x01\n\x1bGetFeaturesMetadataResponse\x12<\n\x08\x66\x65\x61tures\x18\x01 \x03(\x0b\x32 .chalk.server.v1.FeatureMetadataR\x08\x66\x65\x61tures\x12%\n\x0e\x65nvironment_id\x18\x02 \x01(\tR\renvironmentId\x12#\n\rdeployment_id\x18\x03 \x01(\tR\x0c\x64\x65ploymentId"\x1c\n\x1aGetFeaturesMetadataRequest"\xe6\x01\n\x12UpdateGraphRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId\x12/\n\x05graph\x18\x02 \x01(\x0b\x32\x15.chalk.graph.v1.GraphB\x02\x18\x01R\x05graph\x12\'\n\x0f\x63halkpy_version\x18\x03 \x01(\tR\x0e\x63halkpyVersion\x12\x15\n\x03tag\x18\x04 \x01(\tH\x00R\x03tag\x88\x01\x01\x12\x32\n\x06\x65xport\x18\x05 \x01(\x0b\x32\x1a.chalk.artifacts.v1.ExportR\x06\x65xportB\x06\n\x04_tag"\x15\n\x13UpdateGraphResponse"6\n\x0fGetGraphRequest\x12#\n\rdeployment_id\x18\x01 \x01(\tR\x0c\x64\x65ploymentId"\xe4\x01\n\x10GetGraphResponse\x12/\n\x05graph\x18\x01 \x01(\x0b\x32\x15.chalk.graph.v1.GraphB\x02\x18\x01R\x05graph\x12\'\n\x0f\x63halkpy_version\x18\x02 \x01(\tR\x0e\x63halkpyVersion\x12\x15\n\x03tag\x18\x03 \x01(\tH\x00R\x03tag\x88\x01\x01\x12\x32\n\x06\x65xport\x18\x04 \x01(\x0b\x32\x1a.chalk.artifacts.v1.ExportR\x06\x65xport\x12#\n\rdeployment_id\x18\x05 \x01(\tR\x0c\x64\x65ploymentIdB\x06\n\x04_tag"Q\n\rPythonVersion\x12\x14\n\x05major\x18\x01 \x01(\x03R\x05major\x12\x14\n\x05minor\x18\x02 \x01(\x03R\x05minor\x12\x14\n\x05patch\x18\x03 \x01(\x03R\x05patch"\xe7\x01\n"GetCodegenFeaturesFromGraphRequest\x12(\n\rdeployment_id\x18\x01 \x01(\tH\x00R\x0c\x64\x65ploymentId\x88\x01\x01\x12\x1b\n\x06\x62ranch\x18\x02 \x01(\tH\x01R\x06\x62ranch\x88\x01\x01\x12J\n\x0epython_version\x18\x03 \x01(\x0b\x32\x1e.chalk.server.v1.PythonVersionH\x02R\rpythonVersion\x88\x01\x01\x42\x10\n\x0e_deployment_idB\t\n\x07_branchB\x11\n\x0f_python_version"t\n#GetCodegenFeaturesFromGraphResponse\x12\x18\n\x07\x63odegen\x18\x01 \x01(\tR\x07\x63odegen\x12\x33\n\x06\x65rrors\x18\x02 \x03(\x0b\x32\x1b.chalk.common.v1.ChalkErrorR\x06\x65rrors2\xbb\x04\n\x0cGraphService\x12\x66\n\rGetFeatureSQL\x12%.chalk.server.v1.GetFeatureSQLRequest\x1a&.chalk.server.v1.GetFeatureSQLResponse"\x06\x90\x02\x01\x80}\x0b\x12x\n\x13GetFeaturesMetadata\x12+.chalk.server.v1.GetFeaturesMetadataRequest\x1a,.chalk.server.v1.GetFeaturesMetadataResponse"\x06\x90\x02\x01\x80}\x0b\x12W\n\x08GetGraph\x12 .chalk.server.v1.GetGraphRequest\x1a!.chalk.server.v1.GetGraphResponse"\x06\x90\x02\x01\x80}\x0b\x12]\n\x0bUpdateGraph\x12#.chalk.server.v1.UpdateGraphRequest\x1a$.chalk.server.v1.UpdateGraphResponse"\x03\x80}\x0b\x12\x90\x01\n\x1bGetCodegenFeaturesFromGraph\x12\x33.chalk.server.v1.GetCodegenFeaturesFromGraphRequest\x1a\x34.chalk.server.v1.GetCodegenFeaturesFromGraphResponse"\x06\x90\x02\x01\x80}\x0b\x42\x93\x01\n\x13\x63om.chalk.server.v1B\nGraphProtoP\x01Z\x12server/v1;serverv1\xa2\x02\x03\x43SX\xaa\x02\x0f\x43halk.Server.V1\xca\x02\x0f\x43halk\\Server\\V1\xe2\x02\x1b\x43halk\\Server\\V1\\GPBMetadata\xea\x02\x11\x43halk::Server::V1b\x06proto3'
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "chalk.server.v1.graph_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
    _globals["DESCRIPTOR"]._options = None
    _globals[
        "DESCRIPTOR"
    ]._serialized_options = b"\n\023com.chalk.server.v1B\nGraphProtoP\001Z\022server/v1;serverv1\242\002\003CSX\252\002\017Chalk.Server.V1\312\002\017Chalk\\Server\\V1\342\002\033Chalk\\Server\\V1\\GPBMetadata\352\002\021Chalk::Server::V1"
    _globals["_UPDATEGRAPHREQUEST"].fields_by_name["graph"]._options = None
    _globals["_UPDATEGRAPHREQUEST"].fields_by_name["graph"]._serialized_options = b"\030\001"
    _globals["_GETGRAPHRESPONSE"].fields_by_name["graph"]._options = None
    _globals["_GETGRAPHRESPONSE"].fields_by_name["graph"]._serialized_options = b"\030\001"
    _globals["_GRAPHSERVICE"].methods_by_name["GetFeatureSQL"]._options = None
    _globals["_GRAPHSERVICE"].methods_by_name["GetFeatureSQL"]._serialized_options = b"\220\002\001\200}\013"
    _globals["_GRAPHSERVICE"].methods_by_name["GetFeaturesMetadata"]._options = None
    _globals["_GRAPHSERVICE"].methods_by_name["GetFeaturesMetadata"]._serialized_options = b"\220\002\001\200}\013"
    _globals["_GRAPHSERVICE"].methods_by_name["GetGraph"]._options = None
    _globals["_GRAPHSERVICE"].methods_by_name["GetGraph"]._serialized_options = b"\220\002\001\200}\013"
    _globals["_GRAPHSERVICE"].methods_by_name["UpdateGraph"]._options = None
    _globals["_GRAPHSERVICE"].methods_by_name["UpdateGraph"]._serialized_options = b"\200}\013"
    _globals["_GRAPHSERVICE"].methods_by_name["GetCodegenFeaturesFromGraph"]._options = None
    _globals["_GRAPHSERVICE"].methods_by_name[
        "GetCodegenFeaturesFromGraph"
    ]._serialized_options = b"\220\002\001\200}\013"
    _globals["_FEATURESQL"]._serialized_start = 178
    _globals["_FEATURESQL"]._serialized_end = 778
    _globals["_GETFEATURESQLRESPONSE"]._serialized_start = 780
    _globals["_GETFEATURESQLRESPONSE"]._serialized_end = 860
    _globals["_GETFEATURESQLREQUEST"]._serialized_start = 862
    _globals["_GETFEATURESQLREQUEST"]._serialized_end = 921
    _globals["_FEATUREMETADATA"]._serialized_start = 924
    _globals["_FEATUREMETADATA"]._serialized_end = 1232
    _globals["_GETFEATURESMETADATARESPONSE"]._serialized_start = 1235
    _globals["_GETFEATURESMETADATARESPONSE"]._serialized_end = 1402
    _globals["_GETFEATURESMETADATAREQUEST"]._serialized_start = 1404
    _globals["_GETFEATURESMETADATAREQUEST"]._serialized_end = 1432
    _globals["_UPDATEGRAPHREQUEST"]._serialized_start = 1435
    _globals["_UPDATEGRAPHREQUEST"]._serialized_end = 1665
    _globals["_UPDATEGRAPHRESPONSE"]._serialized_start = 1667
    _globals["_UPDATEGRAPHRESPONSE"]._serialized_end = 1688
    _globals["_GETGRAPHREQUEST"]._serialized_start = 1690
    _globals["_GETGRAPHREQUEST"]._serialized_end = 1744
    _globals["_GETGRAPHRESPONSE"]._serialized_start = 1747
    _globals["_GETGRAPHRESPONSE"]._serialized_end = 1975
    _globals["_PYTHONVERSION"]._serialized_start = 1977
    _globals["_PYTHONVERSION"]._serialized_end = 2058
    _globals["_GETCODEGENFEATURESFROMGRAPHREQUEST"]._serialized_start = 2061
    _globals["_GETCODEGENFEATURESFROMGRAPHREQUEST"]._serialized_end = 2292
    _globals["_GETCODEGENFEATURESFROMGRAPHRESPONSE"]._serialized_start = 2294
    _globals["_GETCODEGENFEATURESFROMGRAPHRESPONSE"]._serialized_end = 2410
    _globals["_GRAPHSERVICE"]._serialized_start = 2413
    _globals["_GRAPHSERVICE"]._serialized_end = 2984
# @@protoc_insertion_point(module_scope)
