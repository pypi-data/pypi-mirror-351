Metadata-Version: 2.4
Name: lstid_processing
Version: 0.0.1
Summary: Identify TIDs in CINDI and process SAMI3 data
Maintainer-email: "Angeline G. Burrell" <angeline.g.burrell.civ@us.navy.mil>
License: The MIT License (MIT)
        
        Copyright (c) 2025 Angeline G. Burrell
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
Project-URL: source, https://github.com/aburrell/lstid_processing
Project-URL: documentation, https://lstid_processing.readthedocs.io/en/latest/
Project-URL: tracker, https://github.com/aburrell/lstid_processing/issues
Project-URL: download, https://github.com/aburrell/lstid_processing/releases
Keywords: travelling ionospheric disturbances,traveling ionospheric disturbances,TIDs,C/NOFS,pysat,ionosphere,atmosphere,thermosphere,CINDI,SAMI3,heliosphere,observations,space,satellites,analysis
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Atmospheric Science
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Operating System :: Unix
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: cmocean
Requires-Dist: matplotlib
Requires-Dist: numpy
Requires-Dist: pandas
Requires-Dist: pysat
Requires-Dist: pysatNASA
Requires-Dist: requests
Requires-Dist: scipy
Requires-Dist: xarray
Provides-Extra: doc
Requires-Dist: myst_parser; extra == "doc"
Requires-Dist: numpydoc; extra == "doc"
Requires-Dist: pyproject_parser; extra == "doc"
Requires-Dist: pysat>=3.2.1; extra == "doc"
Requires-Dist: sphinx>=1.3; extra == "doc"
Requires-Dist: sphinx-autoapi; extra == "doc"
Requires-Dist: sphinx-rtd-theme; extra == "doc"
Provides-Extra: test
Requires-Dist: coverage[toml]; extra == "test"
Requires-Dist: flake8; extra == "test"
Requires-Dist: packaging; extra == "test"
Requires-Dist: requests; extra == "test"
Dynamic: license-file

Repository with tools for identifying medium and large scale Travelling
Ionospheric Disturbances (TIDs) in the Communication/Navigation Outage
Forecasting System (C/NOFS) Coupled Ion-Neutral Dynamics Investigation (CINDI)
Ion Velocity Meter (IVM) data, tools for working with SAMI3 runs, and a routine
to obtain model runs used for a LSTID case study are provided.

[DOI HERE] [PYPI HERE] [![Documentation Status](https://readthedocs.org/projects/lstid-processing/badge/?version=latest)](https://lstid-processing.readthedocs.io/en/latest/?badge=latest)


Example
-------

To download all of the model runs to a local directory:

```
import lstid_processing

sami3_files = lstid_processing.model.io.download_nrl_files('path/to/downloads')
```

Notes
-----

This package and data are supplied to support the reproducibility of a
manuscript currently under review.  Frequent updates are not expected.


