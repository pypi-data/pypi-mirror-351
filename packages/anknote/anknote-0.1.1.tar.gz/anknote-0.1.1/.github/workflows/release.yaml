name: Release ðŸš€

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  contents: write
  id-token: write  # For trusted publishing to PyPI

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.release.outputs.released }}
      version: ${{ steps.release.outputs.version }}
      tag: ${{ steps.release.outputs.tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.4.24"
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Sync project dependencies
        run: uv sync --extra test

      - name: Run tests
        run: export PYTHONPATH="$PYTHONPATH:$PWD" && uv run pytest

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@v9.12.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          root_options: "-vv"

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.released == 'true'
    environment:
      name: pypi
      url: https://pypi.org/p/anknote
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release.outputs.tag }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.4.24"
          enable-cache: true

      - name: Build package
        run: uv build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
          verbose: true 