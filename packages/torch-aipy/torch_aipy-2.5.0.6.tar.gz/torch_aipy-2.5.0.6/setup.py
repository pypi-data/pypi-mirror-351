#!/usr/bin/env python

# ...

from distutils.core import setup
from setuptools import setup, Extension

import shutil,os

root = __file__[:__file__.rfind('/')]
lib = os.environ['HOME']+'/lib'

sos = ["libabsl_bad_any_cast_impl.so", "libabsl_bad_optional_access.so", "libabsl_bad_variant_access.so", "libabsl_base.so", "libabsl_city.so", "libabsl_civil_time.so", "libabsl_cord.so", "libabsl_cord_internal.so", "libabsl_cordz_functions.so", "libabsl_cordz_handle.so", "libabsl_cordz_info.so", "libabsl_cordz_sample_token.so", "libabsl_crc32c.so", "libabsl_crc_cord_state.so", "libabsl_crc_cpu_detect.so", "libabsl_crc_internal.so", "libabsl_debugging_internal.so", "libabsl_demangle_internal.so", "libabsl_die_if_null.so", "libabsl_examine_stack.so", "libabsl_exponential_biased.so", "libabsl_failure_signal_handler.so", "libabsl_flags_commandlineflag.so", "libabsl_flags_commandlineflag_internal.so", "libabsl_flags_config.so", "libabsl_flags_internal.so", "libabsl_flags_marshalling.so", "libabsl_flags_parse.so", "libabsl_flags_private_handle_accessor.so", "libabsl_flags_program_name.so", "libabsl_flags_reflection.so", "libabsl_flags_usage.so", "libabsl_flags_usage_internal.so", "libabsl_graphcycles_internal.so", "libabsl_hash.so", "libabsl_hashtablez_sampler.so", "libabsl_int128.so", "libabsl_kernel_timeout_internal.so", "libabsl_leak_check.so", "libabsl_log_entry.so", "libabsl_log_flags.so", "libabsl_log_globals.so", "libabsl_log_initialize.so", "libabsl_log_internal_check_op.so", "libabsl_log_internal_conditions.so", "libabsl_log_internal_fnmatch.so", "libabsl_log_internal_format.so", "libabsl_log_internal_globals.so", "libabsl_log_internal_log_sink_set.so", "libabsl_log_internal_message.so", "libabsl_log_internal_nullguard.so", "libabsl_log_internal_proto.so", "libabsl_log_severity.so", "libabsl_log_sink.so", "libabsl_low_level_hash.so", "libabsl_malloc_internal.so", "libabsl_periodic_sampler.so", "libabsl_random_distributions.so", "libabsl_random_internal_distribution_test_util.so", "libabsl_random_internal_platform.so", "libabsl_random_internal_pool_urbg.so", "libabsl_random_internal_randen.so", "libabsl_random_internal_randen_hwaes.so", "libabsl_random_internal_randen_hwaes_impl.so", "libabsl_random_internal_randen_slow.so", "libabsl_random_internal_seed_material.so", "libabsl_random_seed_gen_exception.so", "libabsl_random_seed_sequences.so", "libabsl_raw_hash_set.so", "libabsl_raw_logging_internal.so", "libabsl_scoped_set_env.so", "libabsl_spinlock_wait.so", "libabsl_stacktrace.so", "libabsl_status.so", "libabsl_statusor.so", "libabsl_str_format_internal.so", "libabsl_strerror.so", "libabsl_string_view.so", "libabsl_strings.so", "libabsl_strings_internal.so", "libabsl_symbolize.so", "libabsl_synchronization.so", "libabsl_throw_delegate.so", "libabsl_time.so", "libabsl_time_zone.so", "libabsl_vlog_config_internal.so", "libc10.so", "libprotobuf.so", "libshm.so", "libtorch.so", "libtorch_cpu.so", "libtorch_global_deps.so", "libtorch_python.so", "libandroid-posix-semaphore.so"]

long_description="""
PyTorch is a Python package that provides two high-level features:
Tensor computation (like NumPy) with strong GPU acceleration
Deep neural networks built on a tape-based autograd system
You can reuse your favorite Python packages such as NumPy, SciPy, and Cython to extend PyTorch when needed.
"""
current_directory = os.path.dirname(os.path.abspath(__file__))
readme_path = os.path.join(current_directory, 'README.md')
try:
    with open(readme_path, 'r', encoding='utf-8') as f:
        long_description = f.read()
except FileNotFoundError:
    pass


setup(name='torch-aipy',
      version='2.5.0.6',
      description='Tensors and Dynamic neural networks in Python with strong GPU acceleration',
      author='The QPYPI Team',
      author_email='qpypi@qpython.org',
      data_files=[(lib, sos)],
      url='https://qpypi.qpython.org/project/torch-aipy/',
      packages=['torch', 'torchgen', 'functorch', 'torio', 'torchvision', 'torchaudio' ],
      package_data={
        'torio':[
"__init__.py",
"_extension/*",
"io/*",
"lib/*",
"utils/*",
],
        'torchvision':[
"_C.cpython-312.so",
"__init__.py",
"_internally_replaced_utils.py",
"_meta_registrations.py",
"_utils.py",
"datasets/*",
"datasets/samplers/*",
"extension.py",
"image.cpython-312.so",
"io/*",
"models/*",
"models/detection/*",
"models/optical_flow/*",
"models/quantization/*",
"models/segmentation/*",
"models/video/*",
"ops/*",
"transforms/*",
"transforms/v2/*",
"transforms/v2/functional/*",
"tv_tensors/*",
"utils.py",
"version.py",
"video_reader.cpython-312.so"
],
        'torchaudio':[
"__init__.py",
"_backend/*",
"_extension/*",
"_internal/*",
"backend/*",
"compliance/*",
"datasets/*",
"functional/*",
"io/*",
"kaldi_io.py",
"lib/*",
"models/*",
"models/decoder/*",
"models/squim/*",
"models/wav2vec2/*",
"models/wav2vec2/utils/*",
"pipelines/*",
"pipelines/_tts/*",
"pipelines/_wav2vec2/*",
"prototype/*",
"prototype/datasets/*",
"prototype/functional/*",
"prototype/models/*",
"prototype/pipelines/*",
"prototype/pipelines/_vggish/*",
"prototype/transforms/*",
"sox_effects/*",
"transforms/*",
"utils/*",
"version.py",
],
        'torch':[
"_C.cpython-312.so",
"_C/*",
"_VF.py",
"_VF.pyi",
"__config__.py",
"__future__.py",
"__init__.py",
"_appdirs.py",
"_awaits/*",
"_classes.py",
"_compile.py",
"_custom_op/*",
"_custom_ops.py",
"_decomp/*",
"_deploy.py",
"_dispatch/*",
"_dynamo/*",
"_dynamo/backends/*",
"_dynamo/polyfills/*",
"_dynamo/repro/*",
"_dynamo/variables/*",
"_export/*",
"_export/db/*",
"_export/db/examples/*",
"_export/pass_infra/*",
"_export/passes/*",
"_export/serde/*",
"_functorch/*",
"_functorch/_aot_autograd/*",
"_guards.py",
"_higher_order_ops/*",
"_inductor/*",
"_inductor/autoheuristic/*",
"_inductor/autoheuristic/artifacts/*",
"_inductor/codegen/*",
"_inductor/codegen/aoti_runtime/*",
"_inductor/codegen/cuda/*",
"_inductor/codegen/cuda/cutlass_lib_extensions/*",
"_inductor/codegen/rocm/*",
"_inductor/codegen/xpu/*",
"_inductor/compile_worker/*",
"_inductor/fx_passes/*",
"_inductor/fx_passes/serialized_patterns/*",
"_inductor/kernel/*",
"_inductor/package/*",
"_inductor/runtime/*",
"_jit_internal.py",
"_lazy/*",
"_library/*",
"_linalg_utils.py",
"_lobpcg.py",
"_logging/*",
"_lowrank.py",
"_meta_registrations.py",
"_namedtensor_internals.py",
"_numpy/*",
"_numpy/testing/*",
"_ops.py",
"_prims/*",
"_prims_common/*",
"_python_dispatcher.py",
"_refs/*",
"_refs/linalg/*",
"_refs/nn/*",
"_refs/nn/functional/*",
"_refs/special/*",
"_size_docs.py",
"_sources.py",
"_storage_docs.py",
"_streambase.py",
"_strobelight/*",
"_subclasses/*",
"_tensor.py",
"_tensor_docs.py",
"_tensor_str.py",
"_torch_docs.py",
"_utils.py",
"_utils_internal.py",
"_vendor/*",
"_vendor/packaging/*",
"_vmap_internals.py",
"_weights_only_unpickler.py",
"amp/*",
"ao/*",
"ao/nn/*",
"ao/nn/intrinsic/*",
"ao/nn/intrinsic/modules/*",
"ao/nn/intrinsic/qat/*",
"ao/nn/intrinsic/qat/modules/*",
"ao/nn/intrinsic/quantized/*",
"ao/nn/intrinsic/quantized/dynamic/*",
"ao/nn/intrinsic/quantized/dynamic/modules/*",
"ao/nn/intrinsic/quantized/modules/*",
"ao/nn/qat/*",
"ao/nn/qat/dynamic/*",
"ao/nn/qat/dynamic/modules/*",
"ao/nn/qat/modules/*",
"ao/nn/quantizable/*",
"ao/nn/quantizable/modules/*",
"ao/nn/quantized/*",
"ao/nn/quantized/dynamic/*",
"ao/nn/quantized/dynamic/modules/*",
"ao/nn/quantized/modules/*",
"ao/nn/quantized/reference/*",
"ao/nn/quantized/reference/modules/*",
"ao/nn/sparse/*",
"ao/nn/sparse/quantized/*",
"ao/nn/sparse/quantized/dynamic/*",
"ao/ns/*",
"ao/ns/fx/*",
"ao/pruning/*",
"ao/pruning/_experimental/*",
"ao/pruning/_experimental/activation_sparsifier/*",
"ao/pruning/_experimental/data_scheduler/*",
"ao/pruning/_experimental/data_sparsifier/*",
"ao/pruning/_experimental/data_sparsifier/lightning/*",
"ao/pruning/_experimental/data_sparsifier/lightning/callbacks/*",
"ao/pruning/_experimental/pruner/*",
"ao/pruning/scheduler/*",
"ao/pruning/sparsifier/*",
"ao/quantization/*",
"ao/quantization/backend_config/*",
"ao/quantization/fx/*",
"ao/quantization/fx/_model_report/*",
"ao/quantization/pt2e/*",
"ao/quantization/pt2e/representation/*",
"ao/quantization/quantizer/*",
"autograd/*",
"autograd/_functions/*",
"backends/*",
"backends/_coreml/*",
"backends/_nnapi/*",
"backends/cpu/*",
"backends/cuda/*",
"backends/cudnn/*",
"backends/cusparselt/*",
"backends/mha/*",
"backends/mkl/*",
"backends/mkldnn/*",
"backends/mps/*",
"backends/nnpack/*",
"backends/openmp/*",
"backends/opt_einsum/*",
"backends/quantized/*",
"backends/xeon/*",
"backends/xnnpack/*",
"bin/*",
"compiler/*",
"contrib/*",
"cpu/*",
"cpu/amp/*",
"cuda/*",
"cuda/amp/*",
"distributed/*",
"distributed/_composable/*",
"distributed/_composable/fsdp/*",
"distributed/_shard/*",
"distributed/_shard/checkpoint/*",
"distributed/_shard/sharded_optim/*",
"distributed/_shard/sharded_tensor/*",
"distributed/_shard/sharded_tensor/_ops/*",
"distributed/_shard/sharding_plan/*",
"distributed/_shard/sharding_spec/*",
"distributed/_shard/sharding_spec/chunk_sharding_spec_ops/*",
"distributed/_sharded_tensor/*",
"distributed/_sharding_spec/*",
"distributed/_symmetric_memory/*",
"distributed/_tensor/*",
"distributed/_tools/*",
"distributed/algorithms/*",
"distributed/algorithms/_checkpoint/*",
"distributed/algorithms/_comm_hooks/*",
"distributed/algorithms/_optimizer_overlap/*",
"distributed/algorithms/_quantization/*",
"distributed/algorithms/ddp_comm_hooks/*",
"distributed/algorithms/model_averaging/*",
"distributed/autograd/*",
"distributed/checkpoint/*",
"distributed/elastic/*",
"distributed/elastic/agent/*",
"distributed/elastic/agent/server/*",
"distributed/elastic/events/*",
"distributed/elastic/metrics/*",
"distributed/elastic/multiprocessing/*",
"distributed/elastic/multiprocessing/errors/*",
"distributed/elastic/multiprocessing/subprocess_handler/*",
"distributed/elastic/rendezvous/*",
"distributed/elastic/timer/*",
"distributed/elastic/utils/*",
"distributed/elastic/utils/data/*",
"distributed/fsdp/*",
"distributed/launcher/*",
"distributed/nn/*",
"distributed/nn/api/*",
"distributed/nn/jit/*",
"distributed/nn/jit/templates/*",
"distributed/optim/*",
"distributed/pipelining/*",
"distributed/rpc/*",
"distributed/rpc/_testing/*",
"distributed/tensor/*",
"distributed/tensor/_ops/*",
"distributed/tensor/debug/*",
"distributed/tensor/experimental/*",
"distributed/tensor/parallel/*",
"distributions/*",
"export/*",
"export/experimental/*",
"export/passes/*",
"fft/*",
"func/*",
"functional.py",
"futures/*",
"fx/*",
"fx/experimental/*",
"fx/experimental/migrate_gradual_types/*",
"fx/experimental/unification/*",
"fx/experimental/unification/multipledispatch/*",
"fx/passes/*",
"fx/passes/backends/*",
"fx/passes/dialect/*",
"fx/passes/dialect/common/*",
"fx/passes/infra/*",
"fx/passes/tests/*",
"fx/passes/utils/*",
"hub.py",
"include/*",
"include/ATen/*",
"include/ATen/core/*",
"include/ATen/core/boxing/*",
"include/ATen/core/boxing/impl/*",
"include/ATen/core/dispatch/*",
"include/ATen/core/op_registration/*",
"include/ATen/cpu/*",
"include/ATen/cpu/vec/*",
"include/ATen/cpu/vec/vec256/*",
"include/ATen/cpu/vec/vec256/vsx/*",
"include/ATen/cpu/vec/vec256/zarch/*",
"include/ATen/cpu/vec/vec512/*",
"include/ATen/cuda/*",
"include/ATen/cuda/detail/*",
"include/ATen/cuda/tunable/*",
"include/ATen/cudnn/*",
"include/ATen/detail/*",
"include/ATen/functorch/*",
"include/ATen/hip/impl/*",
"include/ATen/miopen/*",
"include/ATen/mps/*",
"include/ATen/native/*",
"include/ATen/native/cpu/*",
"include/ATen/native/cuda/*",
"include/ATen/native/mps/*",
"include/ATen/native/nested/*",
"include/ATen/native/quantized/*",
"include/ATen/native/quantized/cpu/*",
"include/ATen/native/transformers/*",
"include/ATen/native/utils/*",
"include/ATen/ops/*",
"include/ATen/quantized/*",
"include/ATen/xpu/*",
"include/ATen/xpu/detail/*",
"include/c10/core/*",
"include/c10/core/impl/*",
"include/c10/cuda/*",
"include/c10/cuda/impl/*",
"include/c10/macros/*",
"include/c10/util/*",
"include/c10/xpu/*",
"include/c10/xpu/impl/*",
"include/caffe2/serialize/*",
"include/kineto/*",
"include/pybind11/*",
"include/pybind11/detail/*",
"include/pybind11/eigen/*",
"include/torch/*",
"include/torch/csrc/*",
"include/torch/csrc/api/include/torch/*",
"include/torch/csrc/api/include/torch/data/*",
"include/torch/csrc/api/include/torch/data/dataloader/*",
"include/torch/csrc/api/include/torch/data/datasets/*",
"include/torch/csrc/api/include/torch/data/detail/*",
"include/torch/csrc/api/include/torch/data/samplers/*",
"include/torch/csrc/api/include/torch/data/transforms/*",
"include/torch/csrc/api/include/torch/detail/*",
"include/torch/csrc/api/include/torch/nn/*",
"include/torch/csrc/api/include/torch/nn/functional/*",
"include/torch/csrc/api/include/torch/nn/modules/*",
"include/torch/csrc/api/include/torch/nn/modules/container/*",
"include/torch/csrc/api/include/torch/nn/options/*",
"include/torch/csrc/api/include/torch/nn/parallel/*",
"include/torch/csrc/api/include/torch/nn/utils/*",
"include/torch/csrc/api/include/torch/optim/*",
"include/torch/csrc/api/include/torch/optim/schedulers/*",
"include/torch/csrc/api/include/torch/serialize/*",
"include/torch/csrc/autograd/*",
"include/torch/csrc/autograd/functions/*",
"include/torch/csrc/autograd/generated/*",
"include/torch/csrc/autograd/utils/*",
"include/torch/csrc/cuda/*",
"include/torch/csrc/distributed/autograd/context/*",
"include/torch/csrc/distributed/autograd/functions/*",
"include/torch/csrc/distributed/autograd/rpc_messages/*",
"include/torch/csrc/distributed/c10d/*",
"include/torch/csrc/distributed/rpc/*",
"include/torch/csrc/dynamo/*",
"include/torch/csrc/inductor/*",
"include/torch/csrc/inductor/aoti_runner/*",
"include/torch/csrc/inductor/aoti_runtime/*",
"include/torch/csrc/inductor/aoti_torch/*",
"include/torch/csrc/inductor/aoti_torch/c/*",
"include/torch/csrc/inductor/aoti_torch/generated/*",
"include/torch/csrc/jit/*",
"include/torch/csrc/jit/api/*",
"include/torch/csrc/jit/backends/*",
"include/torch/csrc/jit/codegen/cuda/*",
"include/torch/csrc/jit/frontend/*",
"include/torch/csrc/jit/ir/*",
"include/torch/csrc/jit/mobile/*",
"include/torch/csrc/jit/passes/*",
"include/torch/csrc/jit/passes/quantization/*",
"include/torch/csrc/jit/passes/utils/*",
"include/torch/csrc/jit/python/*",
"include/torch/csrc/jit/runtime/*",
"include/torch/csrc/jit/serialization/*",
"include/torch/csrc/jit/tensorexpr/*",
"include/torch/csrc/jit/tensorexpr/operators/*",
"include/torch/csrc/jit/testing/*",
"include/torch/csrc/lazy/backend/*",
"include/torch/csrc/lazy/core/*",
"include/torch/csrc/lazy/core/internal_ops/*",
"include/torch/csrc/lazy/core/ops/*",
"include/torch/csrc/lazy/python/*",
"include/torch/csrc/lazy/ts_backend/*",
"include/torch/csrc/onnx/*",
"include/torch/csrc/profiler/*",
"include/torch/csrc/profiler/orchestration/*",
"include/torch/csrc/profiler/python/*",
"include/torch/csrc/profiler/standalone/*",
"include/torch/csrc/profiler/stubs/*",
"include/torch/csrc/profiler/unwind/*",
"include/torch/csrc/tensor/*",
"include/torch/csrc/utils/*",
"include/torch/csrc/xpu/*",
"jit/*",
"jit/_passes/*",
"jit/mobile/*",
"lib/*",
"library.py",
"linalg/*",
"masked/*",
"masked/maskedtensor/*",
"monitor/*",
"mps/*",
"mtia/*",
"multiprocessing/*",
"nested/*",
"nested/_internal/*",
"nn/*",
"nn/attention/*",
"nn/backends/*",
"nn/intrinsic/*",
"nn/intrinsic/modules/*",
"nn/intrinsic/qat/*",
"nn/intrinsic/qat/modules/*",
"nn/intrinsic/quantized/*",
"nn/intrinsic/quantized/dynamic/*",
"nn/intrinsic/quantized/dynamic/modules/*",
"nn/intrinsic/quantized/modules/*",
"nn/modules/*",
"nn/parallel/*",
"nn/qat/*",
"nn/qat/dynamic/*",
"nn/qat/dynamic/modules/*",
"nn/qat/modules/*",
"nn/quantizable/*",
"nn/quantizable/modules/*",
"nn/quantized/*",
"nn/quantized/_reference/*",
"nn/quantized/_reference/modules/*",
"nn/quantized/dynamic/*",
"nn/quantized/dynamic/modules/*",
"nn/quantized/modules/*",
"nn/utils/*",
"nn/utils/_expanded_weights/*",
"onnx/*",
"onnx/_internal/*",
"onnx/_internal/diagnostics/*",
"onnx/_internal/diagnostics/infra/*",
"onnx/_internal/diagnostics/infra/sarif/*",
"onnx/_internal/exporter/*",
"onnx/_internal/fx/*",
"onnx/_internal/fx/analysis/*",
"onnx/_internal/fx/passes/*",
"optim/*",
"optim/_multi_tensor/*",
"overrides.py",
"package/*",
"package/analyze/*",
"profiler/*",
"py.typed",
"quantization/*",
"quantization/fx/*",
"quasirandom.py",
"random.py",
"return_types.py",
"return_types.pyi",
"serialization.py",
"share/cmake/ATen/*",
"share/cmake/Caffe2/*",
"share/cmake/Caffe2/Modules_CUDA_fix/*",
"share/cmake/Caffe2/Modules_CUDA_fix/upstream/*",
"share/cmake/Caffe2/Modules_CUDA_fix/upstream/FindCUDA/*",
"share/cmake/Caffe2/public/*",
"share/cmake/Torch/*",
"signal/*",
"signal/windows/*",
"sparse/*",
"special/*",
"storage.py",
"testing/*",
"testing/_internal/*",
"testing/_internal/codegen/*",
"testing/_internal/data/*",
"testing/_internal/distributed/*",
"testing/_internal/distributed/_shard/*",
"testing/_internal/distributed/_shard/sharded_tensor/*",
"testing/_internal/distributed/_tensor/*",
"testing/_internal/distributed/nn/*",
"testing/_internal/distributed/nn/api/*",
"testing/_internal/distributed/rpc/*",
"testing/_internal/distributed/rpc/examples/*",
"testing/_internal/distributed/rpc/jit/*",
"testing/_internal/generated/*",
"testing/_internal/opinfo/*",
"testing/_internal/opinfo/definitions/*",
"testing/_internal/optests/*",
"testing/_internal/test_module/*",
"torch_version.py",
"types.py",
"utils/*",
"utils/_strobelight/*",
"utils/_sympy/*",
"utils/backcompat/*",
"utils/benchmark/*",
"utils/benchmark/examples/*",
"utils/benchmark/op_fuzzers/*",
"utils/benchmark/utils/*",
"utils/benchmark/utils/valgrind_wrapper/*",
"utils/bottleneck/*",
"utils/data/*",
"utils/data/_utils/*",
"utils/data/datapipes/*",
"utils/data/datapipes/dataframe/*",
"utils/data/datapipes/iter/*",
"utils/data/datapipes/map/*",
"utils/data/datapipes/utils/*",
"utils/hipify/*",
"utils/jit/*",
"utils/model_dump/*",
"utils/tensorboard/*",
"utils/viz/*",
"version.py",
"xpu/*",

        ], 'torchgen': [
"__init__.py",
"aoti/*",
"api/*",
"api/types/*",
"code_template.py",
"context.py",
"dest/*",
"executorch/*",
"executorch/api/*",
"executorch/api/types/*",
"gen.py",
"gen_aoti_c_shim.py",
"gen_backend_stubs.py",
"gen_executorch.py",
"gen_functionalization_type.py",
"gen_lazy_tensor.py",
"gen_schema_utils.py",
"gen_vmap_plumbing.py",
"local.py",
"model.py",
"native_function_generation.py",
"operator_versions/*",
"packaged/ATen/native/*",
"packaged/ATen/templates/*",
"packaged/autograd/*",
"packaged/autograd/templates/*",
"selective_build/*",
"static_runtime/*",
"utils.py",
"yaml_utils.py",

        ], 'functorch': [
"_C.cpython-312.so",
"__init__.py",
"_src/*",
"_src/aot_autograd/*",
"_src/eager_transforms/*",
"_src/make_functional/*",
"_src/vmap/*",
"compile/*",
"dim/*",
"einops/*",
"experimental/*",
        ]
},
      long_description=long_description,
      long_description_content_type="text/markdown",
      classifiers=[
            "Intended Audience :: Developers",
            "Intended Audience :: Education",
            "Intended Audience :: Information Technology",
            "Intended Audience :: End Users/Desktop",
            "License :: OSI Approved :: Apache Software License",
            "Operating System :: Android",
            "Programming Language :: Python",
            "Programming Language :: Python :: 3.12",
            "Topic :: Software Development",
        ],
      python_requires='==3.12.*',
      license="OSI Approved :: BSD License",
      install_requires=["pillow-qpython", "numpy-aipy","typing-extensions-qpython", "sympy", "networkx", "mpmath", "fsspec", "filelock"]
     )


for item in sos:
    try:
        shutil.copy(root+'/'+item, lib)
    except:
        pass

