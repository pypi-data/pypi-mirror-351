# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class Audio1(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for this audio response.
    """

    expires_at: int = pydantic.Field()
    """
    The Unix timestamp (in seconds) for when this audio response will
    no longer be accessible on the server for use in multi-turn
    conversations.
    """

    data: str = pydantic.Field()
    """
    Base64 encoded audio bytes generated by the model, in the format
    specified in the request.
    """

    transcript: str = pydantic.Field()
    """
    Transcript of the audio generated by the model.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
