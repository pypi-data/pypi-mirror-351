# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .top_logprob import TopLogprob
import typing
from .chat_completion_token_logprob import ChatCompletionTokenLogprob
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Logprobs(UniversalBaseModel):
    content: typing.List[ChatCompletionTokenLogprob] = pydantic.Field()
    """
    A list of message content tokens with log probability information.
    """

    refusal: typing.List[ChatCompletionTokenLogprob] = pydantic.Field()
    """
    A list of message refusal tokens with log probability information.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
