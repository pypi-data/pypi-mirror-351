"""Output formatting utilities."""

from datetime import datetime
from typing import Dict


class MarkdownFormatter:
    """Format extracted technical content as markdown."""

    def format(self, technical_data: Dict) -> str:
        """Format technical data as markdown document."""
        lines = []

        lines.append(f"# {technical_data['title']}")
        lines.append("")

        if technical_data["authors"]:
            authors_str = ", ".join(technical_data["authors"])
            lines.append(f"**Authors:** {authors_str}")
            lines.append("")

        lines.append(f"**Source:** {technical_data['source']}")
        if technical_data["url"]:
            lines.append(f"**URL:** {technical_data['url']}")
        lines.append(
            f"**Processed:** {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}"
        )
        lines.append("")

        lines.append("---")
        lines.append("")

        if technical_data["abstract"]:
            lines.append("## Abstract")
            lines.append("")
            lines.append(technical_data["abstract"])
            lines.append("")

        lines.append("## Technical Summary")
        lines.append("")
        lines.append(
            "*The following technical details were extracted by The Winnower, "
            "focusing on core methods, algorithms, and implementations while "
            "filtering out benchmarks and promotional content.*"
        )
        lines.append("")

        lines.append(technical_data["technical_content"])
        lines.append("")

        lines.append("---")
        lines.append("")
        lines.append(
            "*Generated by "
            "[The Winnower](https://github.com/jwuphysics/winnower)*"
        )

        return "\n".join(lines)
