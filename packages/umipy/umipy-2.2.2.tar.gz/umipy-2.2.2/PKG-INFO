Metadata-Version: 2.4
Name: umipy
Version: 2.2.2
Summary: api wrapper for umi.top crypto
Project-URL: Repository, https://github.com/kesha1225/PyUmi
Author: kesha1225
License-Expression: MIT
Keywords: api,crypto,umi,wrapper
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: ~=3.12
Requires-Dist: aiohttp<4,>=3.10.3
Requires-Dist: mnemonic<0.22,>=0.21
Requires-Dist: pydantic<3,>=2.4.2
Requires-Dist: pynacl<2,>=1.5.0
Description-Content-Type: text/markdown

# UMIPY
[![codecov](https://codecov.io/github/kesha1225/PyUmi/graph/badge.svg?token=PZ12EHSKAH)](https://codecov.io/github/kesha1225/PyUmi)

Interaction with umi blockchain


### Install

for stable version

`pip install umipy`

for dev version

`pip install https://github.com/RoyFractal/PyUmi/archive/master.zip` 


### Usage

You can find more examples - [examples/](examples/)

#### simple getting a address data

```python3
import asyncio
import aiohttp

from umipy import UmiPy


async def main():
    umi = UmiPy(session=aiohttp.ClientSession())
    balance = await umi.get_balance(
        "umi17ymaed9h9hq7s5pc2f5fhmlzpmsk3qtc6g2cgm360zysz0uvq44qnxlsuz"
    )
    print(balance)

    trans = await umi.get_transactions(
        "umi17ymaed9h9hq7s5pc2f5fhmlzpmsk3qtc6g2cgm360zysz0uvq44qnxlsuz"
    )
    print(trans)

    await umi.close()


asyncio.run(main())
```
