"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from .useroperation import UserOperation, UserOperationTypedDict
from compass_api_sdk.types import BaseModel
import pydantic
from pydantic import ConfigDict
from typing import Any, Dict, List
from typing_extensions import TypedDict


class BatchedUserOperationsRequestTypedDict(TypedDict):
    r"""Request model for batching user operations."""

    chain: Chain
    r"""The chain to use."""
    operations: List[UserOperationTypedDict]
    r"""List of possible user operations"""


class BatchedUserOperationsRequest(BaseModel):
    r"""Request model for batching user operations."""

    model_config = ConfigDict(
        populate_by_name=True, arbitrary_types_allowed=True, extra="allow"
    )
    __pydantic_extra__: Dict[str, Any] = pydantic.Field(init=False)

    chain: Chain
    r"""The chain to use."""

    operations: List[UserOperation]
    r"""List of possible user operations"""

    @property
    def additional_properties(self):
        return self.__pydantic_extra__

    @additional_properties.setter
    def additional_properties(self, value):
        self.__pydantic_extra__ = value  # pyright: ignore[reportIncompatibleVariableOverride]
