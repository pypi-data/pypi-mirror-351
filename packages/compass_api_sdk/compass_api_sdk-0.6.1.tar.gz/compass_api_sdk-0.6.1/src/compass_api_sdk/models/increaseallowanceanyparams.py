"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .contractname import ContractName
from .token_enum import TokenEnum
from compass_api_sdk.types import BaseModel
from typing import Union
from typing_extensions import TypeAliasType, TypedDict


IncreaseAllowanceAnyParamsAmountTypedDict = TypeAliasType(
    "IncreaseAllowanceAnyParamsAmountTypedDict", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


IncreaseAllowanceAnyParamsAmount = TypeAliasType(
    "IncreaseAllowanceAnyParamsAmount", Union[float, str]
)
r"""The amount of tokens to increase the allowance by."""


class IncreaseAllowanceAnyParamsTypedDict(TypedDict):
    r"""Parameters model for increasing allowance for any arbitrary ERC20 address."""

    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """
    contract_name: ContractName
    r"""Select the protocol.

    E.g. for increasing ERC-20 allowance.
    """
    amount: IncreaseAllowanceAnyParamsAmountTypedDict
    r"""The amount of tokens to increase the allowance by."""


class IncreaseAllowanceAnyParams(BaseModel):
    r"""Parameters model for increasing allowance for any arbitrary ERC20 address."""

    token: TokenEnum
    r"""A class representing the token.

    This class is used to represent the token in the system. Notice individual
    endpoints' documentation where per chain tokens are presented.
    """

    contract_name: ContractName
    r"""Select the protocol.

    E.g. for increasing ERC-20 allowance.
    """

    amount: IncreaseAllowanceAnyParamsAmount
    r"""The amount of tokens to increase the allowance by."""
