"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .chain import Chain
from compass_api_sdk.types import BaseModel
from typing import Optional, Union
from typing_extensions import NotRequired, TypeAliasType, TypedDict


BlockTypedDict = TypeAliasType("BlockTypedDict", Union[int, str])
r"""The block number you want to get this data at."""


Block = TypeAliasType("Block", Union[int, str])
r"""The block number you want to get this data at."""


class MulticallAuthorizationRequestTypedDict(TypedDict):
    r"""Request model for getting a multicall authorization.

    This model is used to authorize a sender address to perform multicall operations,
    allowing it to call multiple functions on multiple contracts in a single
    transaction.

    Only needs to be done once per an EOA.
    """

    chain: Chain
    r"""The chain to use."""
    sender: str
    r"""The Ethereum address to use for authorization"""
    block: NotRequired[BlockTypedDict]
    r"""The block number you want to get this data at."""


class MulticallAuthorizationRequest(BaseModel):
    r"""Request model for getting a multicall authorization.

    This model is used to authorize a sender address to perform multicall operations,
    allowing it to call multiple functions on multiple contracts in a single
    transaction.

    Only needs to be done once per an EOA.
    """

    chain: Chain
    r"""The chain to use."""

    sender: str
    r"""The Ethereum address to use for authorization"""

    block: Optional[Block] = None
    r"""The block number you want to get this data at."""
