[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
  {name = "elonzh", email = "elonzh@outlook.com"}
]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Build Tools",
  "Topic :: Software Development :: Code Generators",
  "Topic :: Software Development :: Compilers"
]
dependencies = [
  "Cython",
  "hatchling",
  "setuptools",
  "typing_extensions; python_version < '3.10'"
]
description = 'Cython build hooks for hatch'
dynamic = ["version"]
keywords = []
license = "MIT"
name = "hatch-cythonize"
readme = "README.md"
requires-python = ">=3.7"

[project.entry-points.hatch]
cython = "hatch_cythonize.hooks"

[project.optional-dependencies]
test = ["coverage[toml]", "pytest", "pytest-cov", "toml", "numpy"]

[project.urls]
Documentation = "https://github.com/elonzh/hatch-cythonize#readme"
Issues = "https://github.com/elonzh/hatch-cythonize/issues"
Source = "https://github.com/elonzh/hatch-cythonize"

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ["py310"]

[tool.coverage.paths]
hatch_cythonize = ["src/hatch_cythonize", "*/hatch-cythonize/src/hatch_cythonize"]
tests = ["tests", "*/hatch-cythonize/tests"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:"
]
skip_empty = true

[tool.coverage.run]
branch = true
omit = ["src/hatch_cythonize/__about__.py", "src/hatch_cythonize/types.py"]
parallel = true
source_pkgs = ["hatch_cythonize"]

[[tool.hatch.envs.all.matrix]]
python = ["3.7", "3.8", "3.10"]

[tool.hatch.envs.default]
dependencies = ["coverage[toml]>=6.5", "pytest", "toml", "numpy"]

[tool.hatch.envs.default.scripts]
cov = ["test-cov", "cov-report"]
cov-report = [
  "- coverage combine",
  "coverage report --format=markdown > COVERAGE.md",
  "coverage html",
  "coverage report"
]
test = "pytest {args:tests} -v"
test-cov = "coverage run -m pytest -vv {args:tests}"

[tool.hatch.envs.lint]
dependencies = ["black", "mypy", "ruff"]
detached = true

[tool.hatch.envs.lint.scripts]
all = ["style", "typing"]
fmt = ["black {args:.}", "ruff --fix {args:.}", "style"]
style = ["ruff {args:.}", "black --check --diff {args:.}"]
typing = "mypy --install-types --non-interactive {args:src/hatch_cythonize tests}"

[tool.hatch.version]
path = "src/hatch_cythonize/__about__.py"

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.ruff.lint]
ignore = [
  "B027",
  "FBT001",
  "FBT002",
  "FBT003",
  "S105",
  "S106",
  "S107",
  "C901",
  "PLR0911",
  "PLR0912",
  "PLR0913",
  "PLR0915"
]
select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT"
]
unfixable = []

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
known-first-party = ["hatch_cythonize"]

[tool.ruff.lint.per-file-ignores]
"**/__init__.py" = ["F401"]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252"]
