[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-etdi"
version = "1.0.1"
description = "Model Context Protocol Python SDK with ETDI security enhancements"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
authors = [
    { name = "Anthropic", email = "support@anthropic.com" },
]
keywords = [
    "ai",
    "llm",
    "mcp",
    "model-context-protocol",
    "etdi",
    "oauth",
    "security",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "anyio>=3.0.0",
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
    # ETDI OAuth dependencies
    "PyJWT[crypto]>=2.8.0",
    "cryptography>=41.0.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    # MCP transport dependencies
    "httpx-sse>=0.4.0",
    "pydantic-settings>=2.0.0",
    # CLI dependencies
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-examples>=0.0.5",  # For example testing
    "ruff>=0.1.0",
    "typer>=0.9.0",  # For CLI functionality
]
cli = [
    "typer>=0.9.0",
]
server = [
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "starlette>=0.27.0",
    "sse-starlette>=2.0.0",
    "pydantic-settings>=2.0.0",
]
client = [
    "httpx-sse>=0.4.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material[imaging]>=9.0.0",
    "mkdocs-glightbox>=0.3.4",
    "mkdocstrings[python]>=0.20.0",
    "pycairo>=1.20.0",
    "cairosvg>=2.5.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.urls]
Homepage = "https://github.com/modelcontextprotocol/python-sdk"
Documentation = "https://modelcontextprotocol.io/python"
Repository = "https://github.com/modelcontextprotocol/python-sdk"
Issues = "https://github.com/modelcontextprotocol/python-sdk/issues"

[project.scripts]
mcp = "mcp.cli.cli:main"
etdi = "mcp.etdi.cli:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/examples",
    "README.md",
    "LICENSE",
    "pyproject.toml",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp", "etdi"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "jwt.*",
    "cryptography.*",
    "jose.*",
]
ignore_missing_imports = true

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "--tb=short",
    "-v",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "oauth: marks tests that require OAuth setup",
    "etdi: marks tests specific to ETDI functionality",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/.*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
