[project]
name = "auxi-core"
version = "2.2.4"
authors = [{ name = "Johan Zietsman", email = "johan.zietsman@ex-mente.co.za" }]
maintainers = [
    { name = "Stefan van der Merwe", email = "stefan.vandermerwe@ex-mente.co.za" },
    { name = "Thys Nortje", email = "thys.nortje@ex-mente.co.za" },

]
license.file = "LICENSE.md"
description = """`auxi` provides tools to help users do calculations for metallurgical process engineering. `auxi-core` provides base infrastructure used by other `auxi` packages."""
requires-python = ">=3.12"
dependencies = [
    "bibtexparser>=2.0.0b7",
    "pydantic>=2.9.2",
    "python-dateutil>=2.9.0.post0",
    "tabulate>=0.9.0",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Operating System :: POSIX :: Linux",
    "Environment :: Console",
]


[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
where = ["src"]
include = ["auxi.core", "auxi.core.*"]


[tool.setuptools.package-data]
"auxi.core" = ["py.typed"]
"auxi.core.bibliography" = ["py.typed"]
"auxi.core.data" = ["bibliography.bib"]
"auxi.core.objects" = ["py.typed"]
"auxi.core.physicalconstants" = ["py.typed"]
"auxi.core.reporting" = ["py.typed"]
"auxi.core.time" = ["py.typed"]


[tool.semantic_release]
assets = []
build_command = "uv build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release."
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
tag_format = "v{version}"
version_toml = ["pyproject.toml:project.version"]
version_variables = ["src/auxi/core/__init__.py:__version__"]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote]
name = "origin"
type = "gitlab"
ignore_token_for_push = false

[tool.semantic_release.remote.token]
env = "GITLAB_TOKEN"

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true


[tool.ruff]
line-length = 120
extend-select = ["UP", "D"]
ignore = [
    "D200", # One-line docstring should fit on one line
    "D212", # Multi-line docstring summary should start at the first line
    "D203", # 1 blank line required before class docstring
    "D413", # Missing blank line after last section ("Raises")
]


[tool.ruff.lint.isort]
force-wrap-aliases = true
combine-as-imports = true
lines-after-imports = 2


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true
skip-magic-trailing-comma = false


[tool.pyright]
typeCheckingMode = "strict"
include = ["src"]
exclude = ["**/__pycache__"]
strict = ["src"]
venvPath = "."
venv = ".venv"

pythonVersion = "3.12"
pythonPlatform = "Linux"

[tool.pytest.ini_options]
pythonpath = ["src"]

[tool.uv]
prerelease = "allow"

[tool.uv.sources]
apibook = { git = "https://github.com/tgolsson/python-apibook.git" }

[dependency-groups]
dev = [
    "coverage>=7.6.4",
    "pre-commit>=4.0.1",
    "pyright>=1.1.387",
    "pytest>=8.3.3",
    "pytest-cov>=6.0.0",
    "python-semantic-release>=9.12.0",
    "ruff>=0.7.1",
    "apibook",
]
