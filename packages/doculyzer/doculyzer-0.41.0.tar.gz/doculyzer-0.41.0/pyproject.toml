[build-system]
requires = ["setuptools>=60.41.0", "wheel", "build", "twine"]
build-backend = "setuptools.build_meta"

[project]
name = "doculyzer"
version = "0.41.0"
description = "Universal, Searchable, Structured Document Manager"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Kenneth Stott", email = "ken@hasura.io"}
]
keywords = ["document-management", "semantic-search", "embedding", "document-parsing"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Text Processing",
    "Topic :: Database",
    "Natural Language :: English"
]
dependencies = [
    # Core system dependencies
    "lxml~=5.4.0",
    "PyYAML~=6.0.2",
    "beautifulsoup4~=4.13.4",
    "Markdown~=3.8",
    "requests~=2.32.3",
    "pydantic~=2.11.4",

    # Document parsers
    "python-docx~=1.1.2",
    "openpyxl~=3.1.5",
    "pymupdf~=1.25.5",
    "python-pptx~=1.0.2",
    "datefinder~=0.7.3",

    # Utilities
    "python-dateutil~=2.9.0",
    "jsonpath-ng~=1.7.0",
    "python-dotenv~=1.1.0",
    "wcmatch~=10.0",
]

[project.optional-dependencies]
# Development tools
development = [
    "pytest~=8.3.5",
    "build~=1.2.2"
]

# Core optional libraries
db-core = [
    # SQLite extensions (recommended for macOS/Linux systems)
    "sqlean.py~=3.47.0; platform_system == 'Darwin'",
    "sqlean.py~=3.47.0; platform_system == 'Linux' and platform_machine == 'x86_64'",
    # SQL ORM framework
    "SQLAlchemy~=2.0.40",
]

# Scientific/Math
scientific = [
    "numpy~=2.0.2",
]

# Embedding providers
huggingface = [
    "torch==2.7.0",
    "sentence-transformers~=4.1.0",
]

openai = [
    "openai~=1.76.0",
]

fastembed = [
    "fastembed>=0.1.0",
]

# All embedding providers
embedding-all = [
    "torch==2.7.0",
    "sentence-transformers~=4.1.0",
    "openai~=1.76.0",
    "fastembed>=0.1.0",
]

# For backward compatibility (includes HuggingFace by default)
default = [
    "torch==2.7.0",
    "sentence-transformers~=4.1.0",
]

# Additional document parsing utilities
document_parsing = [
    "python-magic~=0.4.27",
]

# Database backends
db-mongodb = [
    "pymongo~=4.12.0",
]

db-elasticsearch = [
    "elasticsearch~=9.0.1",
]

db-postgresql = [
    "psycopg2-binary~=2.9.10",
]

db-mysql = [
    "mysql-connector-python~=9.3.0",
]

db-neo4j = [
    "neo4j~=5.28.1",
]

db-libsql = [
    "libsql-client~=0.3.1",
]

db-solr = [
    "pysolr~=3.10.0"
]

# Database vector extensions
db-vector = [
    "pgvector>=0.2.0",
    "sqlite-vec>=0.1.0",
    "sqlite-vss>=0.1.0",
]

# Cloud storage
cloud-aws = [
    "boto3~=1.38.3",
    "botocore~=1.38.4",
]

# Content Sources - Database
source-database = [
    "SQLAlchemy~=2.0.40",
]

# Content Sources - Confluence & JIRA
source-confluence = [
    "atlassian-python-api~=3.41.9",
]

source-jira = [
    "atlassian-python-api~=3.41.9",
]

# Content Sources - ServiceNow
source-servicenow = [
    "pysnow~=0.7.17",
]

# Content Sources - MongoDB
source-mongodb = [
    "pymongo~=4.12.0",
]

# Content Sources - SharePoint
source-sharepoint = [
    "Office365-REST-Python-Client~=2.5.0",
]

# Content Sources - Google Drive
source-gdrive = [
    "google-api-python-client~=2.36.0",
    "google-auth-oauthlib~=1.0.0",
]

# All content sources
source-all = [
    "SQLAlchemy~=2.0.40",
    "atlassian-python-api~=3.41.9",
    "pysnow~=0.7.17",
    "pymongo~=4.12.0",
    "Office365-REST-Python-Client~=2.5.0",
    "google-api-python-client~=2.36.0",
    "google-auth-oauthlib~=1.0.0",
]

# All database backends
db-all = [
    # Core database dependencies
    "sqlean.py~=3.47.0; platform_system == 'Darwin'",
    "sqlean.py~=3.47.0; platform_system == 'Linux' and platform_machine == 'x86_64'",
    "SQLAlchemy~=2.0.40",
    # Database backends
    "pymongo~=4.12.0",
    "psycopg2-binary~=2.9.10",
    "mysql-connector-python~=9.3.0",
    "neo4j~=5.28.1",
    "libsql-client~=0.3.1",
    "pgvector>=0.2.0",
    "sqlite-vec>=0.1.0",
    "sqlite-vss>=0.1.0",
]

# Complete installation (including all optional dependencies)
all = [
    # Core database components
    "sqlean.py~=3.47.0; platform_system == 'Darwin'",
    "sqlean.py~=3.47.0; platform_system == 'Linux' and platform_machine == 'x86_64'",
    "SQLAlchemy~=2.0.40",

    # Scientific/Math
    "numpy~=2.0.2",

    # Embedding providers
    "torch==2.7.0",
    "sentence-transformers~=4.1.0",
    "openai~=1.76.0",
    "fastembed>=0.1.0",

    # Database backends
    "pymongo~=4.12.0",
    "psycopg2-binary~=2.9.10",
    "mysql-connector-python~=9.3.0",
    "neo4j~=5.28.1",
    "libsql-client~=0.3.1",
    "pgvector>=0.2.0",
    "sqlite-vec>=0.1.0",
    "sqlite-vss>=0.1.0",
    "pysolr>=3.10.0",

    # Content Sources
    "atlassian-python-api~=3.41.9",
    "pysnow~=0.7.17",
    "Office365-REST-Python-Client~=2.5.0",
    "google-api-python-client~=2.36.0",
    "google-auth-oauthlib~=1.0.0",

    # Cloud storage
    "boto3~=1.38.3",
    "botocore~=1.38.4",

    # Additional utilities
    "python-magic~=0.4.27",

    # Development tools
    "pytest~=8.3.5",
    "build~=1.2.2"
]

# Minimal installation (core only with SQLite)
minimal = []

[project.urls]
homepage = "https://github.com/hasura/doculyzer"
repository = "https://github.com/hasura/doculyzer"
documentation = "https://github.com/hasura/doculyzer/wiki"
issues = "https://github.com/hasura/doculyzer/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
# Include vendor/libmagic and its contents
"doculyzer" = ["vendor/libmagic/*"]

[tool.setuptools.exclude-package-data]
# Exclude unnecessary files, if needed (e.g., tests or documentation)
"doculyzer" = ["tests/*"]

