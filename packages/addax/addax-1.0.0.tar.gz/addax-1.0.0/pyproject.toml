[tool.poetry]
name = "addax"
version = "1.0.0"
description = "Text analysis library"
authors = ["Dalia Tavizon-Dykstra"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
textblob = "^0.19.0"
pandas = "^2.2.3"


[tool.poetry.group.dev.dependencies]
pre-commit = "^4.2.0"
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
ruff = "^0.11.11"
python-semantic-release = {version = "^10.0.2", python = "^3.12"}
myst-nb = "^1.2.0"
sphinx-autoapi = "^3.6.0"
sphinx-rtd-theme = "^3.0.2"

[tool.semantic_release]
version_toml = [
    "pyproject.toml:tool.poetry.version",
]                                                    # version location
branch = "main"                                      # branch to make releases of
changelog_file = "CHANGELOG.md"                      # changelog file
build_command = "pip install poetry && poetry build" # build dists

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "conf.py",
    "docs"
]

# Customize the maximum line length.
line-length = 120
indent-width = 4

# Assume Python 3.9
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "ALL", # include all the rules, including new ones
]


ignore = [
    "E501",  # line too long
    "PT009", # Use a regular `assert` instead of unittest-style `assert..`
    "PT027", # Use `pytest.raises` instead of unittest-style `assertRaises`
    "G004", # Logging statement uses f-string
    "FBT001", # Boolean-typed positional argument in function definition
    "FBT002", # Boolean default positional argument in function definition
    "TRY003", # Avoid specifying long messages outside the exception class
    "EM102", # Exception must not use an f-string literal, assign to variable first
    "PLR2004", # Magic value used in comparison, consider replacing `0.1` with a constant variable
    "BLE001", # Do not catch blind exception: `Exception`
    "PD901", # Avoid using the generic variable name `df` for DataFrames
    "TRY300", # Consider moving this statement to an `else` block
    "RET504", # Unnecessary assignment to `df_proc` before `return` statement
    "D205", # 1 blank line required between summary line and description
    "TRY401", # Redundant exception object included in `logging.exception` call
    "INP001", # file `tests/test_addax.py` is part of an implicit namespace package. Add an `__init__.py`.
    "SIM115", # Use a context manager for opening files


]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
