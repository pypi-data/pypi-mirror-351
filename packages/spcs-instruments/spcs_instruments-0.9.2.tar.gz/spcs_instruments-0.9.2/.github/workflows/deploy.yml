name: Deploy to PyPI server

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine hatchling
      
      - name: Build distribution packages
        run: |
          python -m build --sdist --wheel
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-packages
          path: dist/
  
  test:
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.12']
    
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist
      
      - name: Install package and test
        run: |
          python -m pip install --upgrade pip
          pip install dist/*.whl pytest
          pytest
  
  release:
    name: Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs: [build, test]
    steps:
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-packages
          path: dist
      
      - name: Install twine
        run: python -m pip install --upgrade twine
      
      - name: Publish to PyPI
        if: >-
          !contains(github.ref, '.alpha') && 
          !contains(github.ref, '-alpha') && 
          !contains(github.ref, '.beta') && 
          !contains(github.ref, '-beta') && 
          !contains(github.ref, '.rc') && 
          !contains(github.ref, '-rc')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --repository-url https://upload.pypi.org/legacy/ dist/*
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}