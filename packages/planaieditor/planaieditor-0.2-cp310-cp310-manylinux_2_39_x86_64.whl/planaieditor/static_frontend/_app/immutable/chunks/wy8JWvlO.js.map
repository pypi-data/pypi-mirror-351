{"version":3,"file":"wy8JWvlO.js","sources":["../../../../../../node_modules/monaco-editor-wrapper/dist/workers/workerLoaders.js"],"sourcesContent":["/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2024 TypeFox and others.\n * Licensed under the MIT License. See LICENSE in the package root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { useWorkerFactory } from 'monaco-languageclient/workerFactory';\nexport const defineDefaultWorkerLoaders = () => {\n    const defaultTextEditorWorker = () => new Worker(new URL('@codingame/monaco-vscode-editor-api/esm/vs/editor/editor.worker.js', import.meta.url), { type: 'module' });\n    const defaultTextMateWorker = () => new Worker(new URL('@codingame/monaco-vscode-textmate-service-override/worker', import.meta.url), { type: 'module' });\n    return {\n        // if you import monaco api as 'monaco-editor': monaco-editor/esm/vs/editor/editor.worker.js\n        TextEditorWorker: defaultTextEditorWorker,\n        TextMateWorker: defaultTextMateWorker,\n        // these are other possible workers not configured by default\n        OutputLinkDetectionWorker: undefined,\n        LanguageDetectionWorker: undefined,\n        NotebookEditorWorker: undefined,\n        LocalFileSearchWorker: undefined\n    };\n};\nexport const configureDefaultWorkerFactory = (logger) => {\n    useWorkerFactory({\n        workerLoaders: defineDefaultWorkerLoaders(),\n        logger\n    });\n};\n//# sourceMappingURL=workerLoaders.js.map"],"names":["defineDefaultWorkerLoaders","configureDefaultWorkerFactory","logger","useWorkerFactory"],"mappings":"kCAKY,MAACA,EAA6B,KAG/B,CAEH,iBAJ4B,IAAM,IAAI,OAAO,IAAA,IAAA,GAAA,IAAA,IAAA,uCAAA,YAAA,GAAA,EAAA,KAAA,YAAA,GAAA,EAAgG,CAAE,KAAM,QAAQ,CAAE,EAK/J,eAJ0B,IAAM,IAAI,OAAO,IAAA,IAAA,GAAA,IAAA,IAAA,gCAAA,YAAA,GAAA,EAAA,KAAA,YAAA,GAAA,EAAuF,CAAE,KAAM,QAAQ,CAAE,EAMpJ,0BAA2B,OAC3B,wBAAyB,OACzB,qBAAsB,OACtB,sBAAuB,MAC1B,GAEQC,EAAiCC,GAAW,CACrDC,EAAiB,CACb,cAAeH,EAA4B,EAC3C,OAAAE,CACR,CAAK,CACL","x_google_ignoreList":[0]}