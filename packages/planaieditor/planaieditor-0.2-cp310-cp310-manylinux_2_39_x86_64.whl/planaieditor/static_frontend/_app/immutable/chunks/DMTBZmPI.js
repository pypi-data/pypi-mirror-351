const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./C5dUYXMV.js","./D6-XlEtG.js","./DQYsF6hY.js"])))=>i.map(i=>d[i]);
import{D as b,U as V,eK as R,l as d,R as Ie,s as Ze,eL as Ut,G as Z,d8 as hr,eM as jt,eN as ur,eO as fr,N,c as we,r as gr,eP as yr,eQ as vr,eR as Er,eS as Sr,bY as ze,bZ as it,k as f,eB as wr,eT as ct,n as mr,eU as pr,eV as Dr,eW as Fr,aw as _r,e9 as v,eX as ie,e8 as Cr,eY as E,eZ as y,e_ as mi,e$ as ht,b9 as de,f0 as Rr,eo as fe,f1 as br,f2 as Ir,f3 as x,f4 as _,f5 as Or,f6 as Q,f7 as B,f8 as ke,f9 as ut,d_ as Lr,fa as Qt,fb as Ee,fc as w,fd as pi,fe as ue,ep as O,ff as Jt,fg as Di,fh as Zt,fi as rt,fj as Tr,fk as Ar,fl as se,dx as st,a3 as Le,fm as nt,fn as Fi,fo as We,fp as at,fq as xr,fr as Nr,fs as Te,ft as Kt,dF as Se,dG as Ur,fu as Pr,fv as Mr,cS as q,u as kr,fw as ot,fx as Pt,fy as Wr,fz as Br,ee as Ye,_ as W,d as h,f as me,eg as k,cR as C,cn as be,fA as Gr,fB as Hr,fC as _i,fD as ei,fE as Vr,d9 as zr,Q as j,fF as ti,ax as Ae,p as xe,fG as Mt,fH as Yr,e7 as Ci,fI as kt,fJ as qr,fK as $r,eF as Ne,er as Ri,dW as Wt,eA as bi,d7 as Xr,fL as jr,ck as Qr,bO as Ii,da as Oi,cV as pe,dX as Ke,eC as Bt,bW as Li,dZ as Jr,ek as Zr,el as Kr,em as es,fM as ne,fN as ts,bP as ii,j as qe,fO as Ti,cm as Ai,fP as is,dw as Gt,a1 as rs,eH as Ht,e6 as Ue,cX as ri,fQ as si,cQ as xi,fR as ni,fS as ss,ez as ns,bX as Vt,cZ as Ni,fT as Ui,b0 as Pi,eI as Mi,eh as zt,fU as ft,fV as ai,fW as as,fX as os,fY as ls,fZ as ds,e as ki,f_ as p,f$ as cs,g0 as oi,g1 as Wi,g2 as Bi,g3 as hs,g4 as I,g5 as us,g6 as fs,bV as gt,g7 as gs,I as ys,b5 as vs,cF as Es,g8 as Ss,cG as m,g9 as ws,F as ms,ga as ps,gb as Ds,S as Pe,gc as yt,gd as Fs}from"./DRtkoAoK.js";import{_ as et}from"./ZE6ibgzo.js";const Gi={EditorPane:"workbench.contributions.editors",EditorFactory:"workbench.contributions.editor.inputFactories"},wn={id:"default",displayName:d(3827,"Text Editor"),providerDisplayName:d(3828,"Built-in")},mn="workbench.editor.sidebysideEditor",pn="workbench.editors.textDiffEditor",Dn="workbench.editors.binaryResourceDiffEditor";var li;(function(n){n[n.PROGRAMMATIC=1]="PROGRAMMATIC",n[n.USER=2]="USER",n[n.EDIT=3]="EDIT",n[n.NAVIGATION=4]="NAVIGATION",n[n.JUMP=5]="JUMP"})(li||(li={}));var di;(function(n){n[n.IDENTICAL=1]="IDENTICAL",n[n.SIMILAR=2]="SIMILAR",n[n.DIFFERENT=3]="DIFFERENT"})(di||(di={}));function Fn(n){const e=n;return!!e&&typeof e.getSelection=="function"&&!!e.onDidChangeSelection}function _n(n,e,t){for(const i of t.visibleEditorPanes)if(i.group.id===e&&n.matches(i.input))return i.getViewState()}function Cn(n){if(P(n))return!1;const e=n;return V.isUri(e==null?void 0:e.resource)}function Be(n){if(P(n))return!1;const e=n;return(e==null?void 0:e.original)!==void 0&&e.modified!==void 0}function ci(n){if(P(n))return!1;const e=n;return!e||e.resources&&!Array.isArray(e.resources)?!1:!!e.resources||!!e.multiDiffSource}function lt(n){if(P(n)||Be(n))return!1;const e=n;return(e==null?void 0:e.primary)!==void 0&&e.secondary!==void 0}function Rn(n){if(P(n))return!1;const e=n;return e?e.resource===void 0||e.resource.scheme===N.untitled||e.forceUntitled===!0:!1}function Me(n){var t,i,r,s;if(P(n))return!1;const e=n;return V.isUri((t=e==null?void 0:e.base)==null?void 0:t.resource)&&V.isUri((i=e==null?void 0:e.input1)==null?void 0:i.resource)&&V.isUri((r=e==null?void 0:e.input2)==null?void 0:r.resource)&&V.isUri((s=e==null?void 0:e.result)==null?void 0:s.resource)}var vt;(function(n){n[n.SHORT=0]="SHORT",n[n.MEDIUM=1]="MEDIUM",n[n.LONG=2]="LONG"})(vt||(vt={}));var U;(function(n){n[n.EXPLICIT=1]="EXPLICIT",n[n.AUTO=2]="AUTO",n[n.FOCUS_CHANGE=3]="FOCUS_CHANGE",n[n.WINDOW_CHANGE=4]="WINDOW_CHANGE"})(U||(U={}));class _s{constructor(){this.mapIdToSaveSource=new Map}registerSource(e,t){let i=this.mapIdToSaveSource.get(e);return i||(i={source:e,label:t},this.mapIdToSaveSource.set(e,i)),i.source}getSourceLabel(e){var t;return((t=this.mapIdToSaveSource.get(e))==null?void 0:t.label)??e}}const Et=new _s;var ye;(function(n){n[n.None=0]="None",n[n.Readonly=2]="Readonly",n[n.Untitled=4]="Untitled",n[n.Singleton=8]="Singleton",n[n.RequiresTrust=16]="RequiresTrust",n[n.CanSplitInGroup=32]="CanSplitInGroup",n[n.ForceDescription=64]="ForceDescription",n[n.CanDropIntoEditor=128]="CanDropIntoEditor",n[n.MultipleEditors=256]="MultipleEditors",n[n.Scratchpad=512]="Scratchpad"})(ye||(ye={}));class Hi extends b{}function P(n){return n instanceof Hi}function Cs(n){const e=n;return V.isUri(e==null?void 0:e.preferredResource)}function Rs(n){const e=n;return P(e==null?void 0:e.primary)&&P(e==null?void 0:e.secondary)}function bs(n){const e=n;return P(e==null?void 0:e.modified)&&P(e==null?void 0:e.original)}function bn(n,e,t,i,r){return Ts(i,[jt({id:"workbench.action.openLargeFile",label:d(3829,"Open Anyway"),run:()=>{const s={...t,limits:{size:Number.MAX_VALUE}};n.openEditor(e,s)}}),jt({id:"workbench.action.configureEditorLargeFileConfirmation",label:d(3830,"Configure Limit"),run:()=>r.openUserSettings({query:"workbench.editorLargeFileConfirmation"})})],{forceMessage:!0,forceSeverity:hr.Warning})}function In(n){const e=n;return typeof(e==null?void 0:e.groupId)=="number"&&P(e.editor)}function On(n){const e=n;return typeof(e==null?void 0:e.groupId)=="number"}var hi;(function(n){n[n.UNKNOWN=0]="UNKNOWN",n[n.REPLACE=1]="REPLACE",n[n.MOVE=2]="MOVE",n[n.UNPIN=3]="UNPIN"})(hi||(hi={}));var ui;(function(n){n[n.GROUP_ACTIVE=0]="GROUP_ACTIVE",n[n.GROUP_INDEX=1]="GROUP_INDEX",n[n.GROUP_LABEL=2]="GROUP_LABEL",n[n.GROUP_LOCKED=3]="GROUP_LOCKED",n[n.EDITORS_SELECTION=4]="EDITORS_SELECTION",n[n.EDITOR_OPEN=5]="EDITOR_OPEN",n[n.EDITOR_CLOSE=6]="EDITOR_CLOSE",n[n.EDITOR_MOVE=7]="EDITOR_MOVE",n[n.EDITOR_ACTIVE=8]="EDITOR_ACTIVE",n[n.EDITOR_LABEL=9]="EDITOR_LABEL",n[n.EDITOR_CAPABILITIES=10]="EDITOR_CAPABILITIES",n[n.EDITOR_PIN=11]="EDITOR_PIN",n[n.EDITOR_TRANSIENT=12]="EDITOR_TRANSIENT",n[n.EDITOR_STICKY=13]="EDITOR_STICKY",n[n.EDITOR_DIRTY=14]="EDITOR_DIRTY",n[n.EDITOR_WILL_DISPOSE=15]="EDITOR_WILL_DISPOSE"})(ui||(ui={}));var Y;(function(n){n[n.PRIMARY=1]="PRIMARY",n[n.SECONDARY=2]="SECONDARY",n[n.BOTH=3]="BOTH",n[n.ANY=4]="ANY"})(Y||(Y={}));class Is{getOriginalUri(e,t){if(!e)return;if(Me(e))return $e.getOriginalUri(e.result,t);if(t!=null&&t.supportSideBySide){const{primary:r,secondary:s}=this.getSideEditors(e);if(r&&s){if((t==null?void 0:t.supportSideBySide)===Y.BOTH)return{primary:this.getOriginalUri(r,{filterByScheme:t.filterByScheme}),secondary:this.getOriginalUri(s,{filterByScheme:t.filterByScheme})};if((t==null?void 0:t.supportSideBySide)===Y.ANY)return this.getOriginalUri(r,{filterByScheme:t.filterByScheme})??this.getOriginalUri(s,{filterByScheme:t.filterByScheme});e=t.supportSideBySide===Y.PRIMARY?r:s}}if(Be(e)||ci(e)||lt(e)||Me(e))return;const i=Cs(e)?e.preferredResource:e.resource;return!i||!t||!t.filterByScheme?i:this.filterUri(i,t.filterByScheme)}getSideEditors(e){return Rs(e)||lt(e)?{primary:e.primary,secondary:e.secondary}:bs(e)||Be(e)?{primary:e.modified,secondary:e.original}:{primary:void 0,secondary:void 0}}getCanonicalUri(e,t){if(!e)return;if(Me(e))return $e.getCanonicalUri(e.result,t);if(t!=null&&t.supportSideBySide){const{primary:r,secondary:s}=this.getSideEditors(e);if(r&&s){if((t==null?void 0:t.supportSideBySide)===Y.BOTH)return{primary:this.getCanonicalUri(r,{filterByScheme:t.filterByScheme}),secondary:this.getCanonicalUri(s,{filterByScheme:t.filterByScheme})};if((t==null?void 0:t.supportSideBySide)===Y.ANY)return this.getCanonicalUri(r,{filterByScheme:t.filterByScheme})??this.getCanonicalUri(s,{filterByScheme:t.filterByScheme});e=t.supportSideBySide===Y.PRIMARY?r:s}}if(Be(e)||ci(e)||lt(e)||Me(e))return;const i=e.resource;return!i||!t||!t.filterByScheme?i:this.filterUri(i,t.filterByScheme)}filterUri(e,t){if(Array.isArray(t)){if(t.some(i=>e.scheme===i))return e}else if(t===e.scheme)return e}}var ve;(function(n){n[n.UNKNOWN=0]="UNKNOWN",n[n.KEYBOARD=1]="KEYBOARD",n[n.MOUSE=2]="MOUSE"})(ve||(ve={}));function Ln(n,e,t,i){if(!n.isSticky(e))return!1;switch(i.preventPinnedEditorClose){case"keyboardAndMouse":return t===ve.MOUSE||t===ve.KEYBOARD;case"mouse":return t===ve.MOUSE;case"keyboard":return t===ve.KEYBOARD}return!1}const $e=new Is;var fi;(function(n){n[n.LEFT=0]="LEFT",n[n.RIGHT=1]="RIGHT"})(fi||(fi={}));class Os{constructor(){this.editorSerializerConstructors=new Map,this.editorSerializerInstances=new Map}start(e){const t=this.instantiationService=e.get(Ze);for(const[i,r]of this.editorSerializerConstructors)this.createEditorSerializer(i,r,t);this.editorSerializerConstructors.clear()}createEditorSerializer(e,t,i){const r=i.createInstance(t);this.editorSerializerInstances.set(e,r)}registerFileEditorFactory(e){if(this.fileEditorFactory)throw new Error("Can only register one file editor factory.");this.fileEditorFactory=e}getFileEditorFactory(){return Ut(this.fileEditorFactory)}registerEditorSerializer(e,t){if(this.editorSerializerConstructors.has(e)||this.editorSerializerInstances.has(e))throw new Error(`A editor serializer with type ID '${e}' was already registered.`);return this.instantiationService?this.createEditorSerializer(e,t,this.instantiationService):this.editorSerializerConstructors.set(e,t),Z(()=>{this.editorSerializerConstructors.delete(e),this.editorSerializerInstances.delete(e)})}getEditorSerializer(e){return this.editorSerializerInstances.get(typeof e=="string"?e:e.typeId)}}Ie.add(Gi.EditorFactory,new Os);async function Tn(n,e,t){return!n||!n.length?[]:await Promise.all(n.map(async i=>{const r=V.revive(i.fileUri);if(!r){t.info("Cannot resolve the path because it is not valid.",i);return}if(!await e.canHandleResource(r)){t.info("Cannot resolve the path because it cannot be handled",i);return}let a=i.exists,o=i.type;if(typeof a!="boolean"||typeof o!="number")try{o=(await e.stat(r)).isDirectory?R.Directory:R.Unknown,a=!0}catch(c){t.error(c),a=!1}if(!a&&i.openOnlyIfExists){t.info("Cannot resolve the path because it does not exist",i);return}if(o===R.Directory){t.info("Cannot resolve the path because it is a directory",i);return}const l={...i.options,pinned:!0};return a?{resource:r,options:l}:{resource:r,options:l,forceUntitled:!0}}))}var gi;(function(n){n[n.MOST_RECENTLY_ACTIVE=0]="MOST_RECENTLY_ACTIVE",n[n.SEQUENTIAL=1]="SEQUENTIAL"})(gi||(gi={}));function Ls(n){const e=n;if(!e)return!1;const t=e;if(t.modified)return Ls(t.modified);const i=e;return!!(i.contributionsState&&i.viewState&&Array.isArray(i.cursorState))}function An(n){return fr(n)}function Ts(n,e,t){const i=ur(n,e);return i.forceMessage=t==null?void 0:t.forceMessage,i.forceSeverity=t==null?void 0:t.forceSeverity,i.allowDialog=t==null?void 0:t.allowDialog,i}const xn=we("extensionResourceLoaderService"),As=we("extensionService"),Yt=we("elevatedFileService"),qt=we("ILanguageDetectionService"),Vi=we("untitledTextEditorService"),zi=we("workingCopyBackupService");var St;(function(n){n.ExtensionFeaturesRegistry="workbench.registry.extensionFeatures"})(St||(St={}));class xs{constructor(){this.extensionFeatures=new Map}registerExtensionFeature(e){if(this.extensionFeatures.has(e.id))throw new Error(`Extension feature with id '${e.id}' already exists`);return this.extensionFeatures.set(e.id,e),{dispose:()=>this.extensionFeatures.delete(e.id)}}getExtensionFeature(e){return this.extensionFeatures.get(e)}getExtensionFeatures(){return Array.from(this.extensionFeatures.values())}}Ie.add(St.ExtensionFeaturesRegistry,new xs);var yi;(function(n){function e(s){return typeof(s==null?void 0:s.showDirectoryPicker)=="function"}n.supported=e;function t(s){const a=s;return a?typeof a.kind=="string"&&typeof a.queryPermission=="function"&&typeof a.requestPermission=="function":!1}n.isFileSystemHandle=t;function i(s){return s.kind==="file"}n.isFileSystemFileHandle=i;function r(s){return s.kind==="directory"}n.isFileSystemDirectoryHandle=r})(yi||(yi={}));var vi;(function(n){function e(t){return typeof(t==null?void 0:t.FileSystemObserver)=="function"}n.supported=e})(vi||(vi={}));const Ns=gr(yr),Yi=new f;Yi.event;const qi=new f,Nn=qi.event,$i=new vr,Us=new f,Xi=[],ji=[],Qi=[];function Ps(n){Xi.push(n)}function Un(n){ji.push(n)}function Pn(n){Qi.push(n)}async function Mn(n){await n.invokeFunction(async e=>{await Promise.all(Xi.map(t=>t(e)))}),await n.invokeFunction(async e=>{Dr((t,i)=>n.createInstance(Fr,t,{instantHover:i},{})),Er(e.get(Sr))}),await n.invokeFunction(async e=>{const t=e.get(ze);await Promise.all(ji.map(i=>i(e))),t.phase=it.Ready}),await n.invokeFunction(async e=>{await Promise.all(Qi.map(t=>t(e)))}),$i.open(),Us.fire(),n.invokeFunction(async e=>{const t=e.get(ze);Ie.as(wr.Workbench).start(e),Ie.as(Gi.EditorFactory).start(e),Yi.fire(e),qi.fire(e),await Promise.race([e.get(Ns).whenRestored,ct(2e3)]),t.phase=it.Restored,new mr(()=>{pr(window,()=>{t.phase=it.Eventually},2500)},2500).schedule()})}let Ji=!1;_r.withServices(()=>(Ji=!0,b.None));async function kn(){await $i.wait()}function Ms(){if(Ji)throw new Error("Services are already initialized")}class ks extends b{constructor(){super(...arguments),this._onWillDispose=this._register(new f),this.onWillDispose=this._onWillDispose.event,this.resolved=!1}async resolve(){this.resolved=!0}isResolved(){return this.resolved}isDisposed(){return this._store.isDisposed}dispose(){this._onWillDispose.fire(),super.dispose()}}async function Ws(n,e,t,i,r,s){let a;try{await Bs(n,e,t,i,r,s)}catch(o){a=o}finally{a&&r.errorTransformer&&(a=r.errorTransformer(a)),typeof a<"u"&&t.error(a),t.end()}}async function Bs(n,e,t,i,r,s){dt(s);const a=await n.open(e,{create:!1});try{dt(s);let o=0,l=0,c=r&&typeof r.length=="number"?r.length:void 0,u=v.alloc(Math.min(r.bufferSize,typeof c=="number"?c:r.bufferSize)),g=r&&typeof r.position=="number"?r.position:0,S=0;do l=await n.read(a,g,u.buffer,S,u.byteLength-S),g+=l,S+=l,o+=l,typeof c=="number"&&(c-=l),S===u.byteLength&&(await t.write(i(u)),u=v.alloc(Math.min(r.bufferSize,typeof c=="number"?c:r.bufferSize)),S=0);while(l>0&&(typeof c!="number"||c>0)&&dt(s)&&Gs(o,r));if(S>0){let F=S;typeof c=="number"&&(F=Math.min(S,c)),t.write(i(u.slice(0,F)))}}catch(o){throw ie(o)}finally{await n.close(a)}}function dt(n){if(n.isCancellationRequested)throw Cr();return!0}function Gs(n,e){var t;if(typeof((t=e==null?void 0:e.limits)==null?void 0:t.size)=="number"&&n>e.limits.size)throw E(d(1868,"File is too large to open"),y.FileTooLarge);return!0}var wt;function Zi(n){return n.scheme===N.file?n.fsPath:n.toString(!0)}async function Ki(n,e,t){const i=[];for(;!n.isEqual(t,n.dirname(t));)try{if(((await e.stat(t)).type&R.Directory)===0)throw new Error(d(1836,"Unable to create folder '{0}' that already exists but is not a directory",Zi(t)));break}catch(r){if(ut(r)!==y.FileNotFound)throw r;i.push(n.basename(t)),t=n.dirname(t)}for(let r=i.length-1;r>=0;r--){t=n.joinPath(t,i[r]);try{await e.mkdir(t)}catch(s){if(ut(s)!==y.FileExists)throw s}}}var ae;let mt=(ae=class extends b{constructor(e){super(),this.logService=e,this.BUFFER_SIZE=256*1024,this._onDidChangeFileSystemProviderRegistrations=this._register(new f),this.onDidChangeFileSystemProviderRegistrations=this._onDidChangeFileSystemProviderRegistrations.event,this._onWillActivateFileSystemProvider=this._register(new f),this.onWillActivateFileSystemProvider=this._onWillActivateFileSystemProvider.event,this._onDidChangeFileSystemProviderCapabilities=this._register(new f),this.onDidChangeFileSystemProviderCapabilities=this._onDidChangeFileSystemProviderCapabilities.event,this.provider=new Map,this._onDidRunOperation=this._register(new f),this.onDidRunOperation=this._onDidRunOperation.event,this.internalOnDidFilesChange=this._register(new f),this._onDidUncorrelatedFilesChange=this._register(new f),this.onDidFilesChange=this._onDidUncorrelatedFilesChange.event,this._onDidWatchError=this._register(new f),this.onDidWatchError=this._onDidWatchError.event,this.activeWatchers=new Map,this.writeQueue=this._register(new mi)}registerProvider(e,t){if(this.provider.has(e))throw new Error(`A filesystem provider for the scheme '${e}' is already registered.`);ht(`code/registerFilesystem/${e}`);const i=new de;return this.provider.set(e,t),this._onDidChangeFileSystemProviderRegistrations.fire({added:!0,scheme:e,provider:t}),i.add(t.onDidChangeFile(r=>{const s=new Rr(r,!this.isPathCaseSensitive(t));this.internalOnDidFilesChange.fire(s),s.hasCorrelation()||this._onDidUncorrelatedFilesChange.fire(s)})),typeof t.onDidWatchError=="function"&&i.add(t.onDidWatchError(r=>this._onDidWatchError.fire(new Error(r)))),i.add(t.onDidChangeCapabilities(()=>this._onDidChangeFileSystemProviderCapabilities.fire({provider:t,scheme:e}))),Z(()=>{this._onDidChangeFileSystemProviderRegistrations.fire({added:!1,scheme:e,provider:t}),this.provider.delete(e),q(i)})}getProvider(e){return this.provider.get(e)}async activateProvider(e){const t=[];this._onWillActivateFileSystemProvider.fire({scheme:e,join(i){t.push(i)}}),!this.provider.has(e)&&await fe.settled(t)}async canHandleResource(e){return await this.activateProvider(e.scheme),this.hasProvider(e)}hasProvider(e){return this.provider.has(e.scheme)}hasCapability(e,t){const i=this.provider.get(e.scheme);return!!(i&&i.capabilities&t)}listCapabilities(){return br.map(this.provider,([e,t])=>({scheme:e,capabilities:t.capabilities}))}async withProvider(e){if(!Ir(e))throw new x(d(1837,"Unable to resolve filesystem provider with relative file path '{0}'",this.resourceForError(e)),_.FILE_INVALID_PATH);await this.activateProvider(e.scheme);const t=this.provider.get(e.scheme);if(!t){const i=new Or;throw i.message=d(1838,"ENOPRO: No file system provider found for resource '{0}'",e.toString()),i}return t}async withReadProvider(e){const t=await this.withProvider(e);if(Q(t)||B(t)||ke(t))return t;throw new Error(`Filesystem provider for scheme '${e.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`)}async withWriteProvider(e){const t=await this.withProvider(e);if(Q(t)||B(t))return t;throw new Error(`Filesystem provider for scheme '${e.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`)}async resolve(e,t){try{return await this.doResolveFile(e,t)}catch(i){throw ut(i)===y.FileNotFound?new x(d(1839,"Unable to resolve nonexistent file '{0}'",this.resourceForError(e)),_.FILE_NOT_FOUND):ie(i)}}async doResolveFile(e,t){const i=await this.withProvider(e),r=this.isPathCaseSensitive(i),s=t==null?void 0:t.resolveTo,a=t==null?void 0:t.resolveSingleChildDescendants,o=t==null?void 0:t.resolveMetadata,l=await i.stat(e);let c;return this.toFileStat(i,e,l,void 0,!!o,(u,g)=>(c||(c=Lr.forUris(()=>!r),c.set(e,!0),s&&c.fill(!0,s)),c.get(u.resource)||c.findSuperstr(u.resource.with({query:null,fragment:null}))?!0:u.isDirectory&&a?g===1:!1))}async toFileStat(e,t,i,r,s,a){const{providerExtUri:o}=this.getExtUri(e),l={resource:t,name:o.basename(t),isFile:(i.type&R.File)!==0,isDirectory:(i.type&R.Directory)!==0,isSymbolicLink:(i.type&R.SymbolicLink)!==0,mtime:i.mtime,ctime:i.ctime,size:i.size,readonly:!!((i.permissions??0)&Ee.Readonly)||!!(e.capabilities&w.Readonly),locked:!!((i.permissions??0)&Ee.Locked),etag:Qt({mtime:i.mtime,size:i.size}),children:void 0};if(l.isDirectory&&a(l,r)){try{const c=await e.readdir(t),u=await fe.settled(c.map(async([g,S])=>{try{const F=o.joinPath(t,g),L=s?await e.stat(F):{type:S};return await this.toFileStat(e,F,L,c.length,s,a)}catch(F){return this.logService.trace(F),null}}));l.children=pi(u)}catch(c){this.logService.trace(c),l.children=[]}return l}return l}async resolveAll(e){return fe.settled(e.map(async t=>{try{return{stat:await this.doResolveFile(t.resource,t.options),success:!0}}catch(i){return this.logService.trace(i),{stat:void 0,success:!1}}}))}async stat(e){const t=await this.withProvider(e),i=await t.stat(e);return this.toFileStat(t,e,i,void 0,!0,()=>!1)}async exists(e){const t=await this.withProvider(e);try{return!!await t.stat(e)}catch{return!1}}async canCreateFile(e,t){try{await this.doValidateCreateFile(e,t)}catch(i){return i}return!0}async doValidateCreateFile(e,t){if(!(t!=null&&t.overwrite)&&await this.exists(e))throw new x(d(1840,"Unable to create file '{0}' that already exists when overwrite flag is not set",this.resourceForError(e)),_.FILE_MODIFIED_SINCE,t)}async createFile(e,t=v.fromString(""),i){await this.doValidateCreateFile(e,i);const r=await this.writeFile(e,t);return this._onDidRunOperation.fire(new ue(e,O.CREATE,r)),r}async writeFile(e,t,i){var o;const r=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(e),e),{providerExtUri:s}=this.getExtUri(r);let a=i;if(Jt(r)&&!(a!=null&&a.atomic)){const l=(o=r.enforceAtomicWriteFile)==null?void 0:o.call(r,e);l&&(a={...i,atomic:l})}try{let{stat:l,buffer:c}=await this.validateWriteFile(r,e,t,a);l||await this.mkdirp(r,s.dirname(e)),c||(c=await this.peekBufferForWriting(r,t)),!Q(r)||B(r)&&c instanceof v||B(r)&&Jt(r)&&(a!=null&&a.atomic)?await this.doWriteUnbuffered(r,e,a,c):await this.doWriteBuffered(r,e,a,c instanceof v?Di(c):c),this._onDidRunOperation.fire(new ue(e,O.WRITE))}catch(l){throw new x(d(1841,"Unable to write file '{0}' ({1})",this.resourceForError(e),ie(l).toString()),Zt(l),a)}return this.resolve(e,{resolveMetadata:!0})}async peekBufferForWriting(e,t){let i;if(B(e)&&!(t instanceof v))if(rt(t)){const r=await Tr(t,3);r.ended?i=v.concat(r.buffer):i=r}else i=Ar(t,r=>v.concat(r),3);else i=t;return i}async validateWriteFile(e,t,i,r){const s=!!(r!=null&&r.unlock);if(s&&!(e.capabilities&w.FileWriteUnlock))throw new Error(d(1842,"Unable to unlock file '{0}' because provider does not support it.",this.resourceForError(t)));if(!!(r!=null&&r.atomic)){if(!(e.capabilities&w.FileAtomicWrite))throw new Error(d(1843,"Unable to atomically write file '{0}' because provider does not support it.",this.resourceForError(t)));if(!(e.capabilities&w.FileReadWrite))throw new Error(d(1844,"Unable to atomically write file '{0}' because provider does not support unbuffered writes.",this.resourceForError(t)));if(s)throw new Error(d(1845,"Unable to unlock file '{0}' because atomic write is enabled.",this.resourceForError(t)))}let o;try{o=await e.stat(t)}catch{return Object.create(null)}if((o.type&R.Directory)!==0)throw new x(d(1846,"Unable to write file '{0}' that is actually a directory",this.resourceForError(t)),_.FILE_IS_DIRECTORY,r);this.throwIfFileIsReadonly(t,o);let l;if(typeof(r==null?void 0:r.mtime)=="number"&&typeof r.etag=="string"&&r.etag!==se&&typeof o.mtime=="number"&&typeof o.size=="number"&&r.mtime<o.mtime&&r.etag!==Qt({mtime:r.mtime,size:o.size})){if(l=await this.peekBufferForWriting(e,i),l instanceof v&&l.byteLength===o.size)try{const{value:c}=await this.readFile(t,{limits:{size:o.size}});if(l.equals(c))return{stat:o,buffer:l}}catch{}throw new x(d(1847,"File Modified Since"),_.FILE_MODIFIED_SINCE,r)}return{stat:o,buffer:l}}async readFile(e,t,i){const r=await this.withReadProvider(e);return t!=null&&t.atomic?this.doReadFileAtomic(r,e,t,i):this.doReadFile(r,e,t,i)}async doReadFileAtomic(e,t,i,r){return new Promise((s,a)=>{this.writeQueue.queueFor(t,async()=>{try{const o=await this.doReadFile(e,t,i,r);s(o)}catch(o){a(o)}},this.getExtUri(e).providerExtUri)})}async doReadFile(e,t,i,r){const s=await this.doReadFileStream(e,t,{...i,preferUnbuffered:!0},r);return{...s,value:await st(s.value)}}async readFileStream(e,t,i){const r=await this.withReadProvider(e);return this.doReadFileStream(r,e,t,i)}async doReadFileStream(e,t,i,r){var c;const s=new Le(r);let a=i;nt(e)&&((c=e.enforceAtomicReadFile)!=null&&c.call(e,t))&&(a={...i,atomic:!0});const o=this.validateReadFile(t,a).then(u=>u,u=>{throw s.dispose(!0),u});let l;try{return typeof(a==null?void 0:a.etag)=="string"&&a.etag!==se&&await o,a!=null&&a.atomic&&nt(e)||!(Q(e)||ke(e))||B(e)&&(a!=null&&a.preferUnbuffered)?l=this.readFileUnbuffered(e,t,a):ke(e)?l=this.readFileStreamed(e,t,s.token,a):l=this.readFileBuffered(e,t,s.token,a),l.on("end",()=>s.dispose()),l.on("error",()=>s.dispose()),{...await o,value:l}}catch(u){throw l&&await Fi(l),this.restoreReadError(u,t,a)}}restoreReadError(e,t,i){const r=d(1848,"Unable to read file '{0}' ({1})",this.resourceForError(t),ie(e).toString());return e instanceof We?new We(r,e.stat,i):e instanceof at?new at(r,e.fileOperationResult,e.size,e.options):new x(r,Zt(e),i)}readFileStreamed(e,t,i,r=Object.create(null)){const s=e.readFileStream(t,r,i);return xr(s,{data:a=>a instanceof v?a:v.wrap(a),error:a=>this.restoreReadError(a,t,r)},a=>v.concat(a))}readFileBuffered(e,t,i,r=Object.create(null)){const s=Nr();return Ws(e,t,s,a=>a,{...r,bufferSize:this.BUFFER_SIZE,errorTransformer:a=>this.restoreReadError(a,t,r)},i),s}readFileUnbuffered(e,t,i){const r=Te(s=>v.concat(s));return(async()=>{try{let s;i!=null&&i.atomic&&nt(e)?s=await e.readFile(t,{atomic:!0}):s=await e.readFile(t),typeof(i==null?void 0:i.position)=="number"&&(s=s.slice(i.position)),typeof(i==null?void 0:i.length)=="number"&&(s=s.slice(0,i.length)),this.validateReadFileLimits(t,s.byteLength,i),r.end(v.wrap(s))}catch(s){r.error(s),r.end()}})(),r}async validateReadFile(e,t){const i=await this.resolve(e,{resolveMetadata:!0});if(i.isDirectory)throw new x(d(1849,"Unable to read file '{0}' that is actually a directory",this.resourceForError(e)),_.FILE_IS_DIRECTORY,t);if(typeof(t==null?void 0:t.etag)=="string"&&t.etag!==se&&t.etag===i.etag)throw new We(d(1850,"File not modified since"),i,t);return this.validateReadFileLimits(e,i.size,t),i}validateReadFileLimits(e,t,i){var r;if(typeof((r=i==null?void 0:i.limits)==null?void 0:r.size)=="number"&&t>i.limits.size)throw new at(d(1851,"Unable to read file '{0}' that is too large to open",this.resourceForError(e)),_.FILE_TOO_LARGE,t,i)}async canMove(e,t,i){return this.doCanMoveCopy(e,t,"move",i)}async canCopy(e,t,i){return this.doCanMoveCopy(e,t,"copy",i)}async doCanMoveCopy(e,t,i,r){if(e.toString()!==t.toString())try{const s=i==="move"?this.throwIfFileSystemIsReadonly(await this.withWriteProvider(e),e):await this.withReadProvider(e),a=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(t),t);await this.doValidateMoveCopy(s,e,a,t,i,r)}catch(s){return s}return!0}async move(e,t,i){const r=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(e),e),s=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(t),t),a=await this.doMoveCopy(r,e,s,t,"move",!!i),o=await this.resolve(t,{resolveMetadata:!0});return this._onDidRunOperation.fire(new ue(e,a==="move"?O.MOVE:O.COPY,o)),o}async copy(e,t,i){const r=await this.withReadProvider(e),s=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(t),t),a=await this.doMoveCopy(r,e,s,t,"copy",!!i),o=await this.resolve(t,{resolveMetadata:!0});return this._onDidRunOperation.fire(new ue(e,a==="copy"?O.COPY:O.MOVE,o)),o}async doMoveCopy(e,t,i,r,s,a){if(t.toString()===r.toString())return s;const{exists:o,isSameResourceWithDifferentPathCase:l}=await this.doValidateMoveCopy(e,t,i,r,s,a);if(o&&!l&&a&&await this.del(r,{recursive:!0}),await this.mkdirp(i,this.getExtUri(i).providerExtUri.dirname(r)),s==="copy"){if(e===i&&Kt(e))await e.copy(t,r,{overwrite:a});else{const c=await this.resolve(t);c.isDirectory?await this.doCopyFolder(e,c,i,r):await this.doCopyFile(e,t,i,r)}return s}else return e===i?(await e.rename(t,r,{overwrite:a}),s):(await this.doMoveCopy(e,t,i,r,"copy",a),await this.del(t,{recursive:!0}),"copy")}async doCopyFile(e,t,i,r){if(Q(e)&&Q(i))return this.doPipeBuffered(e,t,i,r);if(Q(e)&&B(i))return this.doPipeBufferedToUnbuffered(e,t,i,r);if(B(e)&&Q(i))return this.doPipeUnbufferedToBuffered(e,t,i,r);if(B(e)&&B(i))return this.doPipeUnbuffered(e,t,i,r)}async doCopyFolder(e,t,i,r){await i.mkdir(r),Array.isArray(t.children)&&await fe.settled(t.children.map(async s=>{const a=this.getExtUri(i).providerExtUri.joinPath(r,s.name);return s.isDirectory?this.doCopyFolder(e,await this.resolve(s.resource),i,a):this.doCopyFile(e,s.resource,i,a)}))}async doValidateMoveCopy(e,t,i,r,s,a){let o=!1;if(e===i){const{providerExtUri:c,isPathCaseSensitive:u}=this.getExtUri(e);if(u||(o=c.isEqual(t,r)),o&&s==="copy")throw new Error(d(1852,"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system",this.resourceForError(t),this.resourceForError(r)));if(!o&&c.isEqualOrParent(r,t))throw new Error(d(1853,"Unable to move/copy when source '{0}' is parent of target '{1}'.",this.resourceForError(t),this.resourceForError(r)))}const l=await this.exists(r);if(l&&!o){if(!a)throw new x(d(1854,"Unable to move/copy '{0}' because target '{1}' already exists at destination.",this.resourceForError(t),this.resourceForError(r)),_.FILE_MOVE_CONFLICT);if(e===i){const{providerExtUri:c}=this.getExtUri(e);if(c.isEqualOrParent(t,r))throw new Error(d(1855,"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.",this.resourceForError(t),this.resourceForError(r)))}}return{exists:l,isSameResourceWithDifferentPathCase:o}}getExtUri(e){const t=this.isPathCaseSensitive(e);return{providerExtUri:t?Se:Ur,isPathCaseSensitive:t}}isPathCaseSensitive(e){return!!(e.capabilities&w.PathCaseSensitive)}async createFolder(e){const t=this.throwIfFileSystemIsReadonly(await this.withProvider(e),e);await this.mkdirp(t,e);const i=await this.resolve(e,{resolveMetadata:!0});return this._onDidRunOperation.fire(new ue(e,O.CREATE,i)),i}async mkdirp(e,t){const{providerExtUri:i}=this.getExtUri(e);return Ki(i,e,t)}async canDelete(e,t){try{await this.doValidateDelete(e,t)}catch(i){return i}return!0}async doValidateDelete(e,t){const i=this.throwIfFileSystemIsReadonly(await this.withProvider(e),e),r=!!(t!=null&&t.useTrash);if(r&&!(i.capabilities&w.Trash))throw new Error(d(1856,"Unable to delete file '{0}' via trash because provider does not support it.",this.resourceForError(e)));const s=t==null?void 0:t.atomic;if(s&&!(i.capabilities&w.FileAtomicDelete))throw new Error(d(1857,"Unable to delete file '{0}' atomically because provider does not support it.",this.resourceForError(e)));if(r&&s)throw new Error(d(1858,"Unable to atomically delete file '{0}' because using trash is enabled.",this.resourceForError(e)));let a;try{a=await i.stat(e)}catch{}if(a)this.throwIfFileIsReadonly(e,a);else throw new x(d(1859,"Unable to delete nonexistent file '{0}'",this.resourceForError(e)),_.FILE_NOT_FOUND);if(!!!(t!=null&&t.recursive)){const l=await this.resolve(e);if(l.isDirectory&&Array.isArray(l.children)&&l.children.length>0)throw new Error(d(1860,"Unable to delete non-empty folder '{0}'.",this.resourceForError(e)))}return i}async del(e,t){var l;const i=await this.doValidateDelete(e,t);let r=t;if(Pr(i)&&!(r!=null&&r.atomic)){const c=(l=i.enforceAtomicDelete)==null?void 0:l.call(i,e);c&&(r={...t,atomic:c})}const s=!!(r!=null&&r.useTrash),a=!!(r!=null&&r.recursive),o=(r==null?void 0:r.atomic)??!1;await i.delete(e,{recursive:a,useTrash:s,atomic:o}),this._onDidRunOperation.fire(new ue(e,O.DELETE))}async cloneFile(e,t){const i=await this.withProvider(e),r=this.throwIfFileSystemIsReadonly(await this.withWriteProvider(t),t);if(!(i===r&&this.getExtUri(i).providerExtUri.isEqual(e,t)))return i===r&&Mr(i)?i.cloneFile(e,t):(await this.mkdirp(r,this.getExtUri(r).providerExtUri.dirname(t)),i===r&&Kt(i)?this.writeQueue.queueFor(e,()=>i.copy(e,t,{overwrite:!0}),this.getExtUri(i).providerExtUri):this.writeQueue.queueFor(e,()=>this.doCopyFile(i,e,r,t),this.getExtUri(i).providerExtUri))}createWatcher(e,t){return this.watch(e,{...t,correlationId:wt.WATCHER_CORRELATION_IDS++})}watch(e,t={recursive:!1,excludes:[]}){const i=new de;let r=!1,s=()=>{r=!0};i.add(Z(()=>s())),(async()=>{try{const o=await this.doWatch(e,t);r?q(o):s=()=>q(o)}catch(o){this.logService.error(o)}})();const a=t.correlationId;if(typeof a=="number"){const o=i.add(new f);return i.add(this.internalOnDidFilesChange.event(c=>{c.correlates(a)&&o.fire(c)})),{onDidChange:o.event,dispose:()=>i.dispose()}}return i}async doWatch(e,t){const i=await this.withProvider(e),r=kr([this.getExtUri(i).providerExtUri.getComparisonKey(e),t]);let s=this.activeWatchers.get(r);return s||(s={count:0,disposable:i.watch(e,t)},this.activeWatchers.set(r,s)),s.count+=1,Z(()=>{s&&(s.count--,s.count===0&&(q(s.disposable),this.activeWatchers.delete(r)))})}dispose(){super.dispose();for(const[,e]of this.activeWatchers)q(e.disposable);this.activeWatchers.clear()}async doWriteBuffered(e,t,i,r){return this.writeQueue.queueFor(t,async()=>{const s=await e.open(t,{create:!0,unlock:(i==null?void 0:i.unlock)??!1});try{rt(r)||ot(r)?await this.doWriteStreamBufferedQueued(e,s,r):await this.doWriteReadableBufferedQueued(e,s,r)}catch(a){throw ie(a)}finally{await e.close(s)}},this.getExtUri(e).providerExtUri)}async doWriteStreamBufferedQueued(e,t,i){let r=0,s;if(ot(i)){if(i.buffer.length>0){const a=v.concat(i.buffer);await this.doWriteBuffer(e,t,a,a.byteLength,r,0),r+=a.byteLength}if(i.ended)return;s=i.stream}else s=i;return new Promise((a,o)=>{Pt(s,{onData:async l=>{s.pause();try{await this.doWriteBuffer(e,t,l,l.byteLength,r,0)}catch(c){return o(c)}r+=l.byteLength,setTimeout(()=>s.resume())},onError:l=>o(l),onEnd:()=>a()})})}async doWriteReadableBufferedQueued(e,t,i){let r=0,s;for(;(s=i.read())!==null;)await this.doWriteBuffer(e,t,s,s.byteLength,r,0),r+=s.byteLength}async doWriteBuffer(e,t,i,r,s,a){let o=0;for(;o<r;){const l=await e.write(t,s+o,i.buffer,a+o,r-o);o+=l}}async doWriteUnbuffered(e,t,i,r){return this.writeQueue.queueFor(t,()=>this.doWriteUnbufferedQueued(e,t,i,r),this.getExtUri(e).providerExtUri)}async doWriteUnbufferedQueued(e,t,i,r){let s;r instanceof v?s=r:rt(r)?s=await st(r):ot(r)?s=await Wr(r):s=Br(r),await e.writeFile(t,s.buffer,{create:!0,overwrite:!0,unlock:(i==null?void 0:i.unlock)??!1,atomic:(i==null?void 0:i.atomic)??!1})}async doPipeBuffered(e,t,i,r){return this.writeQueue.queueFor(r,()=>this.doPipeBufferedQueued(e,t,i,r),this.getExtUri(i).providerExtUri)}async doPipeBufferedQueued(e,t,i,r){let s,a;try{s=await e.open(t,{create:!1}),a=await i.open(r,{create:!0,unlock:!1});const o=v.alloc(this.BUFFER_SIZE);let l=0,c=0,u=0;do u=await e.read(s,l,o.buffer,c,o.byteLength-c),await this.doWriteBuffer(i,a,o,u,l,c),l+=u,c+=u,c===o.byteLength&&(c=0);while(u>0)}catch(o){throw ie(o)}finally{await fe.settled([typeof s=="number"?e.close(s):Promise.resolve(),typeof a=="number"?i.close(a):Promise.resolve()])}}async doPipeUnbuffered(e,t,i,r){return this.writeQueue.queueFor(r,()=>this.doPipeUnbufferedQueued(e,t,i,r),this.getExtUri(i).providerExtUri)}async doPipeUnbufferedQueued(e,t,i,r){return i.writeFile(r,await e.readFile(t),{create:!0,overwrite:!0,unlock:!1,atomic:!1})}async doPipeUnbufferedToBuffered(e,t,i,r){return this.writeQueue.queueFor(r,()=>this.doPipeUnbufferedToBufferedQueued(e,t,i,r),this.getExtUri(i).providerExtUri)}async doPipeUnbufferedToBufferedQueued(e,t,i,r){const s=await i.open(r,{create:!0,unlock:!1});try{const a=await e.readFile(t);await this.doWriteBuffer(i,s,v.wrap(a),a.byteLength,0,0)}catch(a){throw ie(a)}finally{await i.close(s)}}async doPipeBufferedToUnbuffered(e,t,i,r){const s=await st(this.readFileBuffered(e,t,Ye.None));await this.doWriteUnbuffered(i,r,void 0,s)}throwIfFileSystemIsReadonly(e,t){if(e.capabilities&w.Readonly)throw new x(d(1861,"Unable to modify read-only file '{0}'",this.resourceForError(t)),_.FILE_PERMISSION_DENIED);return e}throwIfFileIsReadonly(e,t){if((t.permissions??0)&Ee.Readonly)throw new x(d(1861,"Unable to modify read-only file '{0}'",this.resourceForError(e)),_.FILE_PERMISSION_DENIED)}resourceForError(e){return Zi(e)}},wt=ae,ae.WATCHER_CORRELATION_IDS=0,ae);mt=wt=W([h(0,me)],mt);class Ei{constructor(e){this.type=R.File,this.ctime=Date.now(),this.mtime=Date.now(),this.size=0,this.name=e}}class Fe{constructor(e){this.type=R.Directory,this.ctime=Date.now(),this.mtime=Date.now(),this.size=0,this.name=e,this.entries=new Map}}class Xe extends b{constructor(){super(...arguments),this.memoryFdCounter=0,this.fdMemory=new Map,this._onDidChangeCapabilities=this._register(new f),this.onDidChangeCapabilities=this._onDidChangeCapabilities.event,this._capabilities=w.FileReadWrite|w.PathCaseSensitive,this.root=new Fe(""),this._onDidChangeFile=this._register(new f),this.onDidChangeFile=this._onDidChangeFile.event,this._bufferedChanges=[]}get capabilities(){return this._capabilities}setReadOnly(e){const t=!!(this._capabilities&w.Readonly);e!==t&&(this._capabilities=e?w.Readonly|w.PathCaseSensitive|w.FileReadWrite:w.FileReadWrite|w.PathCaseSensitive,this._onDidChangeCapabilities.fire())}async stat(e){return this._lookup(e,!1)}async readdir(e){const t=this._lookupAsDirectory(e,!1),i=[];return t.entries.forEach((r,s)=>i.push([s,r.type])),i}async readFile(e){const t=this._lookupAsFile(e,!1).data;if(t)return t;throw E("file not found",y.FileNotFound)}readFileStream(e){const t=this._lookupAsFile(e,!1).data,i=Te(r=>v.concat(r.map(s=>v.wrap(s))).buffer);return i.end(t),i}async writeFile(e,t,i){const r=k(e),s=this._lookupParentDirectory(e);let a=s.entries.get(r);if(a instanceof Fe)throw E("file is directory",y.FileIsADirectory);if(!a&&!i.create)throw E("file not found",y.FileNotFound);if(a&&i.create&&!i.overwrite)throw E("file exists already",y.FileExists);a||(a=new Ei(r),s.entries.set(r,a),this._fireSoon({type:C.ADDED,resource:e})),a.mtime=Date.now(),a.size=t.byteLength,a.data=t,this._fireSoon({type:C.UPDATED,resource:e})}open(e,t){const i=this._lookupAsFile(e,!1).data;if(i){const r=this.memoryFdCounter++;return this.fdMemory.set(r,i),Promise.resolve(r)}throw E("file not found",y.FileNotFound)}close(e){return this.fdMemory.delete(e),Promise.resolve()}read(e,t,i,r,s){const a=this.fdMemory.get(e);if(!a)throw E("No file with that descriptor open",y.Unavailable);const o=v.wrap(a).slice(t,t+s);return i.set(o.buffer,r),Promise.resolve(o.byteLength)}write(e,t,i,r,s){const a=this.fdMemory.get(e);if(!a)throw E("No file with that descriptor open",y.Unavailable);const o=v.wrap(i).slice(r,r+s);return a.set(o.buffer,t),Promise.resolve(o.byteLength)}async rename(e,t,i){if(!i.overwrite&&this._lookup(t,!0))throw E("file exists already",y.FileExists);const r=this._lookup(e,!1),s=this._lookupParentDirectory(e),a=this._lookupParentDirectory(t),o=k(t);s.entries.delete(r.name),r.name=o,a.entries.set(o,r),this._fireSoon({type:C.DELETED,resource:e},{type:C.ADDED,resource:t})}async delete(e,t){const i=be(e),r=k(e),s=this._lookupAsDirectory(i,!1);s.entries.has(r)&&(s.entries.delete(r),s.mtime=Date.now(),s.size-=1,this._fireSoon({type:C.UPDATED,resource:i},{resource:e,type:C.DELETED}))}async mkdir(e){if(this._lookup(e,!0))throw E("file exists already",y.FileExists);const t=k(e),i=be(e),r=this._lookupAsDirectory(i,!1),s=new Fe(t);r.entries.set(s.name,s),r.mtime=Date.now(),r.size+=1,this._fireSoon({type:C.UPDATED,resource:i},{type:C.ADDED,resource:e})}_lookup(e,t){const i=e.path.split("/");let r=this.root;for(const s of i){if(!s)continue;let a;if(r instanceof Fe&&(a=r.entries.get(s)),!a){if(t)return;throw E("file not found",y.FileNotFound)}r=a}return r}_lookupAsDirectory(e,t){const i=this._lookup(e,t);if(i instanceof Fe)return i;throw E("file not a directory",y.FileNotADirectory)}_lookupAsFile(e,t){const i=this._lookup(e,t);if(i instanceof Ei)return i;throw E("file is a directory",y.FileIsADirectory)}_lookupParentDirectory(e){const t=be(e);return this._lookupAsDirectory(t,!1)}watch(e,t){return b.None}_fireSoon(...e){this._bufferedChanges.push(...e),this._fireSoonHandle&&clearTimeout(this._fireSoonHandle),this._fireSoonHandle=setTimeout(()=>{this._onDidChangeFile.fire(this._bufferedChanges),this._bufferedChanges.length=0},5)}dispose(){super.dispose(),this.fdMemory.clear()}}E(d(1830,"File does not exist"),y.FileNotFound);E(d(1831,"File is Directory"),y.FileIsADirectory);E(d(1832,"File is not a directory"),y.FileNotADirectory);E(d(1833,"Directory is not empty"),y.Unknown);E(d(1834,"File exceeds available storage quota"),y.FileExceedsStorageQuota);class Hs extends Gr{constructor(e=Hr){super(),this.buffer=[],this._logger=void 0,this._logLevelDisposable=this._register(new _i),this.setLevel(e)}set logger(e){this._logger=e,this.setLevel(e.getLevel()),this._logLevelDisposable.value=e.onDidChangeLogLevel(this.setLevel,this);for(const{level:t,message:i}of this.buffer)ei(e,t,i);this.buffer=[]}log(e,t){this._logger?ei(this._logger,e,t):this.getLevel()<=e&&this.buffer.push({level:e,message:t})}dispose(){var e;(e=this._logger)==null||e.dispose(),super.dispose()}flush(){var e;(e=this._logger)==null||e.flush()}}var je;(function(n){n[n.FILE_IS_BINARY=0]="FILE_IS_BINARY"})(je||(je={}));class Vs extends x{static isTextFileOperationError(e){return e instanceof Error&&!Vr(e.textFileOperationResult)}constructor(e,t,i){super(e,_.FILE_OTHER_ERROR),this.textFileOperationResult=t,this.options=i}}var A;(function(n){n[n.SAVED=0]="SAVED",n[n.DIRTY=1]="DIRTY",n[n.PENDING_SAVE=2]="PENDING_SAVE",n[n.CONFLICT=3]="CONFLICT",n[n.ORPHAN=4]="ORPHAN",n[n.ERROR=5]="ERROR"})(A||(A={}));var pt;(function(n){n[n.EDITOR=1]="EDITOR",n[n.REFERENCE=2]="REFERENCE",n[n.OTHER=3]="OTHER"})(pt||(pt={}));var Dt;(function(n){n[n.Encode=0]="Encode",n[n.Decode=1]="Decode"})(Dt||(Dt={}));function zs(n){let e=!1;return{read(){return e?null:(e=!0,n)}}}function Ys(n){if(!(typeof n>"u"))return typeof n=="string"?v.fromString(n):{read:()=>{const e=n.read();return typeof e=="string"?v.fromString(e):null}}}const Si="languageDetection";var Ft,oe;let Oe=(oe=class extends ks{constructor(e,t,i,r,s){super(),this.modelService=e,this.languageService=t,this.languageDetectionService=i,this.accessibilityService=r,this.textEditorModelHandle=void 0,this.modelDisposeListener=this._register(new _i),this.autoDetectLanguageThrottler=this._register(new zr(Ft.AUTO_DETECT_LANGUAGE_THROTTLE_DELAY)),this._blockLanguageChangeListener=!1,this._languageChangeSource=void 0,s&&this.handleExistingModel(s)}handleExistingModel(e){const t=this.modelService.getModel(e);if(!t)throw new Error(`Document with resource ${e.toString(!0)} does not exist`);this.textEditorModelHandle=e,this.registerModelDisposeListener(t)}registerModelDisposeListener(e){this.modelDisposeListener.value=e.onWillDispose(()=>{this.textEditorModelHandle=void 0,this.dispose()})}get textEditorModel(){return this.textEditorModelHandle?this.modelService.getModel(this.textEditorModelHandle):null}isReadonly(){return!0}get languageChangeSource(){return this._languageChangeSource}get hasLanguageSetExplicitly(){return typeof this._languageChangeSource=="string"}setLanguageId(e,t){this._languageChangeSource="user",this.setLanguageIdInternal(e,t)}setLanguageIdInternal(e,t){if(this.isResolved()&&!(!e||e===this.textEditorModel.getLanguageId())){this._blockLanguageChangeListener=!0;try{this.textEditorModel.setLanguage(this.languageService.createById(e),t)}finally{this._blockLanguageChangeListener=!1}}}installModelListeners(e){const t=this._register(e.onDidChangeLanguage(i=>{i.source===Si||this._blockLanguageChangeListener||(this._languageChangeSource="api",t.dispose())}))}getLanguageId(){var e;return(e=this.textEditorModel)==null?void 0:e.getLanguageId()}autoDetectLanguage(){return this.autoDetectLanguageThrottler.trigger(()=>this.doAutoDetectLanguage())}async doAutoDetectLanguage(){if(this.hasLanguageSetExplicitly||!this.textEditorModelHandle||!this.languageDetectionService.isEnabledForLanguage(this.getLanguageId()??j))return;const e=await this.languageDetectionService.detectLanguage(this.textEditorModelHandle),t=this.getLanguageId();if(e&&e!==t&&!this.isDisposed()){this.setLanguageIdInternal(e,Si);const i=this.languageService.getLanguageName(e);this.accessibilityService.alert(d(3833,"Language {0} was automatically detected and set as the language mode.",i??e))}}createTextEditorModel(e,t,i){const r=this.getFirstLineText(e),s=this.getOrCreateLanguage(t,this.languageService,i,r);return this.doCreateTextEditorModel(e,s,t)}doCreateTextEditorModel(e,t,i){let r=i&&this.modelService.getModel(i);return r?this.updateTextEditorModel(e,t.languageId):(r=this.modelService.createModel(e,t,i),this.createdEditorModel=!0,this.registerModelDisposeListener(r)),this.textEditorModelHandle=r.uri,r}getFirstLineText(e){const t=e;return typeof t.getFirstLineText=="function"?t.getFirstLineText(ti.FIRST_LINE_DETECTION_LENGTH_LIMIT):e.getLineContent(1).substr(0,ti.FIRST_LINE_DETECTION_LENGTH_LIMIT)}getOrCreateLanguage(e,t,i,r){return!i||i===j?t.createByFilepathOrFirstLine(e??null,r):t.createById(i)}updateTextEditorModel(e,t){this.isResolved()&&(e&&this.modelService.updateModel(this.textEditorModel,e),t&&t!==j&&this.textEditorModel.getLanguageId()!==t&&this.textEditorModel.setLanguage(this.languageService.createById(t)))}createSnapshot(){return this.textEditorModel?this.textEditorModel.createSnapshot(!0):null}isResolved(){return!!this.textEditorModelHandle}dispose(){this.modelDisposeListener.dispose(),this.textEditorModelHandle&&this.createdEditorModel&&this.modelService.destroyModel(this.textEditorModelHandle),this.textEditorModelHandle=void 0,this.createdEditorModel=!1,super.dispose()}},Ft=oe,oe.AUTO_DETECT_LANGUAGE_THROTTLE_DELAY=600,oe);Oe=Ft=W([h(0,Ae),h(1,xe),h(2,qt),h(3,Mt)],Oe);var Qe;(function(n){n[n.None=0]="None",n[n.Untitled=2]="Untitled",n[n.Scratchpad=4]="Scratchpad"})(Qe||(Qe={}));const er="",D="utf8",$="utf8bom",ce="utf16be",he="utf16le",Ge=[254,255],_t=[255,254],Ce=[239,187,191],qs=512,$s=512,Xs=512*8,js=512*128;var Je;(function(n){n[n.STREAM_IS_BINARY=1]="STREAM_IS_BINARY"})(Je||(Je={}));class Qs extends Error{constructor(e,t){super(e),this.decodeStreamErrorKind=t}}class $t{static async create(e){let t;if(e!==D)t=(await et(()=>import("./C5dUYXMV.js").then(r=>r.i),__vite__mapDeps([0,1]),import.meta.url).then(r=>r.default??r)).getDecoder(Xt(e));else{const i=new TextDecoder;t={write(r){return i.decode(r,{stream:!0})},end(){return i.decode()}}}return new $t(t)}constructor(e){this.iconvLiteDecoder=e}write(e){return this.iconvLiteDecoder.write(e)}end(){return this.iconvLiteDecoder.end()}}function Js(n,e){const t=e.minBytesRequiredForDetection??e.guessEncoding?Xs:$s;return new Promise((i,r)=>{const s=Te(g=>g.join("")),a=[];let o=0,l;const c=new Le,u=async()=>{try{const g=await ln({buffer:v.concat(a),bytesRead:o},e.guessEncoding,e.candidateGuessEncodings);if(g.seemsBinary&&e.acceptTextOnly)throw new Qs("Stream is binary but only text is accepted for decoding",Je.STREAM_IS_BINARY);g.encoding=await e.overwriteEncoding(g.encoding),l=await $t.create(g.encoding);const S=l.write(v.concat(a).buffer);s.write(S),a.length=0,o=0,i({stream:s,detected:g})}catch(g){c.cancel(),s.destroy(),r(g)}};Pt(n,{onData:async g=>{l?s.write(l.write(g.buffer)):(a.push(g),o+=g.byteLength,o>=t&&(n.pause(),await u(),setTimeout(()=>n.resume())))},onError:g=>s.error(g),onEnd:async()=>{l||await u(),s.end(l==null?void 0:l.end())}},c.token)})}async function Zs(n,e,t){const r=(await et(()=>import("./C5dUYXMV.js").then(o=>o.i),__vite__mapDeps([0,1]),import.meta.url).then(o=>o.default??o)).getEncoder(Xt(e),t);let s=!1,a=!1;return{read(){if(a)return null;const o=n.read();if(typeof o!="string"){if(a=!0,!s&&(t!=null&&t.addBOM))switch(e){case D:case $:return v.wrap(Uint8Array.from(Ce));case ce:return v.wrap(Uint8Array.from(Ge));case he:return v.wrap(Uint8Array.from(_t))}const l=r.end();return l&&l.length>0?(s=!0,v.wrap(l)):null}return s=!0,v.wrap(r.write(o))}}}async function Ks(n){return(await et(()=>import("./C5dUYXMV.js").then(t=>t.i),__vite__mapDeps([0,1]),import.meta.url).then(t=>t.default??t)).encodingExists(Xt(n))}function Xt(n){return n===$||n===null?D:n}function en(n,e){if(!n||e<Ge.length)return null;const t=n.readUInt8(0),i=n.readUInt8(1);if(t===Ge[0]&&i===Ge[1])return ce;if(t===_t[0]&&i===_t[1])return he;if(e<Ce.length)return null;const r=n.readUInt8(2);return t===Ce[0]&&i===Ce[1]&&r===Ce[2]?$:null}const tn=["ascii","utf-16","utf-32"];async function rn(n,e){const t=await et(()=>import("./DQYsF6hY.js").then(o=>o.i),__vite__mapDeps([2,1]),import.meta.url).then(o=>o.default??o),i=n.slice(0,js),r=on(i.buffer);e&&(e=pi(e.map(o=>an(o))),e.length===0&&(e=void 0));let s;try{s=t.detect(r,e?{detectEncodings:e}:void 0)}catch{return null}if(!s||!s.encoding)return null;const a=s.encoding.toLowerCase();return 0<=tn.indexOf(a)?null:nn(s.encoding)}const sn={ibm866:"cp866",big5:"cp950"};function tr(n){return n.replace(/[^a-zA-Z0-9]/g,"").toLowerCase()}function nn(n){const e=tr(n);return sn[e]||e}function an(n){const e=tr(n),t=He[e];return t?t.guessableName:void 0}function on(n){let e="";for(let t=0;t<n.length;t++)e+=String.fromCharCode(n[t]);return e}function ln({buffer:n,bytesRead:e},t,i){let r=en(n,e),s=!1;if(r!==ce&&r!==he&&n){let a=!0,o=!0,l=!1;for(let c=0;c<e&&c<qs;c++){const u=c%2===1,g=n.readUInt8(c)===0;if(g&&(l=!0),a&&(u&&!g||!u&&g)&&(a=!1),o&&(u&&g||!u&&!g)&&(o=!1),g&&!a&&!o)break}l&&(a?r=he:o?r=ce:s=!0)}return t&&!s&&!r&&n?rn(n.slice(0,e),i).then(a=>({seemsBinary:!1,encoding:a})):{seemsBinary:s,encoding:r}}const J={utf8:{labelLong:"UTF-8",labelShort:"UTF-8",order:1,alias:"utf8bom",guessableName:"UTF-8"},utf8bom:{labelLong:"UTF-8 with BOM",labelShort:"UTF-8 with BOM",encodeOnly:!0,order:2,alias:"utf8"},utf16le:{labelLong:"UTF-16 LE",labelShort:"UTF-16 LE",order:3,guessableName:"UTF-16LE"},utf16be:{labelLong:"UTF-16 BE",labelShort:"UTF-16 BE",order:4,guessableName:"UTF-16BE"},windows1252:{labelLong:"Western (Windows 1252)",labelShort:"Windows 1252",order:5,guessableName:"windows-1252"},iso88591:{labelLong:"Western (ISO 8859-1)",labelShort:"ISO 8859-1",order:6},iso88593:{labelLong:"Western (ISO 8859-3)",labelShort:"ISO 8859-3",order:7},iso885915:{labelLong:"Western (ISO 8859-15)",labelShort:"ISO 8859-15",order:8},macroman:{labelLong:"Western (Mac Roman)",labelShort:"Mac Roman",order:9},cp437:{labelLong:"DOS (CP 437)",labelShort:"CP437",order:10},windows1256:{labelLong:"Arabic (Windows 1256)",labelShort:"Windows 1256",order:11},iso88596:{labelLong:"Arabic (ISO 8859-6)",labelShort:"ISO 8859-6",order:12},windows1257:{labelLong:"Baltic (Windows 1257)",labelShort:"Windows 1257",order:13},iso88594:{labelLong:"Baltic (ISO 8859-4)",labelShort:"ISO 8859-4",order:14},iso885914:{labelLong:"Celtic (ISO 8859-14)",labelShort:"ISO 8859-14",order:15},windows1250:{labelLong:"Central European (Windows 1250)",labelShort:"Windows 1250",order:16,guessableName:"windows-1250"},iso88592:{labelLong:"Central European (ISO 8859-2)",labelShort:"ISO 8859-2",order:17,guessableName:"ISO-8859-2"},cp852:{labelLong:"Central European (CP 852)",labelShort:"CP 852",order:18},windows1251:{labelLong:"Cyrillic (Windows 1251)",labelShort:"Windows 1251",order:19,guessableName:"windows-1251"},cp866:{labelLong:"Cyrillic (CP 866)",labelShort:"CP 866",order:20,guessableName:"IBM866"},cp1125:{labelLong:"Cyrillic (CP 1125)",labelShort:"CP 1125",order:21,guessableName:"IBM1125"},iso88595:{labelLong:"Cyrillic (ISO 8859-5)",labelShort:"ISO 8859-5",order:22,guessableName:"ISO-8859-5"},koi8r:{labelLong:"Cyrillic (KOI8-R)",labelShort:"KOI8-R",order:23,guessableName:"KOI8-R"},koi8u:{labelLong:"Cyrillic (KOI8-U)",labelShort:"KOI8-U",order:24},iso885913:{labelLong:"Estonian (ISO 8859-13)",labelShort:"ISO 8859-13",order:25},windows1253:{labelLong:"Greek (Windows 1253)",labelShort:"Windows 1253",order:26,guessableName:"windows-1253"},iso88597:{labelLong:"Greek (ISO 8859-7)",labelShort:"ISO 8859-7",order:27,guessableName:"ISO-8859-7"},windows1255:{labelLong:"Hebrew (Windows 1255)",labelShort:"Windows 1255",order:28,guessableName:"windows-1255"},iso88598:{labelLong:"Hebrew (ISO 8859-8)",labelShort:"ISO 8859-8",order:29,guessableName:"ISO-8859-8"},iso885910:{labelLong:"Nordic (ISO 8859-10)",labelShort:"ISO 8859-10",order:30},iso885916:{labelLong:"Romanian (ISO 8859-16)",labelShort:"ISO 8859-16",order:31},windows1254:{labelLong:"Turkish (Windows 1254)",labelShort:"Windows 1254",order:32},iso88599:{labelLong:"Turkish (ISO 8859-9)",labelShort:"ISO 8859-9",order:33},windows1258:{labelLong:"Vietnamese (Windows 1258)",labelShort:"Windows 1258",order:34},gbk:{labelLong:"Simplified Chinese (GBK)",labelShort:"GBK",order:35},gb18030:{labelLong:"Simplified Chinese (GB18030)",labelShort:"GB18030",order:36},cp950:{labelLong:"Traditional Chinese (Big5)",labelShort:"Big5",order:37,guessableName:"Big5"},big5hkscs:{labelLong:"Traditional Chinese (Big5-HKSCS)",labelShort:"Big5-HKSCS",order:38},shiftjis:{labelLong:"Japanese (Shift JIS)",labelShort:"Shift JIS",order:39,guessableName:"SHIFT_JIS"},eucjp:{labelLong:"Japanese (EUC-JP)",labelShort:"EUC-JP",order:40,guessableName:"EUC-JP"},euckr:{labelLong:"Korean (EUC-KR)",labelShort:"EUC-KR",order:41,guessableName:"EUC-KR"},windows874:{labelLong:"Thai (Windows 874)",labelShort:"Windows 874",order:42},iso885911:{labelLong:"Latin/Thai (ISO 8859-11)",labelShort:"ISO 8859-11",order:43},koi8ru:{labelLong:"Cyrillic (KOI8-RU)",labelShort:"KOI8-RU",order:44},koi8t:{labelLong:"Tajik (KOI8-T)",labelShort:"KOI8-T",order:45},gb2312:{labelLong:"Simplified Chinese (GB 2312)",labelShort:"GB 2312",order:46,guessableName:"GB2312"},cp865:{labelLong:"Nordic DOS (CP 865)",labelShort:"CP 865",order:47},cp850:{labelLong:"Western European DOS (CP 850)",labelShort:"CP 850",order:48}},He=(()=>{const n={};for(const e in J)J[e].guessableName&&(n[e]=J[e]);return n})();var ge,H;let Ct=(H=class extends Oe{get name(){return this.configuredLabelFormat==="content"&&!this.hasAssociatedFilePath&&this.cachedModelFirstLineWords?this.cachedModelFirstLineWords:this.labelService.getUriBasenameLabel(this.resource)}constructor(e,t,i,r,s,a,o,l,c,u,g,S,F,L,z){super(o,a,L,z),this.resource=e,this.hasAssociatedFilePath=t,this.initialValue=i,this.preferredLanguageId=r,this.preferredEncoding=s,this.workingCopyBackupService=l,this.textResourceConfigurationService=c,this.workingCopyService=u,this.textFileService=g,this.labelService=S,this.editorService=F,this._onDidChangeContent=this._register(new f),this.onDidChangeContent=this._onDidChangeContent.event,this._onDidChangeName=this._register(new f),this.onDidChangeName=this._onDidChangeName.event,this._onDidChangeDirty=this._register(new f),this.onDidChangeDirty=this._onDidChangeDirty.event,this._onDidChangeEncoding=this._register(new f),this.onDidChangeEncoding=this._onDidChangeEncoding.event,this._onDidSave=this._register(new f),this.onDidSave=this._onDidSave.event,this._onDidRevert=this._register(new f),this.onDidRevert=this._onDidRevert.event,this.typeId=er,this.capabilities=Qe.Untitled,this.configuredLabelFormat="content",this.cachedModelFirstLineWords=void 0,this.ignoreDirtyOnModelContentChange=!1,this.dirty=this.hasAssociatedFilePath||!!this.initialValue,this._register(this.workingCopyService.registerWorkingCopy(this)),r&&this.setLanguageId(r),this.onConfigurationChange(void 0,!1),this.registerListeners()}registerListeners(){this._register(this.textResourceConfigurationService.onDidChangeConfiguration(e=>this.onConfigurationChange(e,!0)))}onConfigurationChange(e,t){if(!e||e.affectsConfiguration(this.resource,"files.encoding")){const i=this.textResourceConfigurationService.getValue(this.resource,"files.encoding");this.configuredEncoding!==i&&typeof i=="string"&&(this.configuredEncoding=i,t&&!this.preferredEncoding&&this._onDidChangeEncoding.fire())}if(!e||e.affectsConfiguration(this.resource,"workbench.editor.untitled.labelFormat")){const i=this.textResourceConfigurationService.getValue(this.resource,"workbench.editor.untitled.labelFormat");this.configuredLabelFormat!==i&&(i==="content"||i==="name")&&(this.configuredLabelFormat=i,t&&this._onDidChangeName.fire())}}setLanguageId(e,t){const i=e===ge.ACTIVE_EDITOR_LANGUAGE_ID?this.editorService.activeTextEditorLanguageId:e;this.preferredLanguageId=i,i&&super.setLanguageId(i,t)}getLanguageId(){return this.textEditorModel?this.textEditorModel.getLanguageId():this.preferredLanguageId}getEncoding(){return this.preferredEncoding||this.configuredEncoding}async setEncoding(e){const t=this.getEncoding();this.preferredEncoding=e,t!==this.preferredEncoding&&this._onDidChangeEncoding.fire()}isDirty(){return this.dirty}isModified(){return this.isDirty()}setDirty(e){this.dirty!==e&&(this.dirty=e,this._onDidChangeDirty.fire())}async save(e){const t=await this.textFileService.save(this.resource,e);return t&&this._onDidSave.fire({reason:e==null?void 0:e.reason,source:e==null?void 0:e.source}),!!t}async revert(){this.ignoreDirtyOnModelContentChange=!0;try{this.updateTextEditorModel(Yr(""))}finally{this.ignoreDirtyOnModelContentChange=!1}this.setDirty(!1),this._onDidRevert.fire()}async backup(e){let t;return this.isResolved()?t=await this.textFileService.getEncodedReadable(this.resource,this.createSnapshot()??void 0,{encoding:D}):typeof this.initialValue=="string"&&(t=Di(v.fromString(this.initialValue))),{content:t}}async resolve(){let e=!1,t=!1;if(this.textEditorModel)this.updateTextEditorModel(void 0,this.preferredLanguageId);else{let r;const s=await this.workingCopyBackupService.resolve(this);s?(r=s.value,t=!0):r=Ci(v.fromString(this.initialValue||""));const a=await kt(await this.textFileService.getDecodedStream(this.resource,r,{encoding:D}));this.createTextEditorModel(a,this.resource,this.preferredLanguageId),e=!0}const i=Ut(this.textEditorModel);return this.installModelListeners(i),e&&((t||this.initialValue)&&this.updateNameFromFirstLine(i),this.setDirty(this.hasAssociatedFilePath||!!t||!!this.initialValue),(t||this.initialValue)&&this._onDidChangeContent.fire()),super.resolve()}installModelListeners(e){this._register(e.onDidChangeContent(t=>this.onModelContentChanged(e,t))),this._register(e.onDidChangeLanguage(()=>this.onConfigurationChange(void 0,!0))),super.installModelListeners(e)}onModelContentChanged(e,t){this.ignoreDirtyOnModelContentChange||(!this.hasAssociatedFilePath&&e.getLineCount()===1&&e.getLineLength(1)===0?this.setDirty(!1):this.setDirty(!0)),t.changes.some(i=>(i.range.startLineNumber===1||i.range.endLineNumber===1)&&i.range.startColumn<=ge.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH)&&this.updateNameFromFirstLine(e),this._onDidChangeContent.fire(),this.autoDetectLanguage()}updateNameFromFirstLine(e){if(this.hasAssociatedFilePath)return;let t,i=e.getValueInRange({startLineNumber:1,endLineNumber:1,startColumn:1,endColumn:ge.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH+1}).trim().replace(/\s+/g," ").replace(/\u202E/g,"");i=i.substr(0,qr(i,ge.FIRST_LINE_NAME_MAX_LENGTH)[0]),i&&$r().exec(i)&&(t=i),t!==this.cachedModelFirstLineWords&&(this.cachedModelFirstLineWords=t,this._onDidChangeName.fire())}isReadonly(){return!1}},ge=H,H.FIRST_LINE_NAME_MAX_LENGTH=40,H.FIRST_LINE_NAME_CANDIDATE_MAX_LENGTH=H.FIRST_LINE_NAME_MAX_LENGTH*10,H.ACTIVE_EDITOR_LANGUAGE_ID="${activeEditorLanguage}",H);Ct=ge=W([h(5,xe),h(6,Ae),h(7,zi),h(8,Ne),h(9,Ri),h(10,Wt),h(11,bi),h(12,Xr),h(13,qt),h(14,Mt)],Ct);var Re,K;let Rt=(K=class extends Oe{constructor(e,t,i,r,s,a,o,l,c,u,g,S,F,L,z,te,De){super(s,r,F,L),this.resource=e,this.preferredEncoding=t,this.preferredLanguageId=i,this.fileService=a,this.textFileService=o,this.workingCopyBackupService=l,this.logService=c,this.workingCopyService=u,this.filesConfigurationService=g,this.labelService=S,this.pathService=z,this.extensionService=te,this.progressService=De,this._onDidChangeContent=this._register(new f),this.onDidChangeContent=this._onDidChangeContent.event,this._onDidResolve=this._register(new f),this.onDidResolve=this._onDidResolve.event,this._onDidChangeDirty=this._register(new f),this.onDidChangeDirty=this._onDidChangeDirty.event,this._onDidSaveError=this._register(new f),this.onDidSaveError=this._onDidSaveError.event,this._onDidSave=this._register(new f),this.onDidSave=this._onDidSave.event,this._onDidRevert=this._register(new f),this.onDidRevert=this._onDidRevert.event,this._onDidChangeEncoding=this._register(new f),this.onDidChangeEncoding=this._onDidChangeEncoding.event,this._onDidChangeOrphaned=this._register(new f),this.onDidChangeOrphaned=this._onDidChangeOrphaned.event,this._onDidChangeReadonly=this._register(new f),this.onDidChangeReadonly=this._onDidChangeReadonly.event,this.typeId=er,this.capabilities=Qe.None,this.versionId=0,this.ignoreDirtyOnModelContentChange=!1,this.ignoreSaveFromSaveParticipants=!1,this.lastModelContentChangeFromUndoRedo=void 0,this.saveSequentializer=new jr,this.dirty=!1,this.inConflictMode=!1,this.inOrphanMode=!1,this.inErrorMode=!1,this.hasEncodingSetExplicitly=!1,this.name=Qr(this.labelService.getUriLabel(this.resource)),this.resourceHasExtension=!!Se.extname(this.resource),this._register(this.workingCopyService.registerWorkingCopy(this)),this.registerListeners()}registerListeners(){this._register(this.fileService.onDidFilesChange(e=>this.onDidFilesChange(e))),this._register(this.filesConfigurationService.onDidChangeFilesAssociation(()=>this.onDidChangeFilesAssociation())),this._register(this.filesConfigurationService.onDidChangeReadonly(()=>this._onDidChangeReadonly.fire()))}async onDidFilesChange(e){let t=!1,i;if(this.inOrphanMode?e.contains(this.resource,C.ADDED)&&(i=!1,t=!0):e.contains(this.resource,C.DELETED)&&(i=!0,t=!0),t&&this.inOrphanMode!==i){let r=!1;i&&(await ct(100,Ye.None),this.isDisposed()?r=!0:r=!await this.fileService.exists(this.resource)),this.inOrphanMode!==r&&!this.isDisposed()&&this.setOrphaned(r)}}setOrphaned(e){this.inOrphanMode!==e&&(this.inOrphanMode=e,this._onDidChangeOrphaned.fire())}onDidChangeFilesAssociation(){if(!this.isResolved())return;const e=this.getFirstLineText(this.textEditorModel),t=this.getOrCreateLanguage(this.resource,this.languageService,this.preferredLanguageId,e);this.textEditorModel.setLanguage(t)}setLanguageId(e,t){super.setLanguageId(e,t),this.preferredLanguageId=e}async backup(e){let t;this.lastResolvedFileStat&&(t={mtime:this.lastResolvedFileStat.mtime,ctime:this.lastResolvedFileStat.ctime,size:this.lastResolvedFileStat.size,etag:this.lastResolvedFileStat.etag,orphaned:this.inOrphanMode});const i=await this.textFileService.getEncodedReadable(this.resource,this.createSnapshot()??void 0,{encoding:D});return{meta:t,content:i}}async revert(e){if(!this.isResolved())return;const t=this.dirty,i=this.doSetDirty(!1);if(!(e==null?void 0:e.soft))try{await this.forceResolveFromFile()}catch(s){if(s.fileOperationResult!==_.FILE_NOT_FOUND)throw i(),s}this._onDidRevert.fire(),t&&this._onDidChangeDirty.fire()}async resolve(e){if(this.trace("resolve() - enter"),ht("code/willResolveTextFileEditorModel"),this.isDisposed()){this.trace("resolve() - exit - without resolving because model is disposed");return}if(!(e!=null&&e.contents)&&(this.dirty||this.saveSequentializer.isRunning())){this.trace("resolve() - exit - without resolving because model is dirty or being saved");return}await this.doResolve(e),ht("code/didResolveTextFileEditorModel")}async doResolve(e){if(e!=null&&e.contents)return this.resolveFromBuffer(e.contents,e);if(!(!this.isResolved()&&await this.resolveFromBackup(e)))return this.resolveFromFile(e)}async resolveFromBuffer(e,t){this.trace("resolveFromBuffer()");let i,r,s,a;try{const l=await this.fileService.stat(this.resource);i=l.mtime,r=l.ctime,s=l.size,a=l.etag,this.setOrphaned(!1)}catch(l){i=Date.now(),r=Date.now(),s=0,a=se,this.setOrphaned(l.fileOperationResult===_.FILE_NOT_FOUND)}const o=await this.textFileService.encoding.getPreferredWriteEncoding(this.resource,this.preferredEncoding);this.resolveFromContent({resource:this.resource,name:this.name,mtime:i,ctime:r,size:s,etag:a,value:e,encoding:o.encoding,readonly:!1,locked:!1},!0,t)}async resolveFromBackup(e){const t=await this.workingCopyBackupService.resolve(this);let i=D;return t&&(i=(await this.textFileService.encoding.getPreferredWriteEncoding(this.resource,this.preferredEncoding)).encoding),!this.isResolved()?t?(await this.doResolveFromBackup(t,i,e),!0):!1:(this.trace("resolveFromBackup() - exit - without resolving because previously new model got created meanwhile"),!0)}async doResolveFromBackup(e,t,i){var r;this.trace("doResolveFromBackup()"),this.resolveFromContent({resource:this.resource,name:this.name,mtime:e.meta?e.meta.mtime:Date.now(),ctime:e.meta?e.meta.ctime:Date.now(),size:e.meta?e.meta.size:0,etag:e.meta?e.meta.etag:se,value:await kt(await this.textFileService.getDecodedStream(this.resource,e.value,{encoding:D})),encoding:t,readonly:!1,locked:!1},!0,i),(r=e.meta)!=null&&r.orphaned&&this.setOrphaned(!0)}async resolveFromFile(e){this.trace("resolveFromFile()");const t=e==null?void 0:e.forceReadFromFile,i=this.isResolved()||(e==null?void 0:e.allowBinary);let r;t?r=se:this.lastResolvedFileStat&&(r=this.lastResolvedFileStat.etag);const s=this.versionId;try{const a=await this.textFileService.readStream(this.resource,{acceptTextOnly:!i,etag:r,encoding:this.preferredEncoding,limits:e==null?void 0:e.limits});if(this.setOrphaned(!1),s!==this.versionId){this.trace("resolveFromFile() - exit - without resolving because model content changed");return}return this.resolveFromContent(a,!1,e)}catch(a){const o=a.fileOperationResult;if(this.setOrphaned(o===_.FILE_NOT_FOUND),this.isResolved()&&o===_.FILE_NOT_MODIFIED_SINCE){a instanceof We&&this.updateLastResolvedFileStat(a.stat);return}if(this.isResolved()&&o===_.FILE_NOT_FOUND&&!t)return;throw a}}resolveFromContent(e,t,i){if(this.trace("resolveFromContent() - enter"),this.isDisposed()){this.trace("resolveFromContent() - exit - because model is disposed");return}this.updateLastResolvedFileStat({resource:this.resource,name:e.name,mtime:e.mtime,ctime:e.ctime,size:e.size,etag:e.etag,readonly:e.readonly,locked:e.locked,isFile:!0,isDirectory:!1,isSymbolicLink:!1,children:void 0});const r=this.contentEncoding;this.contentEncoding=e.encoding,this.preferredEncoding?this.updatePreferredEncoding(this.contentEncoding):r!==this.contentEncoding&&this._onDidChangeEncoding.fire(),this.textEditorModel?this.doUpdateTextModel(e.value):this.doCreateTextModel(e.resource,e.value),this.setDirty(!!t),this._onDidResolve.fire((i==null?void 0:i.reason)??pt.OTHER)}doCreateTextModel(e,t){this.trace("doCreateTextModel()");const i=this.createTextEditorModel(t,e,this.preferredLanguageId);this.installModelListeners(i),this.autoDetectLanguage()}doUpdateTextModel(e){this.trace("doUpdateTextModel()"),this.ignoreDirtyOnModelContentChange=!0;try{this.updateTextEditorModel(e,this.preferredLanguageId)}finally{this.ignoreDirtyOnModelContentChange=!1}}installModelListeners(e){this._register(e.onDidChangeContent(t=>this.onModelContentChanged(e,t.isUndoing||t.isRedoing))),this._register(e.onDidChangeLanguage(()=>this.onMaybeShouldChangeEncoding())),super.installModelListeners(e)}onModelContentChanged(e,t){if(this.trace("onModelContentChanged() - enter"),this.versionId++,this.trace(`onModelContentChanged() - new versionId ${this.versionId}`),t&&(this.lastModelContentChangeFromUndoRedo=Date.now()),!this.ignoreDirtyOnModelContentChange&&!this.isReadonly())if(e.getAlternativeVersionId()===this.bufferSavedVersionId){this.trace("onModelContentChanged() - model content changed back to last saved version");const i=this.dirty;this.setDirty(!1),i&&this._onDidRevert.fire()}else this.trace("onModelContentChanged() - model content changed and marked as dirty"),this.setDirty(!0);this._onDidChangeContent.fire(),this.autoDetectLanguage()}async autoDetectLanguage(){var t;await((t=this.extensionService)==null?void 0:t.whenInstalledExtensionsRegistered());const e=this.getLanguageId();if(this.resource.scheme===this.pathService.defaultUriScheme&&(!e||e===j)&&!this.resourceHasExtension)return super.autoDetectLanguage()}async forceResolveFromFile(){this.isDisposed()||await this.textFileService.files.resolve(this.resource,{reload:{async:!1},forceReadFromFile:!0})}isDirty(){return this.dirty}isModified(){return this.isDirty()}setDirty(e){if(!this.isResolved())return;const t=this.dirty;this.doSetDirty(e),e!==t&&this._onDidChangeDirty.fire()}doSetDirty(e){const t=this.dirty,i=this.inConflictMode,r=this.inErrorMode,s=this.bufferSavedVersionId;return e?this.dirty=!0:(this.dirty=!1,this.inConflictMode=!1,this.inErrorMode=!1,this.updateSavedVersionId()),()=>{this.dirty=t,this.inConflictMode=i,this.inErrorMode=r,this.bufferSavedVersionId=s}}async save(e=Object.create(null)){return this.isResolved()?this.isReadonly()?(this.trace("save() - ignoring request for readonly resource"),!1):(this.hasState(A.CONFLICT)||this.hasState(A.ERROR))&&(e.reason===U.AUTO||e.reason===U.FOCUS_CHANGE||e.reason===U.WINDOW_CHANGE)?(this.trace("save() - ignoring auto save request for model that is in conflict or error"),!1):(this.trace("save() - enter"),await this.doSave(e),this.trace("save() - exit"),this.hasState(A.SAVED)):!1}async doSave(e){typeof e.reason!="number"&&(e.reason=U.EXPLICIT);const t=this.versionId;if(this.trace(`doSave(${t}) - enter with versionId ${t}`),this.ignoreSaveFromSaveParticipants){this.trace(`doSave(${t}) - exit - refusing to save() recursively from save participant`);return}if(this.saveSequentializer.isRunning(t))return this.trace(`doSave(${t}) - exit - found a running save for versionId ${t}`),this.saveSequentializer.running;if(!e.force&&!this.dirty){this.trace(`doSave(${t}) - exit - because not dirty and/or versionId is different (this.isDirty: ${this.dirty}, this.versionId: ${this.versionId})`);return}if(this.saveSequentializer.isRunning())return this.trace(`doSave(${t}) - exit - because busy saving`),this.saveSequentializer.cancelRunning(),this.saveSequentializer.queue(()=>this.doSave(e));this.isResolved()&&this.textEditorModel.pushStackElement();const i=new Le;return this.progressService.withProgress({title:d(12473,"Saving '{0}'",this.name),location:Ii.Window,cancellable:!0,delay:this.isDirty()?3e3:5e3},r=>this.doSaveSequential(t,e,r,i),()=>{i.cancel()}).finally(()=>{i.dispose()})}doSaveSequential(e,t,i,r){return this.saveSequentializer.run(e,(async()=>{if(this.isResolved()&&!t.skipSaveParticipants)try{if(t.reason===U.AUTO&&typeof this.lastModelContentChangeFromUndoRedo=="number"){const o=Date.now()-this.lastModelContentChangeFromUndoRedo;o<Re.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD&&await ct(Re.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD-o)}if(!r.token.isCancellationRequested){this.ignoreSaveFromSaveParticipants=!0;try{await this.textFileService.files.runSaveParticipants(this,{reason:t.reason??U.EXPLICIT,savedFrom:t.from},i,r.token)}catch(o){Oi(o)&&!r.token.isCancellationRequested&&r.cancel()}finally{this.ignoreSaveFromSaveParticipants=!1}}}catch(o){this.logService.error(`[text file model] runSaveParticipants(${e}) - resulted in an error: ${o.toString()}`,this.resource.toString())}if(r.token.isCancellationRequested||(r.dispose(),this.isDisposed())||!this.isResolved())return;e=this.versionId,this.inErrorMode=!1,i.report({message:d(12474,"Writing into file...")}),this.trace(`doSave(${e}) - before write()`);const s=Ut(this.lastResolvedFileStat),a=this;return this.saveSequentializer.run(e,(async()=>{try{const o=await this.textFileService.write(s.resource,a.createSnapshot(),{mtime:s.mtime,encoding:this.getEncoding(),etag:t.ignoreModifiedSince||!this.filesConfigurationService.preventSaveConflicts(s.resource,a.getLanguageId())?se:s.etag,unlock:t.writeUnlock,writeElevated:t.writeElevated});this.handleSaveSuccess(o,e,t)}catch(o){this.handleSaveError(o,e,t)}})())})(),()=>r.cancel())}handleSaveSuccess(e,t,i){this.updateLastResolvedFileStat(e),t===this.versionId?(this.trace(`handleSaveSuccess(${t}) - setting dirty to false because versionId did not change`),this.setDirty(!1)):this.trace(`handleSaveSuccess(${t}) - not setting dirty to false because versionId did change meanwhile`),this.setOrphaned(!1),this._onDidSave.fire({reason:i.reason,stat:e,source:i.source})}handleSaveError(e,t,i){if((i.ignoreErrorHandler?this.logService.trace:this.logService.error).apply(this.logService,[`[text file model] handleSaveError(${t}) - exit - resulted in a save error: ${e.toString()}`,this.resource.toString()]),i.ignoreErrorHandler)throw e;this.setDirty(!0),this.inErrorMode=!0,e.fileOperationResult===_.FILE_MODIFIED_SINCE&&(this.inConflictMode=!0),this.textFileService.files.saveErrorHandler.onSaveError(e,this,i),this._onDidSaveError.fire()}updateSavedVersionId(){this.isResolved()&&(this.bufferSavedVersionId=this.textEditorModel.getAlternativeVersionId())}updateLastResolvedFileStat(e){const t=this.isReadonly();this.lastResolvedFileStat?this.lastResolvedFileStat.mtime<=e.mtime?this.lastResolvedFileStat=e:this.lastResolvedFileStat={...this.lastResolvedFileStat,readonly:e.readonly,locked:e.locked}:this.lastResolvedFileStat=e,this.isReadonly()!==t&&this._onDidChangeReadonly.fire()}hasState(e){switch(e){case A.CONFLICT:return this.inConflictMode;case A.DIRTY:return this.dirty;case A.ERROR:return this.inErrorMode;case A.ORPHAN:return this.inOrphanMode;case A.PENDING_SAVE:return this.saveSequentializer.isRunning();case A.SAVED:return!this.dirty}}async joinState(e){return this.saveSequentializer.running}getLanguageId(){return this.textEditorModel?this.textEditorModel.getLanguageId():this.preferredLanguageId}async onMaybeShouldChangeEncoding(){if(this.hasEncodingSetExplicitly){this.trace("onMaybeShouldChangeEncoding() - ignoring because encoding was set explicitly");return}if(this.contentEncoding===$||this.contentEncoding===ce||this.contentEncoding===he){this.trace("onMaybeShouldChangeEncoding() - ignoring because content encoding has a BOM");return}const{encoding:e}=await this.textFileService.encoding.getPreferredReadEncoding(this.resource);if(typeof e!="string"||!this.isNewEncoding(e)){this.trace(`onMaybeShouldChangeEncoding() - ignoring because preferred encoding ${e} is not new`);return}if(this.isDirty()){this.trace("onMaybeShouldChangeEncoding() - ignoring because model is dirty");return}return this.logService.info(`Adjusting encoding based on configured language override to '${e}' for ${this.resource.toString(!0)}.`),this.forceResolveFromFile()}setEncoding(e,t){return this.hasEncodingSetExplicitly=!0,this.setEncodingInternal(e,t)}async setEncodingInternal(e,t){if(t===Dt.Encode)this.updatePreferredEncoding(e),this.isDirty()||(this.versionId++,this.setDirty(!0)),this.inConflictMode||await this.save({source:Re.TEXTFILE_SAVE_ENCODING_SOURCE});else{if(!this.isNewEncoding(e))return;this.isDirty()&&!this.inConflictMode&&await this.save(),this.updatePreferredEncoding(e),await this.forceResolveFromFile()}}updatePreferredEncoding(e){this.isNewEncoding(e)&&(this.preferredEncoding=e,this._onDidChangeEncoding.fire())}isNewEncoding(e){return!(this.preferredEncoding===e||!this.preferredEncoding&&this.contentEncoding===e)}getEncoding(){return this.preferredEncoding||this.contentEncoding}trace(e){this.logService.trace(`[text file model] ${e}`,this.resource.toString())}isResolved(){return!!this.textEditorModel}isReadonly(){return this.filesConfigurationService.isReadonly(this.resource,this.lastResolvedFileStat)}dispose(){this.trace("dispose()"),this.inConflictMode=!1,this.inOrphanMode=!1,this.inErrorMode=!1,super.dispose()}},Re=K,K.TEXTFILE_SAVE_ENCODING_SOURCE=Et.registerSource("textFileEncoding.source",d(12472,"File Encoding Changed")),K.UNDO_REDO_SAVE_PARTICIPANTS_AUTO_SAVE_THROTTLE_THRESHOLD=500,K);Rt=Re=W([h(3,xe),h(4,Ae),h(5,pe),h(6,Wt),h(7,zi),h(8,me),h(9,Ri),h(10,Ke),h(11,bi),h(12,qt),h(13,Mt),h(14,Bt),h(15,As),h(16,Li)],Rt);let bt=class extends b{constructor(e,t){super(),this.logService=e,this.progressService=t,this.saveParticipants=new Jr}addSaveParticipant(e){const t=this.saveParticipants.push(e);return Z(()=>t())}async participate(e,t,i,r){var o,l;const s=new Le(r);(o=e.textEditorModel)==null||o.pushStackElement(),i.report({message:d(12476,"Running Code Actions and Formatters...")});let a=!1;if(await this.progressService.withProgress({priority:Zr.URGENT,location:Ii.Notification,cancellable:d(12477,"Skip"),delay:e.isDirty()?5e3:3e3},async c=>{const u=Array.from(this.saveParticipants).sort((g,S)=>{const F=g.ordinal??0,L=S.ordinal??0;return F-L});for(const g of u){if(s.token.isCancellationRequested||!e.textEditorModel)break;try{const S=g.participate(e,t,c,s.token);await Kr(S,s.token)}catch(S){Oi(S)?s.token.isCancellationRequested||(s.cancel(),a=!0):this.logService.error(S)}}},()=>{s.cancel()}),(l=e.textEditorModel)==null||l.pushStackElement(),s.dispose(),a)throw new es}dispose(){this.saveParticipants.clear(),super.dispose()}};bt=W([h(0,me),h(1,Li)],bt);let It=class extends b{get models(){return[...this.mapResourceToModel.values()]}constructor(e,t,i,r,s){super(),this.instantiationService=e,this.fileService=t,this.notificationService=i,this.workingCopyFileService=r,this.uriIdentityService=s,this._onDidCreate=this._register(new f({leakWarningThreshold:500})),this.onDidCreate=this._onDidCreate.event,this._onDidResolve=this._register(new f),this.onDidResolve=this._onDidResolve.event,this._onDidRemove=this._register(new f),this.onDidRemove=this._onDidRemove.event,this._onDidChangeDirty=this._register(new f),this.onDidChangeDirty=this._onDidChangeDirty.event,this._onDidChangeReadonly=this._register(new f),this.onDidChangeReadonly=this._onDidChangeReadonly.event,this._onDidChangeOrphaned=this._register(new f),this.onDidChangeOrphaned=this._onDidChangeOrphaned.event,this._onDidSaveError=this._register(new f),this.onDidSaveError=this._onDidSaveError.event,this._onDidSave=this._register(new f),this.onDidSave=this._onDidSave.event,this._onDidRevert=this._register(new f),this.onDidRevert=this._onDidRevert.event,this._onDidChangeEncoding=this._register(new f),this.onDidChangeEncoding=this._onDidChangeEncoding.event,this.mapResourceToModel=new ne,this.mapResourceToModelListeners=new ne,this.mapResourceToDisposeListener=new ne,this.mapResourceToPendingModelResolvers=new ne,this.modelResolveQueue=this._register(new mi),this.saveErrorHandler=(()=>{const a=this.notificationService;return{onSaveError(o,l){a.error(d(12475,"Failed to save '{0}': {1}",l.name,ts(o,!1)))}}})(),this.mapCorrelationIdToModelsToRestore=new Map,this.saveParticipants=this._register(this.instantiationService.createInstance(bt)),this.registerListeners()}registerListeners(){this._register(this.fileService.onDidFilesChange(e=>this.onDidFilesChange(e))),this._register(this.fileService.onDidChangeFileSystemProviderCapabilities(e=>this.onDidChangeFileSystemProviderCapabilities(e))),this._register(this.fileService.onDidChangeFileSystemProviderRegistrations(e=>this.onDidChangeFileSystemProviderRegistrations(e))),this._register(this.workingCopyFileService.onWillRunWorkingCopyFileOperation(e=>this.onWillRunWorkingCopyFileOperation(e))),this._register(this.workingCopyFileService.onDidFailWorkingCopyFileOperation(e=>this.onDidFailWorkingCopyFileOperation(e))),this._register(this.workingCopyFileService.onDidRunWorkingCopyFileOperation(e=>this.onDidRunWorkingCopyFileOperation(e)))}onDidFilesChange(e){for(const t of this.models)t.isDirty()||e.contains(t.resource,C.UPDATED,C.ADDED)&&this.queueModelReload(t)}onDidChangeFileSystemProviderCapabilities(e){this.queueModelReloads(e.scheme)}onDidChangeFileSystemProviderRegistrations(e){e.added&&this.queueModelReloads(e.scheme)}queueModelReloads(e){for(const t of this.models)t.isDirty()||e===t.resource.scheme&&this.queueModelReload(t)}queueModelReload(e){this.modelResolveQueue.queueSize(e.resource)<=1&&this.modelResolveQueue.queueFor(e.resource,async()=>{try{await this.reload(e)}catch(i){ii(i)}})}onWillRunWorkingCopyFileOperation(e){if(e.operation===O.MOVE||e.operation===O.COPY){const t=[];for(const{source:i,target:r}of e.files)if(i){if(this.uriIdentityService.extUri.isEqual(i,r))continue;const s=[];for(const a of this.models)this.uriIdentityService.extUri.isEqualOrParent(a.resource,i)&&s.push(a);for(const a of s){const o=a.resource;let l;this.uriIdentityService.extUri.isEqual(o,i)?l=r:l=qe(r,o.path.substr(i.path.length+1));const c=a.getLanguageId();t.push({source:o,target:l,language:c?{id:c,explicit:a.languageChangeSource==="user"}:void 0,encoding:a.getEncoding(),snapshot:a.isDirty()?a.createSnapshot():void 0})}}this.mapCorrelationIdToModelsToRestore.set(e.correlationId,t)}}onDidFailWorkingCopyFileOperation(e){if(e.operation===O.MOVE||e.operation===O.COPY){const t=this.mapCorrelationIdToModelsToRestore.get(e.correlationId);t&&(this.mapCorrelationIdToModelsToRestore.delete(e.correlationId),t.forEach(i=>{var r;i.snapshot&&((r=this.get(i.source))==null||r.setDirty(!0))}))}}onDidRunWorkingCopyFileOperation(e){switch(e.operation){case O.CREATE:e.waitUntil((async()=>{for(const{target:t}of e.files){const i=this.get(t);i&&!i.isDisposed()&&await i.revert()}})());break;case O.MOVE:case O.COPY:e.waitUntil((async()=>{const t=this.mapCorrelationIdToModelsToRestore.get(e.correlationId);t&&(this.mapCorrelationIdToModelsToRestore.delete(e.correlationId),await fe.settled(t.map(async i=>{var a;const r=this.uriIdentityService.asCanonicalUri(i.target),s=await this.resolve(r,{reload:{async:!1},contents:i.snapshot?Ti(i.snapshot):void 0,encoding:i.encoding});(a=i.language)!=null&&a.id&&i.language.id!==j&&(i.language.explicit?s.setLanguageId(i.language.id):s.getLanguageId()===j&&Ai(r)!==is&&s.updateTextEditorModel(void 0,i.language.id))})))})());break}}get(e){return this.mapResourceToModel.get(e)}has(e){return this.mapResourceToModel.has(e)}async reload(e){await this.joinPendingResolves(e.resource),!(e.isDirty()||e.isDisposed()||!this.has(e.resource))&&await this.doResolve(e,{reload:{async:!1}})}async resolve(e,t){const i=this.joinPendingResolves(e);return i&&await i,this.doResolve(e,t)}async doResolve(e,t){let i,r;V.isUri(e)?(r=e,i=this.get(r)):(r=e.resource,i=e);let s,a=!1;if(i)t!=null&&t.contents?s=i.resolve(t):t!=null&&t.reload?t.reload.async?(s=Promise.resolve(),(async()=>{try{await i.resolve(t)}catch(o){i.isDisposed()||ii(o)}})()):s=i.resolve(t):s=Promise.resolve();else{a=!0;const o=i=this.instantiationService.createInstance(Rt,r,t?t.encoding:void 0,t?t.languageId:void 0);s=i.resolve(t),this.registerModel(o)}this.mapResourceToPendingModelResolvers.set(r,s),this.add(r,i),a&&(this._onDidCreate.fire(i),i.isDirty()&&this._onDidChangeDirty.fire(i));try{await s}catch(o){throw a&&i.dispose(),o}finally{this.mapResourceToPendingModelResolvers.delete(r)}return t!=null&&t.languageId&&i.setLanguageId(t.languageId),a&&i.isDirty()&&this._onDidChangeDirty.fire(i),i}joinPendingResolves(e){if(this.mapResourceToPendingModelResolvers.get(e))return this.doJoinPendingResolves(e)}async doJoinPendingResolves(e){let t;for(;this.mapResourceToPendingModelResolvers.has(e);){const i=this.mapResourceToPendingModelResolvers.get(e);if(i===t)return;t=i;try{await i}catch{}}}registerModel(e){const t=new de;t.add(e.onDidResolve(i=>this._onDidResolve.fire({model:e,reason:i}))),t.add(e.onDidChangeDirty(()=>this._onDidChangeDirty.fire(e))),t.add(e.onDidChangeReadonly(()=>this._onDidChangeReadonly.fire(e))),t.add(e.onDidChangeOrphaned(()=>this._onDidChangeOrphaned.fire(e))),t.add(e.onDidSaveError(()=>this._onDidSaveError.fire(e))),t.add(e.onDidSave(i=>this._onDidSave.fire({model:e,...i}))),t.add(e.onDidRevert(()=>this._onDidRevert.fire(e))),t.add(e.onDidChangeEncoding(()=>this._onDidChangeEncoding.fire(e))),this.mapResourceToModelListeners.set(e.resource,t)}add(e,t){if(this.mapResourceToModel.get(e)===t)return;const r=this.mapResourceToDisposeListener.get(e);r==null||r.dispose(),this.mapResourceToModel.set(e,t),this.mapResourceToDisposeListener.set(e,t.onWillDispose(()=>this.remove(e)))}remove(e){const t=this.mapResourceToModel.delete(e),i=this.mapResourceToDisposeListener.get(e);i&&(q(i),this.mapResourceToDisposeListener.delete(e));const r=this.mapResourceToModelListeners.get(e);r&&(q(r),this.mapResourceToModelListeners.delete(e)),t&&this._onDidRemove.fire(e)}addSaveParticipant(e){return this.saveParticipants.addSaveParticipant(e)}runSaveParticipants(e,t,i,r){return this.saveParticipants.participate(e,t,i,r)}canDispose(e){return e.isDisposed()||!this.mapResourceToPendingModelResolvers.has(e.resource)&&!e.isDirty()?!0:this.doCanDispose(e)}async doCanDispose(e){const t=this.joinPendingResolves(e.resource);return t?(await t,this.canDispose(e)):e.isDirty()?(await Gt.toPromise(e.onDidChangeDirty),this.canDispose(e)):!0}dispose(){super.dispose(),this.mapResourceToModel.clear(),this.mapResourceToPendingModelResolvers.clear(),q(this.mapResourceToDisposeListener.values()),this.mapResourceToDisposeListener.clear(),q(this.mapResourceToModelListeners.values()),this.mapResourceToModelListeners.clear()}};It=W([h(0,Ze),h(1,pe),h(2,rs),h(3,Ht),h(4,Ue)],It);var Ve,ee;let Ot=(ee=class extends b{constructor(e,t,i,r,s,a,o,l,c,u,g,S,F,L,z,te,De,tt){super(),this.fileService=e,this.lifecycleService=i,this.instantiationService=r,this.modelService=s,this.environmentService=a,this.dialogService=o,this.fileDialogService=l,this.textResourceConfigurationService=c,this.filesConfigurationService=u,this.codeEditorService=g,this.pathService=S,this.workingCopyFileService=F,this.uriIdentityService=L,this.languageService=z,this.logService=te,this.elevatedFileService=De,this.decorationsService=tt,this.files=this._register(this.instantiationService.createInstance(It)),this.untitled=t,this.provideDecorations()}provideDecorations(){const e=this._register(new class extends b{constructor(t){super(),this.files=t,this.label=d(12461,"Text File Model Decorations"),this._onDidChange=this._register(new f),this.onDidChange=this._onDidChange.event,this.registerListeners()}registerListeners(){this._register(this.files.onDidResolve(({model:t})=>{(t.isReadonly()||t.hasState(A.ORPHAN))&&this._onDidChange.fire([t.resource])})),this._register(this.files.onDidRemove(t=>this._onDidChange.fire([t]))),this._register(this.files.onDidChangeReadonly(t=>this._onDidChange.fire([t.resource]))),this._register(this.files.onDidChangeOrphaned(t=>this._onDidChange.fire([t.resource])))}provideDecorations(t){const i=this.files.get(t);if(!i||i.isDisposed())return;const r=i.isReadonly(),s=i.hasState(A.ORPHAN);if(r&&s)return{color:si,letter:ri.lockSmall,strikethrough:!0,tooltip:d(12462,"Deleted, Read-only")};if(r)return{letter:ri.lockSmall,tooltip:d(12463,"Read-only")};if(s)return{color:si,strikethrough:!0,tooltip:d(12464,"Deleted")}}}(this.files));this._register(this.decorationsService.registerDecorationsProvider(e))}get encoding(){return this._encoding||(this._encoding=this._register(this.instantiationService.createInstance(Lt))),this._encoding}async read(e,t){const[i,r]=await this.doRead(e,{...t,preferUnbuffered:!0});return{...i,encoding:r.detected.encoding||D,value:await Fi(r.stream,s=>s.join(""))}}async readStream(e,t){const[i,r]=await this.doRead(e,t);return{...i,encoding:r.detected.encoding||D,value:await kt(r.stream)}}async doRead(e,t){const i=new Le;let r;if(t!=null&&t.preferUnbuffered){const s=await this.fileService.readFile(e,t,i.token);r={...s,value:Ci(s.value)}}else r=await this.fileService.readFileStream(e,t,i.token);try{const s=await this.doGetDecodedStream(e,r.value,t);return[r,s]}catch(s){throw i.dispose(!0),s.decodeStreamErrorKind===Je.STREAM_IS_BINARY?new Vs(d(12465,"File seems to be binary and cannot be opened as text"),je.FILE_IS_BINARY,t):s}}async create(e,t){const i=await Promise.all(e.map(async r=>{var a;const s=await this.getEncodedReadable(r.resource,r.value);return{resource:r.resource,contents:s,overwrite:(a=r.options)==null?void 0:a.overwrite}}));return this.workingCopyFileService.create(i,Ye.None,t)}async write(e,t,i){const r=await this.getEncodedReadable(e,t,i);return i!=null&&i.writeElevated&&this.elevatedFileService.isSupported(e)?this.elevatedFileService.writeFileElevated(e,r,i):this.fileService.writeFile(e,r,i)}getEncoding(e){const t=e.scheme===N.untitled?this.untitled.get(e):this.files.get(e);return(t==null?void 0:t.getEncoding())??this.encoding.getUnvalidatedEncodingForResource(e)}async getEncodedReadable(e,t,i){const{encoding:r,addBOM:s}=await this.encoding.getWriteEncoding(e,i);if(r===D&&!s)return typeof t>"u"?void 0:Ys(t);t=t||"";const a=typeof t=="string"?zs(t):t;return Zs(a,r,{addBOM:s})}async getDecodedStream(e,t,i){return(await this.doGetDecodedStream(e,t,i)).stream}doGetDecodedStream(e,t,i){return Js(t,{acceptTextOnly:(i==null?void 0:i.acceptTextOnly)??!1,guessEncoding:(i==null?void 0:i.autoGuessEncoding)||this.textResourceConfigurationService.getValue(e,"files.autoGuessEncoding"),candidateGuessEncodings:(i==null?void 0:i.candidateGuessEncodings)||this.textResourceConfigurationService.getValue(e,"files.candidateGuessEncodings"),overwriteEncoding:async r=>{const{encoding:s}=await this.encoding.getPreferredReadEncoding(e,i,r??void 0);return s}})}async save(e,t){if(e.scheme===N.untitled){const i=this.untitled.get(e);if(i){let r;if(i.hasAssociatedFilePath?r=await this.suggestSavePath(e):r=await this.fileDialogService.pickFileToSave(await this.suggestSavePath(e),t==null?void 0:t.availableFileSystems),r)return this.saveAs(e,r,t)}}else{const i=this.files.get(e);if(i)return await i.save(t)?e:void 0}}async saveAs(e,t,i){if(t||(t=await this.fileDialogService.pickFileToSave(await this.suggestSavePath((i==null?void 0:i.suggestedTarget)??e),i==null?void 0:i.availableFileSystems)),!!t){if(this.filesConfigurationService.isReadonly(t))if(await this.confirmMakeWriteable(t))this.filesConfigurationService.updateReadonly(t,!1);else return;return xi(e,t)?this.save(e,{...i,force:!0}):this.fileService.hasProvider(e)&&this.uriIdentityService.extUri.isEqual(e,t)&&await this.fileService.exists(e)?(await this.workingCopyFileService.move([{file:{source:e,target:t}}],Ye.None),await this.save(e,i)||await this.save(t,i),t):this.doSaveAs(e,t,i)}}async doSaveAs(e,t,i){let r=!1;const s=this.files.get(e);if(s!=null&&s.isResolved())r=await this.doSaveAsTextFile(s,e,t,i);else if(this.fileService.hasProvider(e))await this.fileService.copy(e,t,!0),r=!0;else{const a=this.modelService.getModel(e);a&&(r=await this.doSaveAsTextFile(a,e,t,i))}if(r){try{await this.revert(e)}catch(a){this.logService.error(a)}return e.scheme===N.untitled&&this.untitled.notifyDidSave(e,t),t}}async doSaveAsTextFile(e,t,i,r){let s;const a=e;typeof a.getEncoding=="function"&&(s=a.getEncoding());let o=!1,l=this.files.get(i);if(l!=null&&l.isResolved())o=!0;else{o=await this.fileService.exists(i),o||await this.create([{resource:i,value:""}]);try{l=await this.files.resolve(i,{encoding:s})}catch(S){if(o&&(S.textFileOperationResult===je.FILE_IS_BINARY||S.fileOperationResult===_.FILE_TOO_LARGE))return await this.fileService.del(i),this.doSaveAsTextFile(e,t,i,r);throw S}}let c;if(e instanceof Ct&&e.hasAssociatedFilePath&&o&&this.uriIdentityService.extUri.isEqual(i,ni(e.resource,this.environmentService.remoteAuthority,this.pathService.defaultUriScheme))?c=await this.confirmOverwrite(i):c=!0,!c)return!1;let u;e instanceof Oe?e.isResolved()&&(u=e.textEditorModel??void 0):u=e;let g;if(l.isResolved()&&(g=l.textEditorModel),u&&g){l.updatePreferredEncoding(s),this.modelService.updateModel(g,Ti(u.createSnapshot()));const S=u.getLanguageId(),F=g.getLanguageId();S!==j&&F===j&&g.setLanguage(S);const L=this.codeEditorService.getTransientModelProperties(u);if(L)for(const[z,te]of L)this.codeEditorService.setTransientModelProperty(g,z,te)}return r!=null&&r.source||(r={...r,source:o?Ve.TEXTFILE_SAVE_REPLACE_SOURCE:Ve.TEXTFILE_SAVE_CREATE_SOURCE}),l.save({...r,from:t})}async confirmOverwrite(e){const{confirmed:t}=await this.dialogService.confirm({type:"warning",message:d(12466,"'{0}' already exists. Do you want to replace it?",k(e)),detail:d(12467,"A file or folder with the name '{0}' already exists in the folder '{1}'. Replacing it will overwrite its current contents.",k(e),k(be(e))),primaryButton:d(12468,"&&Replace")});return t}async confirmMakeWriteable(e){const{confirmed:t}=await this.dialogService.confirm({type:"warning",message:d(12469,"'{0}' is marked as read-only. Do you want to save anyway?",k(e)),detail:d(12470,"Paths can be configured as read-only via settings."),primaryButton:d(12471,"&&Save Anyway")});return t}async suggestSavePath(e){if(this.fileService.hasProvider(e))return e;const t=this.environmentService.remoteAuthority,i=await this.fileDialogService.defaultFilePath();let r;if(e.scheme===N.untitled){const s=this.untitled.get(e);if(s){if(s.hasAssociatedFilePath)return ni(e,t,this.pathService.defaultUriScheme);let a;await this.pathService.hasValidBasename(qe(i,s.name),s.name)?a=s.name:a=k(e);const o=s.getLanguageId();o&&o!==j?r=this.suggestFilename(o,a):r=a}}return r||(r=k(e)),qe(i,r)}suggestFilename(e,t){if(!this.languageService.getLanguageName(e))return t;const r=ss(t),s=this.languageService.getExtensions(e);if(s.includes(r))return t;const a=s.at(0);if(a)return r?`${t.substring(0,t.indexOf(r))}${a}`:`${t}${a}`;const o=this.languageService.getFilenames(e);return o.includes(t)?t:o.at(0)??t}async revert(e,t){if(e.scheme===N.untitled){const i=this.untitled.get(e);if(i)return i.revert(t)}else{const i=this.files.get(e);if(i&&(i.isDirty()||t!=null&&t.force))return i.revert(t)}}isDirty(e){const t=e.scheme===N.untitled?this.untitled.get(e):this.files.get(e);return t?t.isDirty():!1}},Ve=ee,ee.TEXTFILE_SAVE_CREATE_SOURCE=Et.registerSource("textFileCreate.source",d(12459,"File Created")),ee.TEXTFILE_SAVE_REPLACE_SOURCE=Et.registerSource("textFileOverwrite.source",d(12460,"File Replaced")),ee);Ot=Ve=W([h(0,pe),h(1,Vi),h(2,ze),h(3,Ze),h(4,Ae),h(5,Vt),h(6,Ni),h(7,Ui),h(8,Ne),h(9,Ke),h(10,Pi),h(11,Bt),h(12,Ht),h(13,Ue),h(14,xe),h(15,me),h(16,Yt),h(17,Mi)],Ot);let Lt=class extends b{get encodingOverrides(){return this._encodingOverrides}set encodingOverrides(e){this._encodingOverrides=e}constructor(e,t,i,r){super(),this.textResourceConfigurationService=e,this.environmentService=t,this.contextService=i,this.uriIdentityService=r,this._encodingOverrides=this.getDefaultEncodingOverrides(),this.registerListeners()}registerListeners(){this._register(this.contextService.onDidChangeWorkspaceFolders(()=>this.encodingOverrides=this.getDefaultEncodingOverrides()))}getDefaultEncodingOverrides(){const e=[];return e.push({parent:this.environmentService.userRoamingDataHome,encoding:D}),e.push({extension:ns,encoding:D}),e.push({parent:this.environmentService.untitledWorkspacesHome,encoding:D}),this.contextService.getWorkspace().folders.forEach(t=>{e.push({parent:qe(t.uri,".vscode"),encoding:D})}),e}async getWriteEncoding(e,t){const{encoding:i,hasBOM:r}=await this.getPreferredWriteEncoding(e,t?t.encoding:void 0);return{encoding:i,addBOM:r}}async getPreferredWriteEncoding(e,t){const i=await this.getValidatedEncodingForResource(e,t);return{encoding:i,hasBOM:i===ce||i===he||i===$}}async getPreferredReadEncoding(e,t,i){let r;t!=null&&t.encoding?i===$&&t.encoding===D?r=$:r=t.encoding:typeof i=="string"?r=i:this.textResourceConfigurationService.getValue(e,"files.encoding")===$&&(r=D);const s=await this.getValidatedEncodingForResource(e,r);return{encoding:s,hasBOM:s===ce||s===he||s===$}}getUnvalidatedEncodingForResource(e,t){let i;const r=this.getEncodingOverride(e);return r?i=r:t?i=t:i=this.textResourceConfigurationService.getValue(e,"files.encoding"),i||D}async getValidatedEncodingForResource(e,t){let i=this.getUnvalidatedEncodingForResource(e,t);return i!==D&&!await Ks(i)&&(i=D),i}getEncodingOverride(e){var t;if(e&&((t=this.encodingOverrides)!=null&&t.length)){for(const i of this.encodingOverrides)if(i.parent&&this.uriIdentityService.extUri.isEqualOrParent(e,i.parent)||i.extension&&Ai(e)===`.${i.extension}`)return i.encoding}}};Lt=W([h(0,Ne),h(1,Vt),h(2,zt),h(3,Ue)],Lt);let Tt=class extends Ot{constructor(e,t,i,r,s,a,o,l,c,u,g,S,F,L,z,te,De,tt){super(e,t,i,r,s,a,o,l,c,u,g,S,F,L,z,De,te,tt),this.registerListeners()}registerListeners(){this._register(this.lifecycleService.onBeforeShutdown(e=>e.veto(this.onBeforeShutdown(),"veto.textFiles")))}onBeforeShutdown(){return!!this.files.models.some(e=>e.hasState(A.PENDING_SAVE))}};Tt=W([h(0,pe),h(1,Vi),h(2,ze),h(3,Ze),h(4,Ae),h(5,Vt),h(6,Ni),h(7,Ui),h(8,Ne),h(9,Ke),h(10,Pi),h(11,Bt),h(12,Ht),h(13,Ue),h(14,xe),h(15,Yt),h(16,me),h(17,Mi)],Tt);var G,le;let At=(le=class extends b{constructor(e,t,i,r){super(),this.getExpression=e,this.shouldUpdate=t,this.contextService=i,this.configurationService=r,this._onExpressionChange=this._register(new f),this.onExpressionChange=this._onExpressionChange.event,this.mapFolderToParsedExpression=new Map,this.mapFolderToConfiguredExpression=new Map,this.updateExpressions(!1),this.registerListeners()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(e=>{this.shouldUpdate(e)&&this.updateExpressions(!0)})),this._register(this.contextService.onDidChangeWorkspaceFolders(()=>this.updateExpressions(!0)))}updateExpressions(e){let t=!1;for(const a of this.contextService.getWorkspace().folders){const o=a.uri.toString(),l=this.doGetExpression(a.uri),c=this.mapFolderToConfiguredExpression.get(o);l?(!c||!ft(c.expression,l.expression))&&(t=!0,this.mapFolderToParsedExpression.set(o,ai(l.expression)),this.mapFolderToConfiguredExpression.set(o,l)):c&&(t=!0,this.mapFolderToParsedExpression.delete(o),this.mapFolderToConfiguredExpression.delete(o))}const i=new as(this.contextService.getWorkspace().folders.map(a=>a.uri));for(const[a]of this.mapFolderToConfiguredExpression)a!==G.NO_FOLDER&&(i.has(V.parse(a))||(this.mapFolderToParsedExpression.delete(a),this.mapFolderToConfiguredExpression.delete(a),t=!0));const r=this.doGetExpression(void 0),s=this.mapFolderToConfiguredExpression.get(G.NO_FOLDER);r?(!s||!ft(s.expression,r.expression))&&(t=!0,this.mapFolderToParsedExpression.set(G.NO_FOLDER,ai(r.expression)),this.mapFolderToConfiguredExpression.set(G.NO_FOLDER,r)):s&&(t=!0,this.mapFolderToParsedExpression.delete(G.NO_FOLDER),this.mapFolderToConfiguredExpression.delete(G.NO_FOLDER)),e&&t&&this._onExpressionChange.fire()}doGetExpression(e){const t=this.getExpression(e);if(!t)return;const i=Object.keys(t);if(i.length===0)return;let r=!1;const s=Object.create(null);for(const a of i){r||(r=os(a));let o=a;const l=ls(o,!0);if(l){const c=l.toLowerCase();l!==l.toLowerCase()&&(o=`${c}${o.substring(1)}`)}s[o]=t[a]}return{expression:s,hasAbsolutePath:r}}matches(e,t){if(this.mapFolderToParsedExpression.size===0)return!1;const i=this.contextService.getWorkspaceFolder(e);let r,s;if(i&&this.mapFolderToParsedExpression.has(i.uri.toString())?(r=this.mapFolderToParsedExpression.get(i.uri.toString()),s=this.mapFolderToConfiguredExpression.get(i.uri.toString())):(r=this.mapFolderToParsedExpression.get(G.NO_FOLDER),s=this.mapFolderToConfiguredExpression.get(G.NO_FOLDER)),!r)return!1;let a;return i?a=ds(i.uri,e):a=this.uriToPath(e),typeof a=="string"&&r(a,void 0,t)?!0:a!==this.uriToPath(e)&&(s!=null&&s.hasAbsolutePath)?!!r(this.uriToPath(e),void 0,t):!1}uriToPath(e){return e.scheme===N.file?e.fsPath:e.path}},G=le,le.NO_FOLDER=null,le);At=G=W([h(2,zt),h(3,ki)],At);class dn extends Hi{constructor(){super(...arguments),this._onDidChangeDirty=this._register(new f),this._onDidChangeLabel=this._register(new f),this._onDidChangeCapabilities=this._register(new f),this._onWillDispose=this._register(new f),this.onDidChangeDirty=this._onDidChangeDirty.event,this.onDidChangeLabel=this._onDidChangeLabel.event,this.onDidChangeCapabilities=this._onDidChangeCapabilities.event,this.onWillDispose=this._onWillDispose.event}get editorId(){}get capabilities(){return ye.Readonly}hasCapability(e){return e===ye.None?this.capabilities===ye.None:(this.capabilities&e)!==0}isReadonly(){return this.hasCapability(ye.Readonly)}getName(){return`Editor ${this.typeId}`}getDescription(e){}getTitle(e){return this.getName()}getLabelExtraClasses(){return[]}getAriaLabel(){return this.getTitle(vt.SHORT)}getIcon(){}getTelemetryDescriptor(){return{typeId:this.typeId}}isDirty(){return!1}isModified(){return this.isDirty()}isSaving(){return!1}async resolve(){return null}async save(e,t){return this}async saveAs(e,t){return this}async revert(e,t){}async rename(e,t){}copy(){return this}canMove(e,t){return!0}matches(e){var i;if(P(e))return this===e;const t=(i=e.options)==null?void 0:i.override;return this.editorId!==t&&t!==void 0&&this.editorId!==void 0?!1:xi(this.resource,$e.getCanonicalUri(e))}prefersEditorPane(e){return e.at(0)}toUntyped(e){}isDisposed(){return this._store.isDisposed}dispose(){this.isDisposed()||this._onWillDispose.fire(),super.dispose()}}var M;const cn=new hs("autoSaveAfterShortDelayContext",!1,!0);var T;(function(n){n[n.OFF=0]="OFF",n[n.AFTER_SHORT_DELAY=1]="AFTER_SHORT_DELAY",n[n.AFTER_LONG_DELAY=2]="AFTER_LONG_DELAY",n[n.ON_FOCUS_CHANGE=3]="ON_FOCUS_CHANGE",n[n.ON_WINDOW_CHANGE=4]="ON_WINDOW_CHANGE"})(T||(T={}));var re;(function(n){n[n.SETTINGS=1]="SETTINGS",n[n.OUT_OF_WORKSPACE=2]="OUT_OF_WORKSPACE",n[n.ERRORS=3]="ERRORS",n[n.DISABLED=4]="DISABLED"})(re||(re={}));var X;let xt=(X=class extends b{constructor(e,t,i,r,s,a,o,l){var u,g;super(),this.configurationService=t,this.contextService=i,this.environmentService=r,this.uriIdentityService=s,this.fileService=a,this.markerService=o,this.textResourceConfigurationService=l,this._onDidChangeAutoSaveConfiguration=this._register(new f),this.onDidChangeAutoSaveConfiguration=this._onDidChangeAutoSaveConfiguration.event,this._onDidChangeAutoSaveDisabled=this._register(new f),this.onDidChangeAutoSaveDisabled=this._onDidChangeAutoSaveDisabled.event,this._onDidChangeFilesAssociation=this._register(new f),this.onDidChangeFilesAssociation=this._onDidChangeFilesAssociation.event,this._onDidChangeReadonly=this._register(new f),this.onDidChangeReadonly=this._onDidChangeReadonly.event,this.autoSaveConfigurationCache=new cs(1e3),this.autoSaveAfterShortDelayOverrides=new ne,this.autoSaveDisabledOverrides=new ne,this.readonlyIncludeMatcher=this._register(new oi(()=>this.createReadonlyMatcher(Wi))),this.readonlyExcludeMatcher=this._register(new oi(()=>this.createReadonlyMatcher(Bi))),this.sessionReadonlyOverrides=new ne(S=>this.uriIdentityService.extUri.getComparisonKey(S)),this.autoSaveAfterShortDelayContext=cn.bindTo(e);const c=t.getValue();this.currentGlobalAutoSaveConfiguration=this.computeAutoSaveConfiguration(void 0,c.files),this.currentFilesAssociationConfiguration=(u=c==null?void 0:c.files)==null?void 0:u.associations,this.currentHotExitConfiguration=((g=c==null?void 0:c.files)==null?void 0:g.hotExit)||I.ON_EXIT,this.onFilesConfigurationChange(c,!1),this.registerListeners()}createReadonlyMatcher(e){const t=this._register(new At(i=>this.configurationService.getValue(e,{resource:i}),i=>i.affectsConfiguration(e),this.contextService,this.configurationService));return this._register(t.onExpressionChange(()=>this._onDidChangeReadonly.fire())),t}isReadonly(e,t){const i=this.fileService.getProvider(e.scheme);if(i&&us(i))return i.readOnlyMessage??M.READONLY_MESSAGES.providerReadonly;const r=this.sessionReadonlyOverrides.get(e);return typeof r=="boolean"?r===!0?M.READONLY_MESSAGES.sessionReadonly:!1:this.uriIdentityService.extUri.isEqualOrParent(e,this.environmentService.userRoamingDataHome)||this.uriIdentityService.extUri.isEqual(e,this.contextService.getWorkspace().configuration??void 0)?!1:this.readonlyIncludeMatcher.value.matches(e)?this.readonlyExcludeMatcher.value.matches(e)?!1:M.READONLY_MESSAGES.configuredReadonly:this.configuredReadonlyFromPermissions&&(t!=null&&t.locked)?M.READONLY_MESSAGES.fileLocked:t!=null&&t.readonly?M.READONLY_MESSAGES.fileReadonly:!1}async updateReadonly(e,t){if(t==="toggle"){let i;try{i=await this.fileService.resolve(e,{resolveMetadata:!0})}catch{}t=!this.isReadonly(e,i)}t==="reset"?this.sessionReadonlyOverrides.delete(e):this.sessionReadonlyOverrides.set(e,t),this._onDidChangeReadonly.fire()}registerListeners(){this._register(this.configurationService.onDidChangeConfiguration(e=>{e.affectsConfiguration("files")&&this.onFilesConfigurationChange(this.configurationService.getValue(),!0)}))}onFilesConfigurationChange(e,t){var a,o,l;this.currentGlobalAutoSaveConfiguration=this.computeAutoSaveConfiguration(void 0,e.files),this.autoSaveConfigurationCache.clear(),this.autoSaveAfterShortDelayContext.set(this.getAutoSaveMode(void 0).mode===T.AFTER_SHORT_DELAY),t&&this._onDidChangeAutoSaveConfiguration.fire();const i=(a=e==null?void 0:e.files)==null?void 0:a.associations;ft(this.currentFilesAssociationConfiguration,i)||(this.currentFilesAssociationConfiguration=i,t&&this._onDidChangeFilesAssociation.fire());const r=(o=e==null?void 0:e.files)==null?void 0:o.hotExit;r===I.OFF||r===I.ON_EXIT_AND_WINDOW_CLOSE?this.currentHotExitConfiguration=r:this.currentHotExitConfiguration=I.ON_EXIT;const s=!!((l=e==null?void 0:e.files)!=null&&l.readonlyFromPermissions);s!==!!this.configuredReadonlyFromPermissions&&(this.configuredReadonlyFromPermissions=s,t&&this._onDidChangeReadonly.fire())}getAutoSaveConfiguration(e){const t=this.toResource(e);if(t){let i=this.autoSaveConfigurationCache.get(t);return i||(i=this.computeAutoSaveConfiguration(t,this.textResourceConfigurationService.getValue(t,"files")),this.autoSaveConfigurationCache.set(t,i)),i}return this.currentGlobalAutoSaveConfiguration}computeAutoSaveConfiguration(e,t){let i,r,s,a,o,l;switch((t==null?void 0:t.autoSave)??M.DEFAULT_AUTO_SAVE_MODE){case p.AFTER_DELAY:{i="afterDelay",r=typeof(t==null?void 0:t.autoSaveDelay)=="number"&&t.autoSaveDelay>=0?t.autoSaveDelay:M.DEFAULT_AUTO_SAVE_DELAY,l=r<=M.DEFAULT_AUTO_SAVE_DELAY;break}case p.ON_FOCUS_CHANGE:i="onFocusChange";break;case p.ON_WINDOW_CHANGE:i="onWindowChange";break}return(t==null?void 0:t.autoSaveWorkspaceFilesOnly)===!0&&(s=!0,e&&!this.contextService.isInsideWorkspace(e)&&(o=!0,l=void 0)),(t==null?void 0:t.autoSaveWhenNoErrors)===!0&&(a=!0,l=void 0),{autoSave:i,autoSaveDelay:r,autoSaveWorkspaceFilesOnly:s,autoSaveWhenNoErrors:a,isOutOfWorkspace:o,isShortAutoSaveDelay:l}}toResource(e){return e instanceof dn?$e.getOriginalUri(e,{supportSideBySide:Y.PRIMARY}):e}hasShortAutoSaveDelay(e){const t=this.toResource(e);return t&&this.autoSaveAfterShortDelayOverrides.has(t)?!0:this.getAutoSaveConfiguration(t).isShortAutoSaveDelay?!t||!this.autoSaveDisabledOverrides.has(t):!1}getAutoSaveMode(e,t){const i=this.toResource(e);if(i&&this.autoSaveAfterShortDelayOverrides.has(i))return{mode:T.AFTER_SHORT_DELAY};if(i&&this.autoSaveDisabledOverrides.has(i))return{mode:T.OFF,reason:re.DISABLED};const r=this.getAutoSaveConfiguration(i);if(typeof r.autoSave>"u")return{mode:T.OFF,reason:re.SETTINGS};if(typeof t=="number"&&(r.autoSave==="afterDelay"&&t!==U.AUTO||r.autoSave==="onFocusChange"&&t!==U.FOCUS_CHANGE&&t!==U.WINDOW_CHANGE||r.autoSave==="onWindowChange"&&t!==U.WINDOW_CHANGE))return{mode:T.OFF,reason:re.SETTINGS};if(i){if(r.autoSaveWorkspaceFilesOnly&&r.isOutOfWorkspace)return{mode:T.OFF,reason:re.OUT_OF_WORKSPACE};if(r.autoSaveWhenNoErrors&&this.markerService.read({resource:i,take:1,severities:fs.Error}).length>0)return{mode:T.OFF,reason:re.ERRORS}}switch(r.autoSave){case"afterDelay":return typeof r.autoSaveDelay=="number"&&r.autoSaveDelay<=M.DEFAULT_AUTO_SAVE_DELAY?{mode:r.autoSaveWhenNoErrors?T.AFTER_LONG_DELAY:T.AFTER_SHORT_DELAY}:{mode:T.AFTER_LONG_DELAY};case"onFocusChange":return{mode:T.ON_FOCUS_CHANGE};case"onWindowChange":return{mode:T.ON_WINDOW_CHANGE}}}async toggleAutoSave(){const e=this.configurationService.getValue("files.autoSave");let t;return[p.AFTER_DELAY,p.ON_FOCUS_CHANGE,p.ON_WINDOW_CHANGE].some(i=>i===e)?t=p.OFF:t=p.AFTER_DELAY,this.configurationService.updateValue("files.autoSave",t)}enableAutoSaveAfterShortDelay(e){const t=this.toResource(e);if(!t)return b.None;const i=this.autoSaveAfterShortDelayOverrides.get(t)??0;return this.autoSaveAfterShortDelayOverrides.set(t,i+1),Z(()=>{const r=this.autoSaveAfterShortDelayOverrides.get(t)??0;r<=1?this.autoSaveAfterShortDelayOverrides.delete(t):this.autoSaveAfterShortDelayOverrides.set(t,r-1)})}disableAutoSave(e){const t=this.toResource(e);if(!t)return b.None;const i=this.autoSaveDisabledOverrides.get(t)??0;return this.autoSaveDisabledOverrides.set(t,i+1),i===0&&this._onDidChangeAutoSaveDisabled.fire(t),Z(()=>{const r=this.autoSaveDisabledOverrides.get(t)??0;r<=1?(this.autoSaveDisabledOverrides.delete(t),this._onDidChangeAutoSaveDisabled.fire(t)):this.autoSaveDisabledOverrides.set(t,r-1)})}get isHotExitEnabled(){return this.contextService.getWorkspace().transient?!1:this.currentHotExitConfiguration!==I.OFF}get hotExitConfiguration(){return this.currentHotExitConfiguration}preventSaveConflicts(e,t){return this.configurationService.getValue("files.saveConflictResolution",{resource:e,overrideIdentifier:t})!=="overwriteFileOnDisk"}},M=X,X.DEFAULT_AUTO_SAVE_MODE=gt?p.AFTER_DELAY:p.OFF,X.DEFAULT_AUTO_SAVE_DELAY=1e3,X.READONLY_MESSAGES={providerReadonly:{value:d(12265,"Editor is read-only because the file system of the file is read-only."),isTrusted:!0},sessionReadonly:{value:d(12266,"Editor is read-only because the file was set read-only in this session. [Click here](command:{0}) to set writeable.","workbench.action.files.setActiveEditorWriteableInSession"),isTrusted:!0},configuredReadonly:{value:d(12267,"Editor is read-only because the file was set read-only via settings. [Click here](command:{0}) to configure or [toggle for this session](command:{1}).",`workbench.action.openSettings?${encodeURIComponent('["files.readonly"]')}`,"workbench.action.files.toggleActiveEditorReadonlyInSession"),isTrusted:!0},fileLocked:{value:d(12268,"Editor is read-only because of file permissions. [Click here](command:{0}) to set writeable anyway.","workbench.action.files.setActiveEditorWriteableInSession"),isTrusted:!0},fileReadonly:{value:d(12269,"Editor is read-only because the file is read-only."),isTrusted:!0}},X);xt=M=W([h(0,gs),h(1,ki),h(2,zt),h(3,ys),h(4,Ue),h(5,pe),h(6,vs),h(7,Ne)],xt);class hn{isSupported(e){return!1}async writeFileElevated(e,t,i){throw new Error("Unsupported")}}const ir=Ie.as(Es.Configuration),un=Ss?{type:"string",scope:m.APPLICATION,enum:[I.OFF,I.ON_EXIT,I.ON_EXIT_AND_WINDOW_CLOSE],default:I.ON_EXIT,markdownEnumDescriptions:[d(6953,"Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes."),d(6954,"Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu). All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`"),d(6955,"Hot exit will be triggered when the last window is closed on Windows/Linux or when the `workbench.action.quit` command is triggered (command palette, keybinding, menu), and also for any window with a folder opened regardless of whether it's the last window. All windows without folders opened will be restored upon next launch. A list of previously opened windows with unsaved files can be accessed via `File > Open Recent > More...`")],markdownDescription:d(6956,"[Hot Exit](https://aka.ms/vscode-hot-exit) controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",I.ON_EXIT,I.ON_EXIT_AND_WINDOW_CLOSE)}:{type:"string",scope:m.APPLICATION,enum:[I.OFF,I.ON_EXIT_AND_WINDOW_CLOSE],default:I.ON_EXIT_AND_WINDOW_CLOSE,markdownEnumDescriptions:[d(6953,"Disable hot exit. A prompt will show when attempting to close a window with editors that have unsaved changes."),d(6957,"Hot exit will be triggered when the browser quits or the window or tab is closed.")],markdownDescription:d(6956,"[Hot Exit](https://aka.ms/vscode-hot-exit) controls whether unsaved files are remembered between sessions, allowing the save prompt when exiting the editor to be skipped.",I.ON_EXIT,I.ON_EXIT_AND_WINDOW_CLOSE)};ir.registerConfiguration({id:"files",order:9,title:d(6958,"Files"),type:"object",properties:{[ps]:{type:"object",markdownDescription:d(6959,"Configure [glob patterns](https://aka.ms/vscode-glob-patterns) for excluding files and folders. For example, the File Explorer decides which files and folders to show or hide based on this setting. Refer to the `#search.exclude#` setting to define search-specific excludes. Refer to the `#explorer.excludeGitIgnore#` setting for ignoring files based on your `.gitignore`."),default:{"**/.git":!0,"**/.svn":!0,"**/.hg":!0,"**/.DS_Store":!0,"**/Thumbs.db":!0,...gt?{"**/*.crswap":!0}:void 0},scope:m.RESOURCE,additionalProperties:{anyOf:[{type:"boolean",enum:[!0,!1],enumDescriptions:[d(6960,"Enable the pattern."),d(6961,"Disable the pattern.")],description:d(6962,"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern.")},{type:"object",properties:{when:{type:"string",pattern:"\\w*\\$\\(basename\\)\\w*",default:"$(basename).ext",markdownDescription:d(6963,"Additional check on the siblings of a matching file. Use \\$(basename) as variable for the matching file name.")}}}]}},[ms]:{type:"object",markdownDescription:d(6964,'Configure [glob patterns](https://aka.ms/vscode-glob-patterns) of file associations to languages (for example `"*.extension": "html"`). Patterns will match on the absolute path of a file if they contain a path separator and will match on the name of the file otherwise. These have precedence over the default associations of the languages installed.'),additionalProperties:{type:"string"}},"files.encoding":{type:"string",enum:Object.keys(J),default:"utf8",description:d(6965,"The default character set encoding to use when reading and writing files. This setting can also be configured per language."),scope:m.LANGUAGE_OVERRIDABLE,enumDescriptions:Object.keys(J).map(n=>J[n].labelLong),enumItemLabels:Object.keys(J).map(n=>J[n].labelLong)},"files.autoGuessEncoding":{type:"boolean",default:!1,markdownDescription:d(6966,"When enabled, the editor will attempt to guess the character set encoding when opening files. This setting can also be configured per language. Note, this setting is not respected by text search. Only {0} is respected.","`#files.encoding#`"),scope:m.LANGUAGE_OVERRIDABLE},"files.candidateGuessEncodings":{type:"array",items:{type:"string",enum:Object.keys(He),enumDescriptions:Object.keys(He).map(n=>He[n].labelLong)},default:[],markdownDescription:d(6967,"List of character set encodings that the editor should attempt to guess in the order they are listed. In case it cannot be determined, {0} is respected","`#files.encoding#`"),scope:m.LANGUAGE_OVERRIDABLE},"files.eol":{type:"string",enum:[`
`,`\r
`,"auto"],enumDescriptions:[d(6968,"LF"),d(6969,"CRLF"),d(6970,"Uses operating system specific end of line character.")],default:"auto",description:d(6971,"The default end of line character."),scope:m.LANGUAGE_OVERRIDABLE},"files.enableTrash":{type:"boolean",default:!0,description:d(6972,"Moves files/folders to the OS trash (recycle bin on Windows) when deleting. Disabling this will delete files/folders permanently.")},"files.trimTrailingWhitespace":{type:"boolean",default:!1,description:d(6973,"When enabled, will trim trailing whitespace when saving a file."),scope:m.LANGUAGE_OVERRIDABLE},"files.trimTrailingWhitespaceInRegexAndStrings":{type:"boolean",default:!0,description:d(6974,"When enabled, trailing whitespace will be removed from multiline strings and regexes will be removed on save or when executing 'editor.action.trimTrailingWhitespace'. This can cause whitespace to not be trimmed from lines when there isn't up-to-date token information."),scope:m.LANGUAGE_OVERRIDABLE},"files.insertFinalNewline":{type:"boolean",default:!1,description:d(6975,"When enabled, insert a final new line at the end of the file when saving it."),scope:m.LANGUAGE_OVERRIDABLE},"files.trimFinalNewlines":{type:"boolean",default:!1,description:d(6976,"When enabled, will trim all new lines after the final new line at the end of the file when saving it."),scope:m.LANGUAGE_OVERRIDABLE},"files.autoSave":{type:"string",enum:[p.OFF,p.AFTER_DELAY,p.ON_FOCUS_CHANGE,p.ON_WINDOW_CHANGE],markdownEnumDescriptions:[d(6977,"An editor with changes is never automatically saved."),d(6978,"An editor with changes is automatically saved after the configured `#files.autoSaveDelay#`."),d(6979,"An editor with changes is automatically saved when the editor loses focus."),d(6980,"An editor with changes is automatically saved when the window loses focus.")],default:gt?p.AFTER_DELAY:p.OFF,markdownDescription:d(6981,"Controls [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors that have unsaved changes.",p.OFF,p.AFTER_DELAY,p.ON_FOCUS_CHANGE,p.ON_WINDOW_CHANGE,p.AFTER_DELAY),scope:m.LANGUAGE_OVERRIDABLE},"files.autoSaveDelay":{type:"number",default:1e3,minimum:0,markdownDescription:d(6982,"Controls the delay in milliseconds after which an editor with unsaved changes is saved automatically. Only applies when `#files.autoSave#` is set to `{0}`.",p.AFTER_DELAY),scope:m.LANGUAGE_OVERRIDABLE},"files.autoSaveWorkspaceFilesOnly":{type:"boolean",default:!1,markdownDescription:d(6983,"When enabled, will limit [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors to files that are inside the opened workspace. Only applies when {0} is enabled.","`#files.autoSave#`"),scope:m.LANGUAGE_OVERRIDABLE},"files.autoSaveWhenNoErrors":{type:"boolean",default:!1,markdownDescription:d(6984,"When enabled, will limit [auto save](https://code.visualstudio.com/docs/editor/codebasics#_save-auto-save) of editors to files that have no errors reported in them at the time the auto save is triggered. Only applies when {0} is enabled.","`#files.autoSave#`"),scope:m.LANGUAGE_OVERRIDABLE},"files.watcherExclude":{type:"object",patternProperties:{".*":{type:"boolean"}},default:{"**/.git/objects/**":!0,"**/.git/subtree-cache/**":!0,"**/.hg/store/**":!0},markdownDescription:d(6985,"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from file watching. Paths can either be relative to the watched folder or absolute. Glob patterns are matched relative from the watched folder. When you experience the file watcher process consuming a lot of CPU, make sure to exclude large folders that are of less interest (such as build output folders)."),scope:m.RESOURCE},"files.watcherInclude":{type:"array",items:{type:"string"},default:[],description:d(6986,"Configure extra paths to watch for changes inside the workspace. By default, all workspace folders will be watched recursively, except for folders that are symbolic links. You can explicitly add absolute or relative paths to support watching folders that are symbolic links. Relative paths will be resolved to an absolute path using the currently opened workspace."),scope:m.RESOURCE},"files.hotExit":un,"files.defaultLanguage":{type:"string",markdownDescription:d(6987,"The default language identifier that is assigned to new files. If configured to `${activeEditorLanguage}`, will use the language identifier of the currently active text editor if any.")},[Wi]:{type:"object",patternProperties:{".*":{type:"boolean"}},default:{},markdownDescription:d(6988,"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to mark as read-only. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. You can exclude matching paths via the `#files.readonlyExclude#` setting. Files from readonly file system providers will always be read-only independent of this setting."),scope:m.RESOURCE},[Bi]:{type:"object",patternProperties:{".*":{type:"boolean"}},default:{},markdownDescription:d(6989,"Configure paths or [glob patterns](https://aka.ms/vscode-glob-patterns) to exclude from being marked as read-only if they match as a result of the `#files.readonlyInclude#` setting. Glob patterns are always evaluated relative to the path of the workspace folder unless they are absolute paths. Files from readonly file system providers will always be read-only independent of this setting."),scope:m.RESOURCE},[ws]:{type:"boolean",markdownDescription:d(6990,"Marks files as read-only when their file permissions indicate as such. This can be overridden via `#files.readonlyInclude#` and `#files.readonlyExclude#` settings."),default:!1},"files.restoreUndoStack":{type:"boolean",description:d(6991,"Restore the undo stack when a file is reopened."),default:!0},"files.saveConflictResolution":{type:"string",enum:["askUser","overwriteFileOnDisk"],enumDescriptions:[d(6992,"Will refuse to save and ask for resolving the save conflict manually."),d(6993,"Will resolve the save conflict by overwriting the file on disk with the changes in the editor.")],description:d(6994,"A save conflict can occur when a file is saved to disk that was changed by another program in the meantime. To prevent data loss, the user is asked to compare the changes in the editor with the version on disk. This setting should only be changed if you frequently encounter save conflict errors and may result in data loss if used without caution."),default:"askUser",scope:m.LANGUAGE_OVERRIDABLE},"files.dialog.defaultPath":{type:"string",pattern:"^((\\/|\\\\\\\\|[a-zA-Z]:\\\\).*)?$",patternErrorMessage:d(6995,"Default path for file dialogs must be an absolute path (e.g. C:\\\\myFolder or /myFolder)."),description:d(6996,"Default path for file dialogs, overriding user's home path. Only used in the absence of a context-specific path, such as most recently opened file or folder."),scope:m.MACHINE},"files.simpleDialog.enable":{type:"boolean",description:d(6997,"Enables the simple file dialog for opening and saving files and folders. The simple file dialog replaces the system file dialog when enabled."),default:!1},"files.participants.timeout":{type:"number",default:6e4,markdownDescription:d(6998,"Timeout in milliseconds after which file participants for create, rename, and delete are cancelled. Use `0` to disable participants.")}}});ir.registerConfiguration({...Ds,properties:{"editor.formatOnSave":{type:"boolean",markdownDescription:d(6999,"Format a file on save. A formatter must be available and the editor must not be shutting down. When {0} is set to `afterDelay`, the file will only be formatted when saved explicitly.","`#files.autoSave#`"),scope:m.LANGUAGE_OVERRIDABLE},"editor.formatOnSaveMode":{type:"string",default:"file",enum:["file","modifications","modificationsIfAvailable"],enumDescriptions:[d(7e3,"Format the whole file."),d(7001,"Format modifications (requires source control)."),d(7002,"Will attempt to format modifications only (requires source control). If source control can't be used, then the whole file will be formatted.")],markdownDescription:d(7003,"Controls if format on save formats the whole file or only modifications. Only applies when `#editor.formatOnSave#` is enabled."),scope:m.LANGUAGE_OVERRIDABLE}}});class _e{constructor(){this.type=R.Directory,this._onDidChange=new f,this.onDidChange=this._onDidChange.event,this._onDidDelete=new f,this.onDidDelete=this._onDidDelete.event,this.ctime=Date.now(),this.mtime=Date.now(),this.type=R.Directory,this.entries=new Map}async stats(){return{ctime:this.ctime,mtime:this.mtime,size:0,type:R.Directory}}delete(){this._onDidDelete.fire()}addChild(e,t){this.entries.set(e,t),this._onDidChange.fire();const i={dispose:()=>{this.deleteChild(e)}};return t.onDidDelete(()=>{i.dispose()}),i}deleteChild(e){return this.entries.delete(e)?(this.mtime=Date.now(),this._onDidChange.fire(),this.entries.size===0&&this.delete(),!0):!1}getChildren(e){return this.entries.get(e)}read(){return Array.from(this.entries.entries()).map(([e,t])=>[e,t.type])}}class rr{constructor(e,t){this.uri=e,this.readonly=t,this.type=R.File,this._onDidChange=new f,this.onDidChange=this._onDidChange.event,this._onDidDelete=new f,this.onDidDelete=this._onDidDelete.event,this.ctime=Date.now(),this.mtime=Date.now(),this.onDidChange(()=>{this.mtime=Date.now()})}async stats(){return{ctime:this.ctime,mtime:this.mtime,size:await this.getSize(),type:R.File,permissions:this.readonly?Ee.Readonly:void 0}}async delete(){if(this.readonly)throw E("Not allowed",y.FileWriteLocked);this._onDidDelete.fire()}}class Vn extends rr{constructor(e,t,i){super(e,!0),this.url=t,this.metadata=i}async fetch(){var t;const e=await fetch(this.url,{headers:((t=this.metadata)==null?void 0:t.mimeType)!=null?{Accept:this.metadata.mimeType}:{}});if(e.status!==200)throw new Error(e.statusText);return e}async getSize(){var e;return((e=this.metadata)==null?void 0:e.size)??0}async read(){const e=await this.fetch();return new Uint8Array(await e.arrayBuffer())}async readStream(){return(await this.fetch()).body}write(){throw E("Not allowed",y.FileWriteLocked)}async delete(){throw E("Not allowed",y.FileWriteLocked)}}const fn=new TextEncoder;function gn(n){return n instanceof Uint8Array?n:fn.encode(n)}class yn extends b{constructor(e){super(),this.memoryFdCounter=0,this.fdMemory=new Map,this.onDidChangeCapabilities=Gt.None,this._onDidChangeFile=new f,this.onDidChangeFile=this._onDidChangeFile.event,this._bufferedChanges=[],this.rootByAuthority=new Map,this.capabilities=w.FileReadWrite|w.PathCaseSensitive|w.FileReadStream,e&&(this.capabilities|=w.Readonly)}async open(e){const t=await this.readFile(e),i=this.memoryFdCounter++;return this.fdMemory.set(i,t),i}async close(e){this.fdMemory.delete(e)}async read(e,t,i,r,s){const a=this.fdMemory.get(e);if(a==null)throw E("No file with that descriptor open",y.Unavailable);const o=v.wrap(a).slice(t,t+s);return i.set(o.buffer,r),o.byteLength}write(e,t,i,r,s){const a=this.fdMemory.get(e);if(a==null)throw E("No file with that descriptor open",y.Unavailable);const o=v.wrap(i).slice(r,r+s);return a.set(o.buffer,t),Promise.resolve(o.byteLength)}_lookupRoot(e){const t=e.toLowerCase();let i=this.rootByAuthority.get(t);return i==null&&(i=new _e,this.rootByAuthority.set(t,i)),i}_lookup(e,t){const i=e.path.split("/");let s=this._lookupRoot(e.authority);for(const a of i){if(a.length===0)continue;let o;if(s instanceof _e&&(o=s.getChildren(a)),o==null){if(t)return;throw E("file not found",y.FileNotFound)}s=o}return s}_lookupAsDirectory(e,t){const i=this._lookup(e,t);if(i instanceof _e)return i;throw E("file not a directory",y.FileNotADirectory)}_lookupAsFile(e,t){const i=this._lookup(e,t);if(i!=null&&i.type===R.File)return i;throw E("file is a directory",y.FileIsADirectory)}registerFile(e){const t=e.uri.path.split("/");let i=this._lookupRoot(e.uri.authority),r=e.uri.with({path:"/"});for(const o of t.slice(0,-1)){if(o==="")continue;r=Se.joinPath(r,o);let l=i.getChildren(o);if(l==null&&(l=this.mkdirSync(r)),!(l instanceof _e))throw new Error(`file '${r.toString()}' is not a directory`);i=l}const s=t[t.length-1];if(i.getChildren(s)!=null)throw new Error(`file '${Se.joinPath(r,s).toString()}/' already exists`);const a=new de;return a.add(Z(()=>{this._fireSoon({resource:e.uri,type:C.DELETED})})),a.add(e.onDidDelete(()=>{a.dispose()})),a.add(e.onDidChange(()=>{this._fireSoon({resource:e.uri,type:C.UPDATED})})),a.add(i.addChild(s,e)),this._fireSoon({resource:e.uri,type:C.ADDED}),a}async stat(e){return await this._lookup(e,!1).stats()}readdirSync(e){return this._lookupAsDirectory(e,!1).read()}async readdir(e){return this.readdirSync(e)}async readFile(e){return await this._lookupAsFile(e,!1).read()}readFileStream(e,t,i){const r=this._lookupAsFile(e,!1),s=Te(a=>v.concat(a.map(o=>v.wrap(o))).buffer,{highWaterMark:10});return(async()=>{try{if(r.readStream==null||typeof t.length=="number"||typeof t.position=="number"){let a=await r.read();(typeof t.position=="number"||typeof t.length=="number")&&(a=a.slice(t.position??0,t.length)),s.end(a)}else{const a=(await r.readStream()).getReader();let o=await a.read();for(;!o.done&&!(i.isCancellationRequested||(await s.write(o.value),i.isCancellationRequested));)o=await a.read();s.end(void 0)}}catch(a){s.error(E(a,y.Unknown)),s.end()}})(),s}watch(){return b.None}async writeFile(e,t,i){const r=this._lookup(e,!0);if(r!=null&&!(r instanceof rr))throw E("file is directory",y.FileIsADirectory);if(r==null)throw E("file not found",y.FileNotFound);if(!i.overwrite)throw E("file exists already",y.FileExists);await r.write(t)}async rename(){throw E("Not allowed",y.NoPermissions)}mkdirSync(e){if(this._lookup(e,!0)!=null)throw E("file exists already",y.FileExists);const t=k(e),i=be(e),r=this._lookupAsDirectory(i,!1),s=new _e,a=new de;return a.add(s.onDidDelete(()=>{a.dispose(),this._fireSoon({resource:e,type:C.DELETED})})),a.add(s.onDidChange(()=>{this._fireSoon({resource:e,type:C.UPDATED})})),r.addChild(t,s),this._fireSoon({type:C.ADDED,resource:e}),s}async mkdir(){throw E("Can' create a directory",y.NoPermissions)}deleteSync(e){const t=this._lookup(e,!0);if(t==null)throw E("Not found",y.FileNotFound);if(t.type===R.Directory)throw E("Can't delete a directory",y.NoPermissions);t.delete()}async delete(e){this.deleteSync(e)}_fireSoon(...e){this._bufferedChanges.push(...e),this._fireSoonHandle!=null&&(clearTimeout(this._fireSoonHandle),this._fireSoonHandle=void 0),this._fireSoonHandle=window.setTimeout(()=>{this._onDidChangeFile.fire(this._bufferedChanges),this._bufferedChanges.length=0},5)}}function wi(n){return n.status==="fulfilled"}class sr{constructor(){this.providers=[],this.onDidChangeCapabilities=Gt.None,this._onDidChangeFile=new f,this.onDidChangeFile=this._onDidChangeFile.event,this._onDidChangeOverlays=new f,this.onDidChangeOverlays=this._onDidChangeOverlays.event,this.capabilities=w.FileReadWrite|w.PathCaseSensitive|w.FileReadStream}register(e,t){const i={priority:e,provider:t};this.providers.push(i),this.providers.sort((s,a)=>a.priority-s.priority);const r=new de;return r.add(t.onDidChangeFile(s=>{this._onDidChangeFile.fire(s)})),r.add({dispose:()=>{const s=this.providers.indexOf(i);s>=0&&(this.providers.splice(s,1),this._onDidChangeOverlays.fire())}}),this._onDidChangeOverlays.fire(),r}get delegates(){return this.providers.map(({provider:e})=>e)}async readFromDelegates(e,t){if(this.delegates.length===0)throw E("No delegate",y.Unavailable);let i;for(const r of this.delegates){if(t!=null&&t.isCancellationRequested)throw new Error("Cancelled");try{return await e(r)}catch(s){if(i??(i=s),s instanceof yt&&[y.NoPermissions,y.FileNotFound,y.Unavailable].includes(s.code))continue;throw s}}throw i}async writeToDelegates(e){if(this.delegates.length===0)throw E("No delegate",y.Unavailable);for(const t of this.delegates)if(!((t.capabilities&w.Readonly)>0))try{return await e(t)}catch(i){if(i instanceof yt&&[y.NoPermissions,y.FileNotFound,y.Unavailable].includes(i.code))continue;throw i}throw E("Not allowed",y.NoPermissions)}async stat(e){return await this.readFromDelegates(async t=>{const i=await t.stat(e),r=(t.capabilities&w.Readonly)>0;return{...i,permissions:i.permissions??(r?Ee.Readonly:void 0)}})}async readFile(e){return await this.readFromDelegates(t=>t.readFile(e))}readFileStream(e,t,i){const r=Te(s=>v.concat(s.map(a=>v.wrap(a))).buffer);return this.readFromDelegates(async s=>{if(ke(s)){const a=s.readFileStream(e,t,i);await new Promise((o,l)=>{let c=!1;Pt(a,{onData(u){c=!0,r.write(u)},onEnd(){r.end(),o()},onError(u){c?r.error(u):l(u)}},i)})}else{let a=await this.readFile(e);return(typeof t.position=="number"||typeof t.length=="number")&&(a=a.slice(t.position??0,t.length)),r.end(a)}},i).catch(s=>{r.error(s)}),r}async readdir(e){const t=await Promise.allSettled(this.delegates.map(async i=>await i.readdir(e)));if(!t.some(wi))throw t[0].reason;return Object.entries(Object.fromEntries(t.filter(wi).map(i=>i.value).flat()))}watch(e,t){const i=new de;for(const r of this.delegates)i.add(r.watch(e,t));return i}async writeFile(e,t,i){await this.writeToDelegates(async r=>{let s;try{s=await r.stat(e)}catch{}if(s!=null&&((s.permissions??0)&Ee.Readonly)>0)throw E("Not allowed",y.NoPermissions);return await r.writeFile(e,t,i)})}async mkdir(e){await this.writeToDelegates(t=>t.mkdir(e))}async delete(e,t){await this.writeToDelegates(i=>i.delete(e,t))}async rename(e,t,i){await this.writeToDelegates(r=>r.rename(e,t,i))}}class vn extends Xe{async writeFile(e,t,i){return await Ki(Se,this,Se.dirname(e)),await super.writeFile(e,t,i)}}const nr=new sr;nr.register(0,new vn);const ar=new yn(!0),or=new Xe;or.mkdir(V.from({scheme:N.vscodeUserData,path:"/User/"}));var Nt;(function(n){n.extensionFile="extension-file"})(Nt||(Nt={}));const lr={[Nt.extensionFile]:ar,[Fs.scheme]:new Xe,[N.vscodeUserData]:or,[N.tmp]:new Xe,[N.file]:nr};class dr extends mt{constructor(e){super(e);for(const[t,i]of Object.entries(lr)){let r=this.registerProvider(t,i);i instanceof sr&&i.onDidChangeOverlays(()=>{r.dispose(),r=this.registerProvider(t,i)})}}}dr.$di$dependencies=[];const cr=new Hs;Ps(async n=>{cr.logger=n.get(me)});function zn(){return{[pe.toString()]:new Pe(dr,[cr],!0),[Wt.toString()]:new Pe(Tt,[],!0),[Ke.toString()]:new Pe(xt,[],!0),[Yt.toString()]:new Pe(hn,[],!0)}}function Yn(n){return ar.registerFile(n)}async function qn(n,e,t){Ms();const i=lr[n.scheme];if(i==null||i.writeFile==null)throw new Error(`${n.scheme} provider doesn't exist or doesn't support writing files`);try{await i.stat(n);return}catch(r){(!(r instanceof yt)||r.code!==y.FileNotFound)&&console.error("Unable to check if file exists",r)}await i.writeFile(n,gn(e),{atomic:!1,create:!0,overwrite:!1,unlock:!1,...t})}export{je as $,Xe as A,Be as B,Nt as C,wn as D,St as E,ci as F,ui as G,lt as H,As as I,Me as J,P as K,_n as L,bs as M,mn as N,Gi as O,Fn as P,di as Q,Vn as R,U as S,hi as T,li as U,vt as V,yi as W,Dn as X,pn as Y,Oe as Z,bn as _,xn as a,On as a0,In as a1,A as a2,pt as a3,T as a4,An as a5,Ln as a6,ve as a7,fi as a8,Qe as a9,cn as aa,Rn as ab,Dt as ac,Ts as ad,Et as ae,er as af,qn as ag,Ps as ah,Rt as ai,Ct as aj,Hs as ak,Ns as b,qt as c,Vi as d,zi as e,Yt as f,zn as g,Pn as h,ks as i,$e as j,Y as k,Cn as l,Ms as m,$i as n,Nn as o,Tn as p,Us as q,Un as r,Mn as s,Ls as t,vi as u,Yn as v,kn as w,dn as x,ye as y,gi as z};
//# sourceMappingURL=DMTBZmPI.js.map
