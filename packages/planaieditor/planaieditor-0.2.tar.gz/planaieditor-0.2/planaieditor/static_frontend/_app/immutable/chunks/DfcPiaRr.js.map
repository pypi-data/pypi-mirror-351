{"version":3,"file":"DfcPiaRr.js","sources":["../../../../../../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languages/languageConfiguration.js","../../../../../../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/workbench/services/languageStatus/common/languageStatusService.service.js","../../../../../../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languageSelector.js","../../../../../../node_modules/@codingame/monaco-vscode-api/vscode/src/vs/editor/common/languageFeatureRegistry.js"],"sourcesContent":["\nimport { CharCode } from '../../../base/common/charCode.js';\nimport { StandardTokenType } from '../encodedTokenAttributes.js';\n\nvar IndentAction;\n(function (IndentAction) {\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {}));\nclass StandardAutoClosingPairConditional {\n    constructor(source) {\n        this._neutralCharacter = null;\n        this._neutralCharacterSearched = false;\n        this.open = source.open;\n        this.close = source.close;\n        this._inString = true;\n        this._inComment = true;\n        this._inRegEx = true;\n        if (Array.isArray(source.notIn)) {\n            for (let i = 0, len = source.notIn.length; i < len; i++) {\n                const notIn = source.notIn[i];\n                switch (notIn) {\n                    case 'string':\n                        this._inString = false;\n                        break;\n                    case 'comment':\n                        this._inComment = false;\n                        break;\n                    case 'regex':\n                        this._inRegEx = false;\n                        break;\n                }\n            }\n        }\n    }\n    isOK(standardToken) {\n        switch (standardToken) {\n            case StandardTokenType.Other:\n                return true;\n            case StandardTokenType.Comment:\n                return this._inComment;\n            case StandardTokenType.String:\n                return this._inString;\n            case StandardTokenType.RegEx:\n                return this._inRegEx;\n        }\n    }\n    shouldAutoClose(context, column) {\n        if (context.getTokenCount() === 0) {\n            return true;\n        }\n        const tokenIndex = context.findTokenIndexAtOffset(column - 2);\n        const standardTokenType = context.getStandardTokenType(tokenIndex);\n        return this.isOK(standardTokenType);\n    }\n    _findNeutralCharacterInRange(fromCharCode, toCharCode) {\n        for (let charCode = fromCharCode; charCode <= toCharCode; charCode++) {\n            const character = String.fromCharCode(charCode);\n            if (!this.open.includes(character) && !this.close.includes(character)) {\n                return character;\n            }\n        }\n        return null;\n    }\n    findNeutralCharacter() {\n        if (!this._neutralCharacterSearched) {\n            this._neutralCharacterSearched = true;\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(CharCode.Digit0, CharCode.Digit9);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(CharCode.a, CharCode.z);\n            }\n            if (!this._neutralCharacter) {\n                this._neutralCharacter = this._findNeutralCharacterInRange(CharCode.A, CharCode.Z);\n            }\n        }\n        return this._neutralCharacter;\n    }\n}\nclass AutoClosingPairs {\n    constructor(autoClosingPairs) {\n        this.autoClosingPairsOpenByStart = ( new Map());\n        this.autoClosingPairsOpenByEnd = ( new Map());\n        this.autoClosingPairsCloseByStart = ( new Map());\n        this.autoClosingPairsCloseByEnd = ( new Map());\n        this.autoClosingPairsCloseSingleChar = ( new Map());\n        for (const pair of autoClosingPairs) {\n            appendEntry(this.autoClosingPairsOpenByStart, pair.open.charAt(0), pair);\n            appendEntry(this.autoClosingPairsOpenByEnd, pair.open.charAt(pair.open.length - 1), pair);\n            appendEntry(this.autoClosingPairsCloseByStart, pair.close.charAt(0), pair);\n            appendEntry(this.autoClosingPairsCloseByEnd, pair.close.charAt(pair.close.length - 1), pair);\n            if (pair.close.length === 1 && pair.open.length === 1) {\n                appendEntry(this.autoClosingPairsCloseSingleChar, pair.close, pair);\n            }\n        }\n    }\n}\nfunction appendEntry(target, key, value) {\n    if (( target.has(key))) {\n        target.get(key).push(value);\n    }\n    else {\n        target.set(key, [value]);\n    }\n}\n\nexport { AutoClosingPairs, IndentAction, StandardAutoClosingPairConditional };\n","\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\n\nconst ILanguageStatusService = ( createDecorator('ILanguageStatusService'));\n\nexport { ILanguageStatusService };\n","\nimport { match } from '../../base/common/glob.js';\nimport { normalize } from '../../base/common/path.js';\n\nfunction score(selector, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType) {\n    if (Array.isArray(selector)) {\n        let ret = 0;\n        for (const filter of selector) {\n            const value = score(filter, candidateUri, candidateLanguage, candidateIsSynchronized, candidateNotebookUri, candidateNotebookType);\n            if (value === 10) {\n                return value;\n            }\n            if (value > ret) {\n                ret = value;\n            }\n        }\n        return ret;\n    }\n    else if (typeof selector === 'string') {\n        if (!candidateIsSynchronized) {\n            return 0;\n        }\n        if (selector === '*') {\n            return 5;\n        }\n        else if (selector === candidateLanguage) {\n            return 10;\n        }\n        else {\n            return 0;\n        }\n    }\n    else if (selector) {\n        const { language, pattern, scheme, hasAccessToAllModels, notebookType } = selector;\n        if (!candidateIsSynchronized && !hasAccessToAllModels) {\n            return 0;\n        }\n        if (notebookType && candidateNotebookUri) {\n            candidateUri = candidateNotebookUri;\n        }\n        let ret = 0;\n        if (scheme) {\n            if (scheme === candidateUri.scheme) {\n                ret = 10;\n            }\n            else if (scheme === '*') {\n                ret = 5;\n            }\n            else {\n                return 0;\n            }\n        }\n        if (language) {\n            if (language === candidateLanguage) {\n                ret = 10;\n            }\n            else if (language === '*') {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (notebookType) {\n            if (notebookType === candidateNotebookType) {\n                ret = 10;\n            }\n            else if (notebookType === '*' && candidateNotebookType !== undefined) {\n                ret = Math.max(ret, 5);\n            }\n            else {\n                return 0;\n            }\n        }\n        if (pattern) {\n            let normalizedPattern;\n            if (typeof pattern === 'string') {\n                normalizedPattern = pattern;\n            }\n            else {\n                normalizedPattern = { ...pattern, base: normalize(pattern.base) };\n            }\n            if (normalizedPattern === candidateUri.fsPath || match(normalizedPattern, candidateUri.fsPath)) {\n                ret = 10;\n            }\n            else {\n                return 0;\n            }\n        }\n        return ret;\n    }\n    else {\n        return 0;\n    }\n}\nfunction targetsNotebooks(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return ( selector.some(targetsNotebooks));\n    }\n    else {\n        return !!selector.notebookType;\n    }\n}\n\nexport { score, targetsNotebooks };\n","\nimport { Emitter } from '../../base/common/event.js';\nimport { toDisposable } from '../../base/common/lifecycle.js';\nimport { shouldSynchronizeModel } from './model.js';\nimport { score } from './languageSelector.js';\n\nfunction isExclusive(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    else if (Array.isArray(selector)) {\n        return selector.every(isExclusive);\n    }\n    else {\n        return !!selector.exclusive;\n    }\n}\nclass MatchCandidate {\n    constructor(uri, languageId, notebookUri, notebookType, recursive) {\n        this.uri = uri;\n        this.languageId = languageId;\n        this.notebookUri = notebookUri;\n        this.notebookType = notebookType;\n        this.recursive = recursive;\n    }\n    equals(other) {\n        return this.notebookType === other.notebookType\n            && this.languageId === other.languageId\n            && ( this.uri.toString()) === ( other.uri.toString())\n            && this.notebookUri?.toString() === other.notebookUri?.toString()\n            && this.recursive === other.recursive;\n    }\n}\nclass LanguageFeatureRegistry {\n    constructor(_notebookInfoResolver) {\n        this._notebookInfoResolver = _notebookInfoResolver;\n        this._clock = 0;\n        this._entries = [];\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    register(selector, provider) {\n        let entry = {\n            selector,\n            provider,\n            _score: -1,\n            _time: this._clock++\n        };\n        this._entries.push(entry);\n        this._lastCandidate = undefined;\n        this._onDidChange.fire(this._entries.length);\n        return toDisposable(() => {\n            if (entry) {\n                const idx = this._entries.indexOf(entry);\n                if (idx >= 0) {\n                    this._entries.splice(idx, 1);\n                    this._lastCandidate = undefined;\n                    this._onDidChange.fire(this._entries.length);\n                    entry = undefined;\n                }\n            }\n        });\n    }\n    has(model) {\n        return this.all(model).length > 0;\n    }\n    all(model) {\n        if (!model) {\n            return [];\n        }\n        this._updateScores(model, false);\n        const result = [];\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                result.push(entry.provider);\n            }\n        }\n        return result;\n    }\n    allNoModel() {\n        return ( this._entries.map(entry => entry.provider));\n    }\n    ordered(model, recursive = false) {\n        const result = [];\n        this._orderedForEach(model, recursive, entry => result.push(entry.provider));\n        return result;\n    }\n    orderedGroups(model) {\n        const result = [];\n        let lastBucket;\n        let lastBucketScore;\n        this._orderedForEach(model, false, entry => {\n            if (lastBucket && lastBucketScore === entry._score) {\n                lastBucket.push(entry.provider);\n            }\n            else {\n                lastBucketScore = entry._score;\n                lastBucket = [entry.provider];\n                result.push(lastBucket);\n            }\n        });\n        return result;\n    }\n    _orderedForEach(model, recursive, callback) {\n        this._updateScores(model, recursive);\n        for (const entry of this._entries) {\n            if (entry._score > 0) {\n                callback(entry);\n            }\n        }\n    }\n    _updateScores(model, recursive) {\n        const notebookInfo = this._notebookInfoResolver?.(model.uri);\n        const candidate = notebookInfo\n            ? ( new MatchCandidate(\n            model.uri,\n            model.getLanguageId(),\n            notebookInfo.uri,\n            notebookInfo.type,\n            recursive\n        ))\n            : ( new MatchCandidate(model.uri, model.getLanguageId(), undefined, undefined, recursive));\n        if (this._lastCandidate?.equals(candidate)) {\n            return;\n        }\n        this._lastCandidate = candidate;\n        for (const entry of this._entries) {\n            entry._score = score(entry.selector, candidate.uri, candidate.languageId, shouldSynchronizeModel(model), candidate.notebookUri, candidate.notebookType);\n            if (isExclusive(entry.selector) && entry._score > 0) {\n                if (recursive) {\n                    entry._score = 0;\n                }\n                else {\n                    for (const entry of this._entries) {\n                        entry._score = 0;\n                    }\n                    entry._score = 1000;\n                    break;\n                }\n            }\n        }\n        this._entries.sort(LanguageFeatureRegistry._compareByScoreAndTime);\n    }\n    static _compareByScoreAndTime(a, b) {\n        if (a._score < b._score) {\n            return 1;\n        }\n        else if (a._score > b._score) {\n            return -1;\n        }\n        if (isBuiltinSelector(a.selector) && !isBuiltinSelector(b.selector)) {\n            return 1;\n        }\n        else if (!isBuiltinSelector(a.selector) && isBuiltinSelector(b.selector)) {\n            return -1;\n        }\n        if (a._time < b._time) {\n            return 1;\n        }\n        else if (a._time > b._time) {\n            return -1;\n        }\n        else {\n            return 0;\n        }\n    }\n}\nfunction isBuiltinSelector(selector) {\n    if (typeof selector === 'string') {\n        return false;\n    }\n    if (Array.isArray(selector)) {\n        return ( selector.some(isBuiltinSelector));\n    }\n    return Boolean(selector.isBuiltin);\n}\n\nexport { LanguageFeatureRegistry };\n"],"names":["IndentAction","StandardAutoClosingPairConditional","source","i","len","standardToken","StandardTokenType","context","column","tokenIndex","standardTokenType","fromCharCode","toCharCode","charCode","character","CharCode","AutoClosingPairs","autoClosingPairs","pair","appendEntry","target","key","value","ILanguageStatusService","createDecorator","score","selector","candidateUri","candidateLanguage","candidateIsSynchronized","candidateNotebookUri","candidateNotebookType","ret","filter","language","pattern","scheme","hasAccessToAllModels","notebookType","normalizedPattern","normalize","match","targetsNotebooks","isExclusive","MatchCandidate","uri","languageId","notebookUri","recursive","other","_a","_b","LanguageFeatureRegistry","_notebookInfoResolver","Emitter","provider","entry","toDisposable","idx","model","result","lastBucket","lastBucketScore","callback","notebookInfo","candidate","shouldSynchronizeModel","a","b","isBuiltinSelector"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}