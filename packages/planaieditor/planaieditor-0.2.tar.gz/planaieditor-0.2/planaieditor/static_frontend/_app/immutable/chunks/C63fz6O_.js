import{L as E,E as I,l as n,j as c,F as _,a as v,b as j,R as w,S as A,_ as C,d,e as k,I as D,f as F,D as $,i as M,g as l,M as P}from"./DRtkoAoK.js";import{E as R,I as G}from"./DMTBZmPI.js";const x=I.registerExtensionPoint({extensionPoint:"languages",jsonSchema:{description:n(12320,"Contributes language declarations."),type:"array",items:{type:"object",defaultSnippets:[{body:{id:"${1:languageId}",aliases:["${2:label}"],extensions:["${3:extension}"],configuration:"./language-configuration.json"}}],properties:{id:{description:n(12321,"ID of the language."),type:"string"},aliases:{description:n(12322,"Name aliases for the language."),type:"array",items:{type:"string"}},extensions:{description:n(12323,"File extensions associated to the language."),default:[".foo"],type:"array",items:{type:"string"}},filenames:{description:n(12324,"File names associated to the language."),type:"array",items:{type:"string"}},filenamePatterns:{description:n(12325,"File name glob patterns associated to the language."),type:"array",items:{type:"string"}},mimetypes:{description:n(12326,"Mime types associated to the language."),type:"array",items:{type:"string"}},firstLine:{description:n(12327,"A regular expression matching the first line of a file of the language."),type:"string"},configuration:{description:n(12328,"A relative path to a file containing configuration options for the language."),type:"string",default:"./language-configuration.json"},icon:{type:"object",description:n(12329,"A icon to use as file icon, if no icon theme provides one for the language."),properties:{light:{description:n(12330,"Icon path when a light theme is used"),type:"string"},dark:{description:n(12331,"Icon path when a dark theme is used"),type:"string"}}}}}},activationEventsGenerator:(s,e)=>{for(const t of s)t.id&&t.configuration&&e.push(`onLanguage:${t.id}`)}});class O extends ${constructor(){super(...arguments),this.type="table"}shouldRender(e){var t;return!!((t=e.contributes)!=null&&t.languages)}render(e){const t=e.contributes,p=(t==null?void 0:t.languages)||[],r=[];for(const i of p)L(i)&&r.push({id:i.id,name:(i.aliases||[])[0]||i.id,extensions:i.extensions||[],hasGrammar:!1,hasSnippets:!1});const o=M(r,i=>i.id);if(((t==null?void 0:t.grammars)||[]).forEach(i=>{if(!l(i.language))return;let a=o[i.language];a?a.hasGrammar=!0:(a={id:i.language,name:i.language,extensions:[],hasGrammar:!0,hasSnippets:!1},o[a.id]=a,r.push(a))}),((t==null?void 0:t.snippets)||[]).forEach(i=>{if(!l(i.language))return;let a=o[i.language];a?a.hasSnippets=!0:(a={id:i.language,name:i.language,extensions:[],hasGrammar:!1,hasSnippets:!0},o[a.id]=a,r.push(a))}),!r.length)return{data:{headers:[],rows:[]},dispose:()=>{}};const h=[n(12332,"ID"),n(12333,"Name"),n(12334,"File Extensions"),n(12335,"Grammar"),n(12336,"Snippets")],f=r.sort((i,a)=>i.id.localeCompare(a.id)).map(i=>[i.id,i.name,new P().appendMarkdown(`${i.extensions.map(a=>`\`${a}\``).join("&nbsp;")}`),i.hasGrammar?"✔︎":"—",i.hasSnippets?"✔︎":"—"]);return{data:{headers:h,rows:f},dispose:()=>{}}}}w.as(R.ExtensionFeaturesRegistry).registerExtensionFeature({id:"languages",label:n(12337,"Programming Languages"),access:{canToggle:!1},renderer:new A(O)});let S=class extends E{constructor(e,t,p,r){super(p.verbose||p.isExtensionDevelopment||!p.isBuilt),this.logService=r,this._configurationService=t,this._extensionService=e,x.setHandler(o=>{const y=[];for(let u=0,h=o.length;u<h;u++){const f=o[u];if(!Array.isArray(f.value)){f.collector.error(n(12338,"Invalid `contributes.{0}`. Expected an array.",x.name));continue}for(let i=0,a=f.value.length;i<a;i++){const g=f.value[i];if(L(g,f.collector)){let b;g.configuration&&(b=c(f.description.extensionLocation,g.configuration)),y.push({id:g.id,extensions:g.extensions,filenames:g.filenames,filenamePatterns:g.filenamePatterns,firstLine:g.firstLine,aliases:g.aliases,mimetypes:g.mimetypes,configuration:b,icon:g.icon&&{light:c(f.description.extensionLocation,g.icon.light),dark:c(f.description.extensionLocation,g.icon.dark)}})}}}this._registry.setDynamicLanguages(y)}),this.updateMime(),this._register(this._configurationService.onDidChangeConfiguration(o=>{o.affectsConfiguration(_)&&this.updateMime()})),this._extensionService.whenInstalledExtensionsRegistered().then(()=>{this.updateMime()}),this._register(this.onDidRequestRichLanguageFeatures(o=>{this._extensionService.activateByEvent(`onLanguage:${o}`),this._extensionService.activateByEvent("onLanguage")}))}updateMime(){var t;const e=this._configurationService.getValue();v(),(t=e.files)!=null&&t.associations&&Object.keys(e.files.associations).forEach(p=>{const r=e.files.associations[p];if(typeof r!="string"){this.logService.warn(`Ignoring configured 'files.associations' for '${p}' because its type is not a string but '${typeof r}'`);return}const o=this.getMimeType(r)||`text/x-${r}`;j({id:r,mime:o,filepattern:p})}),this._onDidChange.fire()}};S=C([d(0,G),d(1,k),d(2,D),d(3,F)],S);function m(s){return typeof s>"u"?!0:Array.isArray(s)?s.every(e=>typeof e=="string"):!1}function L(s,e){return s?typeof s.id!="string"?(e==null||e.error(n(12340,"property `{0}` is mandatory and must be of type `string`","id")),!1):m(s.extensions)?m(s.filenames)?typeof s.firstLine<"u"&&typeof s.firstLine!="string"?(e==null||e.error(n(12343,"property `{0}` can be omitted and must be of type `string`","firstLine")),!1):typeof s.configuration<"u"&&typeof s.configuration!="string"?(e==null||e.error(n(12344,"property `{0}` can be omitted and must be of type `string`","configuration")),!1):m(s.aliases)?m(s.mimetypes)?typeof s.icon<"u"&&(typeof s.icon!="object"||typeof s.icon.light!="string"||typeof s.icon.dark!="string")?(e==null||e.error(n(12347,"property `{0}` can be omitted and must be of type `object` with properties `{1}` and `{2}` of type `string`","icon","light","dark")),!1):!0:(e==null||e.error(n(12346,"property `{0}` can be omitted and must be of type `string[]`","mimetypes")),!1):(e==null||e.error(n(12345,"property `{0}` can be omitted and must be of type `string[]`","aliases")),!1):(e==null||e.error(n(12342,"property `{0}` can be omitted and must be of type `string[]`","filenames")),!1):(e==null||e.error(n(12341,"property `{0}` can be omitted and must be of type `string[]`","extensions")),!1):(e==null||e.error(n(12339,"Empty value for `contributes.{0}`",x.name)),!1)}export{S as W,x as l};
//# sourceMappingURL=C63fz6O_.js.map
