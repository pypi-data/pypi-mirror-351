# Generated by Django 5.2 on 2025-04-14 16:42

import concurrency.fields
import django.core.validators
import django.db.models.deletion
import django.forms.fields
import mptt.fields
from django.db import migrations, models

import aurora.core.compat
import aurora.core.forms
import aurora.core.models
import aurora.i18n.models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="OptionSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, validators=[django.core.validators.RegexValidator("[a-z0-9-_]")]
                    ),
                ),
                ("description", models.CharField(blank=True, max_length=1000, null=True)),
                ("data", models.TextField(blank=True, null=True)),
                ("separator", models.CharField(blank=True, default="", max_length=1)),
                ("comment", models.CharField(blank=True, default="#", max_length=1)),
                ("columns", models.CharField(blank=True, default="", editable=False, max_length=20)),
                ("pk_col", models.IntegerField(default=0, help_text="ID column number")),
                (
                    "parent_col",
                    models.IntegerField(default=-1, help_text="Column number of the indicating parent element"),
                ),
                ("locale", models.CharField(default="en-us", help_text="default language code", max_length=5)),
                (
                    "languages",
                    models.CharField(
                        blank=True, default="-;-;", help_text="language code of each column.", max_length=255, null=True
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Validator",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=255)),
                (
                    "name",
                    models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name="Function Name"),
                ),
                ("code", models.TextField(blank=True, null=True)),
                (
                    "target",
                    models.CharField(
                        choices=[
                            ("form", "Form"),
                            ("field", "Field"),
                            ("formset", "Formset"),
                            ("module", "Module"),
                            ("handler", "Handler"),
                            ("script", "Script"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "trace",
                    models.BooleanField(
                        default=False, help_text="Debug/Testing purposes: trace validator invocation on Sentry."
                    ),
                ),
                ("count_errors", models.BooleanField(default=False, help_text="Count failures")),
                ("active", models.BooleanField(blank=True, default=False, help_text="Enable/Disable validator.")),
                (
                    "draft",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Testing purposes: draft validator are enabled only for staff users.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validator",
                "verbose_name_plural": "Validators",
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Organization",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100, null=True, unique=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.organization",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("slug", models.SlugField(blank=True, max_length=100)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "organization",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="projects", to="core.organization"
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.project",
                    ),
                ),
            ],
            options={
                "unique_together": {("slug", "organization")},
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FlexForm",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("base_type", aurora.core.compat.StrategyClassField(default=aurora.core.forms.FlexFormBaseForm)),
                ("advanced", models.JSONField(blank=True, default=dict)),
                ("project", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.project")),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "form"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
            ],
            options={
                "verbose_name": "Flex Form",
                "verbose_name_plural": "Flex Forms",
            },
            bases=(aurora.core.models.AdminReverseMixin, aurora.i18n.models.I18NModel, models.Model),
        ),
        migrations.CreateModel(
            name="CustomFieldType",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        validators=[django.core.validators.RegexValidator("[A-Z][a-zA-Z0-9_]*")],
                    ),
                ),
                ("base_type", aurora.core.compat.StrategyClassField(default=django.forms.fields.CharField)),
                ("attrs", models.JSONField(default=dict)),
                ("regex", aurora.core.compat.RegexField(blank=True, null=True)),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "field"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FormSet",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ordering", models.PositiveIntegerField(db_index=True, default=0, verbose_name="ordering")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("title", models.CharField(blank=True, max_length=300, null=True)),
                ("description", models.TextField(blank=True, max_length=2000, null=True)),
                ("enabled", models.BooleanField(default=True)),
                ("extra", models.IntegerField(default=0)),
                ("max_num", models.IntegerField(blank=True, default=None, null=True)),
                ("min_num", models.IntegerField(default=0)),
                ("dynamic", models.BooleanField(default=True)),
                ("advanced", models.JSONField(blank=True, default=dict)),
                ("flex_form", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="core.flexform")),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="formsets", to="core.flexform"
                    ),
                ),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "formset"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.validator",
                    ),
                ),
            ],
            options={
                "verbose_name": "FormSet",
                "verbose_name_plural": "FormSets",
                "ordering": ["ordering"],
                "unique_together": {("parent", "flex_form", "name")},
            },
            bases=(aurora.core.models.AdminReverseMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FlexFormField",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("ordering", models.PositiveIntegerField(db_index=True, default=0, verbose_name="ordering")),
                ("version", concurrency.fields.AutoIncVersionField(default=0, help_text="record revision number")),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=2000)),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=100, validators=[django.core.validators.RegexValidator("^[a-z_0-9]*$")]
                    ),
                ),
                ("field_type", aurora.core.compat.StrategyClassField()),
                ("choices", models.CharField(blank=True, max_length=2000, null=True)),
                ("required", models.BooleanField(default=False)),
                ("enabled", models.BooleanField(default=True)),
                ("validation", models.TextField(blank=True, null=True)),
                (
                    "regex",
                    aurora.core.compat.RegexField(
                        blank=True, null=True, validators=[aurora.core.models.RegexPatternValidator()]
                    ),
                ),
                ("advanced", models.JSONField(blank=True, default=dict, null=True)),
                (
                    "flex_form",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="fields", to="core.flexform"
                    ),
                ),
                (
                    "validator",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"target": "field"},
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="core.validator",
                    ),
                ),
            ],
            options={
                "verbose_name": "Flex Field",
                "verbose_name_plural": "Flex Fields",
                "ordering": ["ordering"],
                "unique_together": {("flex_form", "name")},
            },
            bases=(aurora.core.models.AdminReverseMixin, aurora.i18n.models.I18NModel, models.Model),
        ),
    ]
