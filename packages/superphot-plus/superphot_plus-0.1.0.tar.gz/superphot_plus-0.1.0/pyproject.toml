[project]
name = "superphot-plus"
license = {file = "LICENSE"}
readme = "README.md"
authors = [
    { name = "Kaylee de Soto", email = "kaylee.de_soto@cfa.harvard.edu" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dynamic = ["version"]
dependencies = [
    "astropy",
    "joblib>=1.4.0",
    "lightgbm>=4.3.0",
    "numpy<1.26.3",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.2",
    "torch>=2.0.0",
    "tensorboard>=2.14.0",
    "tensorflow_probability>=0.21.0"
]

# On a mac, install optional dependencies with `pip install '.[dev]'` (include the single quotes)
[project.optional-dependencies]
dev = [
    "ipykernel", # Support for Jupyter notebooks
    "ipython", # Also used in building notebooks into Sphinx
    "nbconvert", # Needed for pre-commit check to clear output from Python notebooks
    "nbsphinx", # Used to integrate Python notebooks into Sphinx documentation
    "nbval", # Used to run Jupyter notebooks with pytest
    "pytest",
    "pytest-cov", # Used to report total code coverage
    "pre-commit", # Used to run checks before finalizing a git commit
    "sphinx", # Used to automatically generate documentation
    "sphinx-rtd-theme", # Used to render documentation
    "sphinx-autoapi", # Used to automatically generate api documentation
    "pylint", # Used for static linting of files
]
sampling = [
    "dynesty>=2.1.3",
    "numpyro>=0.14.0",
    "imbalanced-learn>=0.12.2",
    "iminuit>=2.25.2",
    "light-curve>=0.9",
]
plotting = [
    "arviz",
    "colorcet>=3.1.0",
    "corner>=2.2.2",
    "matplotlib>=3.8.4",
    "pacmap>=0.7.2",
    "scipy==1.12.0"
]
tuning = [
    "ray[tune]>=2.11.0", # Hyperparameter tuning library
    "optuna", # Optimization search algorithm
]
benchmarking = [
    "asv>=0.5.1", # Used to compute performance benchmarks
    "memory_profiler>=0.61.0", # Used to benchmark memory usage
]

[build-system]
requires = [
    "setuptools>=62", # Used to build and package the Python project
    "setuptools_scm>=6.2", # Gets release version from git. Makes it available programmatically
]
build-backend = "setuptools.build_meta"

[tool.setuptools_scm]
write_to = "src/superphot_plus/_version.py"

[tool.pytest.ini_options]
pythonpath = [
    "src", 
    "scripts",
]
testpaths = [
    "tests",
]

[tool.black]
line-length = 110
target-version = ["py38"]

[tool.isort]
profile = "black"
line_length = 110

[tool.coverage.report]
omit = [
    "src/superphot_plus/_version.py", # auto-generated
]
