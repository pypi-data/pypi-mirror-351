[project]
name = "insta-message-analyzer"
version = "0.1.0"
description = "A Python tool for analyzing Instagram message data, providing temporal and network analysis to analyze and visualize social interaction patterns."
readme = "README.md"
requires-python = ">=3.12,<=3.14"
license = { file = "LICENSE" }
authors = [
  {name = "Nick (peppapig450)", email = "peppapig450@pm.me"},
]
dynamic = [ "classifiers" ]
keywords = ["instagram", "analysis", "network", "social", "messaging", "data-analysis"]

dependencies = [
  "pandas (>=2.2.3,<3.0.0)",
  "emoji (>=2.14.1,<3.0.0)",
  "plotly (>=6.0.0,<7.0.0)",
  "networkx (>=3.4.2,<4.0.0)",
  "cdlib (>=0.4.0,<0.5.0)",
  "python-louvain (>=0.16,<0.17)",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0,<3.0.0"]

[project.urls]
homepage = "https://github.com/peppapig450/insta-message-analyzer"
repository = "https://github.com/peppapig450/insta-message-analyzer"
documentation = "https://github.com/peppapig450/insta-message-analyzer/README.md"
"Bug Tracker" = "https://github.com/peppapig450/insta-message-analyzer/issues"

[project.scripts]
insta-analyze = "insta_message_analyzer.main:main"

[tool.poetry]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Information Analysis",
  "Topic :: Scientific/Engineering :: Visualization",
  "Operating System :: OS Independent",
]
packages = [
  { "include" = "insta_message_analyzer" },
]

[tool.poetry.group.dev.dependencies]
mypy = "^1.15.0"
pandas-stubs = "^2.2.3.241126"
pre-commit = "^4.1.0"
ruff = "^0.9.9"
types-networkx = "^3.4.2.20250304"
pytest = "^8.3.5"
twine = "^6.1.0"

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "tests"
]

# Same as Black
indent-width = 4
line-length = 108

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = [
  #### modules
  "ANN", # flake8-annotations
  "COM", # flake8-commas
  "C90", # mccabe complexity
  "DJ", # django
  "EXE", # flake8-executable
  "T10", # debugger
  "TID", # flake8-tidy-imports
  #### specific rules
  "D100", # ignore missing docs
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D106",
  "D107",
  "D212",
  "D213", # NumPy summary starts on first line
  "E402", # false positives for local imports
  "E501", # line too long
  "TRY003", # external messages in exceptions are too verbose
  "TD002",
  "TD003",
  "FIX002", # too verbose descriptions of todos
]
select = [
  "ALL",
]

fixable = ["ALL"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
# Specify the docstring convention
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"insta_message_analyzer/analysis/strategies/network.py" = ["N803", "N806"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.mypy]
check_untyped_defs = true # Check untyped function bodies
disallow_any_generics = false # Allow generic types (useful for pandas/numpy)
exclude = ['tests/']
explicit_package_bases = true
follow_imports = "normal" # Default, but explicit for clarity
ignore_missing_imports = false # Disable to enforce stubs, with exceptions below
namespace_packages = true
packages = ["insta_message_analyzer"]
python_version = "3.12"
strict = true
warn_no_return = true # Ensure all paths return a value
warn_unused_configs = true # Catch unused settings
warn_unused_ignores = true # Highlight unnecessary # type: ignore

[[tool.mypy.overrides]]
ignore_missing_imports = true
module = [
  "plotly.*",
  "scipy.*",
  "community.*"
]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests"]
addopts = "-v --tb=short"  # Verbose output, short traceback
markers = [
    "bipartite: Tests related to bipartite graph creation.",
    "centrality: Tests related to centrality measures.",
    "communities: Tests related to community detection.",
    "cross_chat: Tests related to cross-chat participation analysis.",
    "influence: Tests related to influence metrics.",
    "reaction_graph: Tests related to reaction graph creation.",
    "reaction_metrics: Tests related to reaction metrics computation.",
    "integration: Tests that integrate multiple components.",
    "edge_cases: Tests for edge cases and robustness."
]
