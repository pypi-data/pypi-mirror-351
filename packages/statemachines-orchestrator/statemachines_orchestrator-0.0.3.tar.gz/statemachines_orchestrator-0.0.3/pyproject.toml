[project]
name = "statemachines_orchestrator"
version = "0.0.3"

description = "An extension of `python-statemachine` with linking between machines."
requires-python = ">=3.11"

dependencies = [
    "python-statemachine == 2.5.0",
]

[dependency-groups]
dev = [
    "ruff == 0.11.12",
    "pre-commit == 4.2.0",
    "mypy == 1.16.0",
    "pytest == 8.3.5",
    "pytest-cov == 6.1.1",
]
[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "SLF001",
    "D211",
    "D213",
    "COM812",
    "D203",
    "ISC001"
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"**/tests/**" = [
    "D",
    "S101"
]
"__init__.py" = [
    "D104"
]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
