{
	"target_sql" : "databricks",
	"inherit_from":["general_sql_specs.json"],
	"target_capabilities" : {"loops":"0"},
	//"block_split_count_begin_end" : 0, // will not split the statements inside nested BEGIN/END blocks
	
	"CUSTOM_CONVERTER_MODULES" : ["spark_output_hooks", "vertica_source_hooks"],
	"COMBINED_CUSTOM_MODULES_LOAD" : 1, //loads all files at the same time to ensure vars can be shared
	"initialize_hooks_call" : "::init_spark_hooks", //initialize context, pass all relevant info
	//"source_prescan_routine" : "::vertica_prescan",
	"preprocess_file" : "1",
	"preprocess_routine" : "::preprocess_for_spark",

	"last_temp_select" : "\nSELECT 'BB_LAST_SELECT';",
	//"pre_finalization_handler" : "::finalize_content",
	"use_catalog" : false,
	// "catalog_file_path":"catalog.txt",
	//apply substitutions when lines that begin with these tokens
	//"line_begin_with_subst" : [
	//	{"from" : "set heading off.*", "to" : "!set header=false"},
	//	{"from" : "set heading on", "to" : "!set header=true"},
	//	{"from" : "DEFINE", "to" : "!DEFINE"}
	//	//{"from" :"@", "to" : "!source "}
	//	//{"from" : "WHENEVER SQLERROR EXIT SQL.SQLCODE", "to" : "!set exit_on_error=true"}
	//],
	"code_fragment_breakers": {
		//"line_start": [],
		"line_end": ["\;"]
	},
	"statement_end" : ";",
		"stmt_categorization_patterns": [
		{"category": "INSERT_WITH_COMMENT_INTO", "patterns" : ["\bINSERT\s*\/\*.*?\*\/\s*INTO"]},
		//{"category": "ECHO", "patterns" : ["\\echo\b"]},
		//{"category": "SELECT_SET", "patterns" : ["S3L3CT_S3T"]},
		//{"category": "SET_HANDLER", "patterns" : ["^\s*SET\b"]},
		//{"category": "IF_START", "patterns" : ["^\s*IF.*THEN", "^\s*IF\s", "\bIF\b.*\bTHEN\b"]},
		//{"category": "ELSE_START", "patterns" : ["^\s*ELSE\b"]},
		//{"category": "LAST_SELECT", "patterns" : ["^\s*\bSELECT\b"]},
		
		{"category": "CREATE_PROJECTION", "patterns" : ["\bCREATE_PROJECTION\b"]}
		//{"category": "COMMENT_HANDLER", "patterns" : ["^\s*\#"]}
	],
		
	"fragment_handling" : {
	
		//"ECHO" : "::echo_handler"
		"DELETE_MULTI_WHERE_CONDITION" : "::delete_multi_where_condition",
		"CREATE_PROJECTION" : "::create_projection",
		"TABLE_DDL_EXTERNAL" : "::create_external_table",
		"INSERT_WITH_COMMENT_INTO" : "::insert_with_select",
		"INSERT_INTO" : "::insert_with_select",
		"INSERT" : "::insert_with_select"
	},
	"commands" : {
		"DATE_TO_STRING" : "cast(date_format(current_timestamp,'%PATTERN%') as string)"
		},
	"line_subst" : [
		
			{"from" : "\bcast\s*\(\s*trunc\b(.*?)\)\s*\bas\s+int\b\s*\)", "to" : "cast(round$1,0) AS BIGINT)"},
			{"from" : "RRRR", "to" : "YYYY"},
			{"from" : "'YYYY\-MM\-DD\s+HH\:MI\:SS'", "to" : "'y-MM–dd hh:mm:ss'"},
			
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\'", "to" : "'y/MM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\'", "to" : "'y/MM/dd hh:mm:ss'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\'", "to" : "'MM/dd/y hh:mm:ss'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\'", "to" : "'MM/dd/y HH:mm:ss'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\'", "to" : "'y.MM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\'", "to" : "'y.MM.dd hh:mm:ss'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\'", "to" : "'MM.dd.y hh:mm:ss'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\'", "to" : "'MM.dd.y HH:mm:ss'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\'", "to" : "'y-MM-dd HH:mm:ss'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\'", "to" : "'y-MM-dd hh:mm:ss'"},
			{"from" : "'MM\–DD\–YYYY hh12\:mi\:ss\'", "to" : "'MM–dd–y hh:mm:ss'"},
			{"from" : "'MM\–DD\–YYYY hh24\:mi\:ss\'", "to" : "'MM–dd–y HH:mm:ss'"},
			
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\.FF\'", "to" : "'y/MM/dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\.FF\'", "to" : "'y/MM/dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM/dd/y hh:mm:ss.SSSS'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM/dd/y HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\.FF\'", "to" : "'y.MM.dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\.FF\'", "to" : "'y.MM.dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM.dd.y hh:mm:ss.SSSS'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM.dd.y HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\.FF\'", "to" : "'y-MM-dd HH:mm:ss.SSSS'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\.FF\'", "to" : "'y-MM-dd hh:mm:ss.SSSS'"},
			{"from" : "'MM\–DD\–YYYY hh12\:mi\:ss\.FF\'", "to" : "'MM–dd–y hh:mm:ss.SSSS'"},
			{"from" : "'MM\–DD\–YYYY hh24\:mi\:ss\.FF\'", "to" : "'MM–dd–y HH:mm:ss.SSSS'"},
			
			{"from" : "'YYYY\/MM\/DD hh24\:mi\:ss\.FF AM\'", "to" : "'y/MM/dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\/MM\/DD hh12\:mi\:ss\.FF AM\'", "to" : "'y/MM/dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\/DD\/YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM/dd/y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\/DD\/YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM/dd/y HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\.MM\.DD hh24\:mi\:ss\.FF AM\'", "to" : "'y.MM.dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\.MM\.DD hh12\:mi\:ss\.FF AM\'", "to" : "'y.MM.dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\.DD\.YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM.dd.y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\.DD\.YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM.dd.y HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\-MM\-DD hh24\:mi\:ss\.FF AM\'", "to" : "'y-MM-dd HH:mm:ss.SSSS a'"},
			{"from" : "'YYYY\-MM\-DD hh12\:mi\:ss\.FF AM\'", "to" : "'y-MM-dd hh:mm:ss.SSSS a'"},
			{"from" : "'MM\–DD\–YYYY hh12\:mi\:ss\.FF AM\'", "to" : "'MM–dd–y hh:mm:ss.SSSS a'"},
			{"from" : "'MM\–DD\–YYYY hh24\:mi\:ss\.FF AM\'", "to" : "'MM–dd–y HH:mm:ss.SSSS a'"},

			{"from" : "DDMONYYYY", "to" : "ddMMMy"},
			{"from" : "DD-MON-YYYY", "to" : "dd-MMM-y"},
			{"from" : "DD\.MON\.YYYY", "to" : "dd.MMM.y"},
			{"from" : "DD\-MON\-YYYY", "to" : "dd-MMM-y"},
			{"from" : "YYYYMONDD", "to" : "yMMMdd"},
			{"from" : "YYYY-MON-DD", "to" : "y-MMM-dd"},
			{"from" : "YYYY\.MON\.DD", "to" : "y.MMM.dd"},
			{"from" : "YYYY\-MON\-DD", "to" : "y-MMM-dd"},
			{"from" : "yyyymmdd", "to" : "yMMdd"}, 
			{"from" : "YYYYMMDD", "to" : "yMMdd"},
			{"from" : "YYYY\/MM\/DD", "to" : "y/MM/dd"},
			{"from" : "YYYY\.MM\.DD", "to" : "y.MM.dd"},
			{"from" : "YYYY\-MM\-DD", "to" : "y-MM-dd"},
			{"from" : "DDMMYYYY", "to" : "ddMMy"},
			{"from" : "DD\.MM\.YYYY", "to" : "dd.MM.y"},
			{"from" : "DD\-MM\-YYYY", "to" : "dd-MM-y"},
			{"from" : "DD\/MM\/YYYY", "to" : "dd/MM/y"},
			{"from" : "\bYYYYMM\b", "to" : "yMM"},
			{"from" : "\bYYYY\-MM\b", "to" : "y-MM"},
			{"from" : "\bYYYY\.MM\b", "to" : "y.MM"},
			{"from" : "\bYYYY\/MM\b", "to" : "y/MM"},

			{"from" : "MMDDYYYY", "to" : "MMddy"},
			{"from" : "MM\.DD\.YYYY", "to" : "MM.dd.y"},
			{"from" : "MM\-DD\-YYYY", "to" : "MM-dd-y"},
			{"from" : "MM\.DD\.YYYY", "to" : "MM.dd.y"},
			{"from" : "'YY\/MM\/DD hh24\:mi\:ss\'", "to" : "'yy/MM/dd HH:mm:ss'"},
			{"from" : "'YY\/MM\/DD hh12\:mi\:ss\'", "to" : "'yy/MM/dd hh:mm:ss'"},
			{"from" : "'MM\/DD\/YY hh12\:mi\:ss\'", "to" : "'MM/dd/yy hh:mm:ss'"},
			{"from" : "'MM\/DD\/YY hh24\:mi\:ss\'", "to" : "'MM/dd/yy HH:mm:ss'"},
			{"from" : "'YY\.MM\.DD hh24\:mi\:ss\'", "to" : "'yy.MM.dd HH:mm:ss'"},
			{"from" : "'YY\.MM\.DD hh12\:mi\:ss\'", "to" : "'yy.MM.dd hh:mm:ss'"},
			{"from" : "'MM\.DD\.YY hh12\:mi\:ss\'", "to" : "'MM.dd.yy hh:mm:ss'"},
			{"from" : "'MM\.DD\.YY hh24\:mi\:ss\'", "to" : "'MM.dd.yy HH:mm:ss'"},
			{"from" : "'YY\-MM\-DD hh24\:mi\:ss\'", "to" : "'yy-MM-dd HH:mm:ss'"},
			{"from" : "'YY\-MM\-DD hh12\:mi\:ss\'", "to" : "'yy-MM-dd hh:mm:ss'"},
			{"from" : "'MM\–DD\–YY hh12\:mi\:ss\'", "to" : "'MM–dd–yy hh:mm:ss'"},
			{"from" : "'MM\–DD\–YY hh24\:mi\:ss\'", "to" : "'MM–dd–yy HH:mm:ss'"},
			{"from" : "'MON\–DD\–YY hh24\:mi\:ss\'", "to" : "'MMM–dd–yy HH:mm:ss'"},
			{"from" : "'MON\–DD\-YY hh12\:mi\:ss\'", "to" : "'MMM–dd–yy hh:mm:ss'"},
			{"from" : "'MON\.DD\.YY hh24\:mi\:ss\'", "to" : "'MMM.dd.yy HH:mm:ss'"},
			{"from" : "'MON\.DD\.YY hh12\:mi\:ss\'", "to" : "'MMM.dd.yy hh:mm:ss'"},
			{"from" : "'MON\/DD\/YY hh24\:mi\:ss\'", "to" : "'MMM/dd/yy HH:mm:ss'"},
			{"from" : "'MON\/DD\/YY hh12\:mi\:ss\'", "to" : "'MMM/dd/yy hh:mm:ss'"},
			{"from" : "'DD\-MON\–YY hh24\:mi\:ss\'", "to" : "'dd-MMM–yy HH:mm:ss'"},
			{"from" : "'DD\-MON\–YY hh12\:mi\:ss\'", "to" : "'dd-MMM–yy hh:mm:ss'"},
			{"from" : "'DD\.MON\.YY hh24\:mi\:ss\'", "to" : "'dd.MMM.yy HH:mm:ss'"},
			{"from" : "'DD\.MON\.YY hh12\:mi\:ss\'", "to" : "'dd.MMM.yy hh:mm:ss'"},
			{"from" : "'DD\/MON\/YY hh24\:mi\:ss\'", "to" : "'dd/MMM/yy HH:mm:ss'"},
			{"from" : "'DD\/MON\/YY hh12\:mi\:ss\'", "to" : "'dd/MMM/yy hh:mm:ss'"},
			{"from" : "'MON\–DD\–YYYY hh24\:mi\:ss\'", "to" : "'MMM–dd–y HH:mm:ss'"},
			{"from" : "'MON\–DD\-YYYY hh12\:mi\:ss\'", "to" : "'MMM–dd–y hh:mm:ss'"},
			{"from" : "'MON\.DD\.YYYY hh24\:mi\:ss\'", "to" : "'MMM.dd.y HH:mm:ss'"},
			{"from" : "'MON\.DD\.YYYY hh12\:mi\:ss\'", "to" : "'MMM.dd.y hh:mm:ss'"},
			{"from" : "'MON\/DD\/YYYY hh24\:mi\:ss\'", "to" : "'MMM/dd/y HH:mm:ss'"},
			{"from" : "'MON\/DD\/YYYY hh12\:mi\:ss\'", "to" : "'MMM/dd/y hh:mm:ss'"},
			{"from" : "'DD\-MON\–YYYY hh24\:mi\:ss\'", "to" : "'dd-MMM–y HH:mm:ss'"},
			{"from" : "'DD\-MON\–YYYY hh12\:mi\:ss\'", "to" : "'dd-MMM–y hh:mm:ss'"},
			{"from" : "'DD\.MON\.YYYY hh24\:mi\:ss\'", "to" : "'dd.MMM.y HH:mm:ss'"},
			{"from" : "'DD\.MON\.YYYY hh12\:mi\:ss\'", "to" : "'dd.MMM.y hh:mm:ss'"},
			{"from" : "'DD\/MON\/YYYY hh24\:mi\:ss\'", "to" : "'dd/MMM/y HH:mm:ss'"},
			{"from" : "'DD\/MON\/YYYY hh12\:mi\:ss\'", "to" : "'dd/MMM/y hh:mm:ss'"},
			
			{"from" : "'YYYY\-MON\–DD hh24\:mi\:ss\'", "to" : "'y-MMM–dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\–DD hh12\:mi\:ss\'", "to" : "'y-MMM–dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh24\:mi\:ss\'", "to" : "'y.MMM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh12\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh24\:mi\:ss\'", "to" : "'y/MMM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh12\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh24\:mi\:ss\'", "to" : "'y-dd-MMM HH:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh12\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh24\:mi\:ss\'", "to" : "'y.dd.MMM HH:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh12\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh24\:mi\:ss\'", "to" : "'y/dd/MMM HH:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh12\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			{"from" : "'YYYY\-MON\–DD hh24\:mi\:ss\'", "to" : "'y-MMM–dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\–DD hh12\:mi\:ss\'", "to" : "'y-MMM–dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh24\:mi\:ss\'", "to" : "'y.MMM.dd HH:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh12\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh24\:mi\:ss\'", "to" : "'y/MMM/dd HH:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh12\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh24\:mi\:ss\'", "to" : "'y-dd-MMM HH:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh12\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh24\:mi\:ss\'", "to" : "'y.dd.MMM HH:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh12\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh24\:mi\:ss\'", "to" : "'y/dd/MMM HH:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh12\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			//
			{"from" : "'YYYY\-MON\–DD hh24\:mi\:ss\'", "to" : "'y-MMM–dd HH:mm:ss'"},
			{"from" : "'YYYY\-MON\–DD hh\:mi\:ss\'", "to" : "'y-MMM–dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			{"from" : "'YYYY\-MON\–DD hh\:mi\:ss\'", "to" : "'y-MMM–dd hh:mm:ss'"},
			{"from" : "'YYYY\.MON\.DD hh\:mi\:ss\'", "to" : "'y.MMM.dd hh:mm:ss'"},
			{"from" : "'YYYY\/MON\/DD hh\:mi\:ss\'", "to" : "'y/MMM/dd hh:mm:ss'"},
			{"from" : "'YYYY\-DD\-MON hh\:mi\:ss\'", "to" : "'y-dd-MMM hh:mm:ss'"},
			{"from" : "'YYYY\.DD\.MON hh\:mi\:ss\'", "to" : "'y.dd.MMM hh:mm:ss'"},
			{"from" : "'YYYY\/DD\/MON hh\:mi\:ss\'", "to" : "'y/dd/MMM hh:mm:ss'"},
			{"from" : "'YYYY_MM_DD\s+HH\:MI\:SS'", "to" : "'y_MM_dd hh:mm:ss'"},
			{"from" : "'YYYY_MM_DD'", "to" : "'y_MM_dd'"},
			{"from" : "'DD_MON_YY'", "to" : "'dd_MMM_yy'"},
			{"from" : "'MON_YY'", "to" : "'MMM_yy'"},
			
			
			
			{"from" : "DDMONYY", "to" : "ddMMMyy"},
			{"from" : "DD-MON-YY", "to" : "dd-MMM-yy"},
			{"from" : "DD\.MON\.YY", "to" : "dd.MMM.yy"},
			{"from" : "DD\-MON\-YY", "to" : "dd-MMM-yy"},
			{"from" : "YYMONDD", "to" : "yyMMMdd"},
			{"from" : "YY-MON-DD", "to" : "yy-MMM-dd"},
			{"from" : "YY\.MON\.DD", "to" : "yy.MMM.dd"},
			{"from" : "YY\-MON\-DD", "to" : "yy-MMM-dd"},
			{"from" : "YYMMDD", "to" : "yyMMdd","case_sensitive_match" : "1"},
			{"from" : "YY\/MM\/DD", "to" : "yy/MM/dd","case_sensitive_match" : "1"},
			{"from" : "YY\.MM\.DD", "to" : "yy.MM.dd","case_sensitive_match" : "1"},
			{"from" : "YY\-MM\-DD", "to" : "yy-MM-dd","case_sensitive_match" : "1"},
			{"from" : "DDMMYY", "to" : "ddMMyy","case_sensitive_match" : "1"},
			{"from" : "DD\.MM\.YY", "to" : "dd.MM.yy","case_sensitive_match" : "1"},
			{"from" : "DD\-MM\-YY", "to" : "dd-MM-yy","case_sensitive_match" : "1"},
			{"from" : "DD\/MM\/YY", "to" : "dd/MM/yy","case_sensitive_match" : "1"},
			//{"from" : "\bYYMM\b", "to" : "yyMM"},
			//{"from" : "\bYY\-MM\b", "to" : "yy-MM"},
			//{"from" : "\bYY\.MM\b", "to" : "yy.MM"},
			//{"from" : "\bYY\/MM\b", "to" : "yy/MM"},
			//{"from" : "\bMMYY\b", "to" : "MMyy"},
			//{"from" : "\bMM\/YY\b", "to" : "MM/yy"},
			//{"from" : "\bMM\.YY\b", "to" : "MM.yy"},
			//{"from" : "\bMM\-YY\b", "to" : "MM-yy"},
			//{"from" : "\bDDMM\b", "to" : "ddMM"},
			//{"from" : "\bDD\-MM\b", "to" : "dd-MM"},
			//{"from" : "\bDD\.MM\b", "to" : "dd.MM"},
			//{"from" : "\bDD\/MM\b", "to" : "dd/MM"},
			{"from" : "MMDDYY", "to" : "MMddyy","case_sensitive_match" : "1"},
			{"from" : "MM\.DD\.YY", "to" : "MM.dd.yy","case_sensitive_match" : "1"},
			{"from" : "MM\-DD\-YY", "to" : "MM-dd-yy","case_sensitive_match" : "1"},
			{"from" : "MM\.DD\.YY", "to" : "MM.dd.yy","case_sensitive_match" : "1"},
			{"from" : "HH24\:MM\:SS", "to" : "HH:mm:ss"},
			{"from" : "HH24\:MI\:SS", "to" : "HH:mm:ss"},
			{"from" : "\'YYYY\'", "to" : "'y'"},
			
			
			{"from" : "u\&\'\\(.*?)\'", "to" : "decode('$1','UTF-16')"},
		
			 
			{"from" : "\"datediff\"" , "to" : "datediff"},
			{"from" : "\"timestampdiff\"" , "to" : "timestampdiff"},

		//{"from" : "\\echo(.*$)", "to" : "SELECT(printf($1));"},
		//{"from" : "\\set\s+ON_ERROR_STOP\s+on\b\s*\;?", "to" : ""},
		{"from" : "^(\s*\\)", "to" : "--BB_COMMENT$1"},
		//{"from" : "^(\s*\\.*?)\;", "to" : "$1"},
		{"from" : "^(ALTER\s+TABLE)", "to" : "--$1"},
		{"from" : "\bnumber\s*\)", "to" : "int)"},
		//{"from" : "^CREATE\s*EXTERNAL\s+TABLE", "to" : "CREATE OR REPLACE"},

		{"from" : "\[", "to" : ""},
		{"from" : "\]", "to" : ""},
		{"from" : "\~\~", "to" : "like"},
		{"from" : "\/\*\+", "to" : "/* +"},
		{"from" : "\/\*\+", "to" : "/* +"},
		{"from" : "\bwhere\s*1\=\s*1", "to" : "where true"},
		{"from" : "\bwhere\s*1", "to" : "where true"},
		{"from" : "\"substring\"\s*\(", "to" : "substring("},

		{"from" : "\btimestamptz\(.*?\)", "to" : "TIMESTAMP"},
		{"from" : "\btimestamptz\b", "to" : "TIMESTAMP"},
		
		{"from" : "\bnumeric\s*\([456789]\d", "to" : "numeric(38"},
		{"from" : "\bnumeric\s*\(\d+\,[456789]\d", "to" : "numeric(38,36"},
		{"from" : "\bnumeric\s*\(\d+\,39", "to" : "numeric(38,36"},
		
		
		{"from" : "\bcommit\s*\;", "to" : ""},
		{"from" : "(.*?)\bSELECT\s+\/*.*?\*\/\s*ANALYZE_STATISTICS\s*\(\'(.*?)\'\)\s*\;", "to" : "$1ANALYZE TABLE $2 COMPUTE STATISTICS FOR ALL COLUMNS;\n$1DESC EXTENDED $2;"},
		{"from" : "(.*?)\bSELECT\s+\/*.*?\*\/\s*ANALYZE_STATISTICS\s*\(\'(.*?)\'\)\s*AS\s*\w+\s*\;", "to" : "$1ANALYZE TABLE $2 COMPUTE STATISTICS FOR ALL COLUMNS;\n$1DESC EXTENDED $2;"},
		{"from" : "(.*?)\bSELECT\s+ANALYZE_STATISTICS\s*\(\'(.*?)\'\)\s*\;", "to" : "$1ANALYZE TABLE $2 COMPUTE STATISTICS FOR ALL COLUMNS;\n$1DESC EXTENDED $2;"},
		{"from" : "(.*?)\bSELECT\s+ANALYZE_STATISTICS\s*\(\'(.*?)\'\)\s*AS\s*\w+\s*\;", "to" : "$1ANALYZE TABLE $2 COMPUTE STATISTICS FOR ALL COLUMNS;\n$1DESC EXTENDED $2;"},
		{"from" : "\"SYSDATE\"", "to" : "NOW", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "SYSDATE", "to" : "NOW", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "statement_timestamp", "to" : "NOW", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\(statement_timestamp\(\)\)\:\:timestamp", "to" : "CURRENT_TIMESTAMP"},
		{"from" : "statement_timestamp", "to" : "CURRENT_TIMESTAMP"},
		{"from" : "(now\(\)\))\s*\:\:timestamp", "to" : "$1", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "SYSDATE", "to" : "CURRENT_TIMESTAMP"},
		{"from" : "(\bCURRENT_TIMESTAMP\s*\(\))\s*([-|+]\s*\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\bCURRENT_TIMESTAMP)\s*([-|+]\s*\d+)", "to" : "date_add($1,$2)"},
		{"from" : "\"(.*?)\s+(.*?)\"", "to" : "\"$1_$2\"", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\"(.*?)\((.*?)\"", "to" : "\"$1$2\"", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\"(.*?)\)(.*?)\"", "to" : "\"$1$2\"", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\"", "to" : "`", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\:\:TIME\b", "to" : "::TIMESTAMP"},

		//{"from" : "\bAS\s+\"(\w+)\"", "to" : " AS `$1`"},
		{"from" : "\.\.", "to" : "."},
		{"from" : "\bPARTITION\s+BY\b\s+\(", "to" : "PARTITION_BY("},
		{"from" : "MONITORING\;", "to" : ";"},
		{"from" : " BYTE\)", "to" : ")"},
		{"from" : "VARCHAR2", "to" : "VARCHAR"},
		{"from" : "DROP STORAGE", "to" : ""},
		{"from" : "\bCREATE\s+TABLE\s+IF\s+NOT\s+EXISTS\b", "to" : "CREATE OR REPLACE TABLE"},
		{"from" : "\bCREATE\s+VIEW\b", "to" : "CREATE OR REPLACE VIEW"},
		
		{"from" : "\bRANGE\s+BETWEEN\s+INTERVAL\b", "to" : "RANGE BETWEEN"},
		{"from" : "(\bLAST_VALUE\s*\(\s*\w+\.*\w*)\s+IGNORE\s+NULLS\b\s*\)", "to" : "$1, false)"},
		{"from" : "\bSELECT\s+PURGE_TABLE\s*\(.*?\)\;", "to" : ""},
		{"from" : "SELECT\s+SLEEP\s*\(.*\)\;", "to" : ""},
		//{"from" : "\"", "to" : "", "exclude_categories" : ["ETL_DML"]}, // get rid of double quotes
		//{"from" : "\"", "to" : "'", "statement_categories" : ["ETL_DML"]},
		{"from" : "CREATE\s+TABLE\s+\#", "to" : "CREATE OR REPLACE TEMPORARY TABLE TEMP_"},
		{"from" : "CREATE\s+TABLE", "to" : "CREATE OR REPLACE TABLE"},
		{"from" : "NOT NULL ENABLE", "to" : "NOT NULL", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\blong\s+varbinary\b\s*\(\s*\d+\s*\)", "to" : "binary"},
		{"from" : "\blong\s+nvarchar\b\s*\(\s*\d+\s*\)", "to" : "string"},
		{"from" : "\blong\s+varchar\b\s*\(\s*\d+\s*\)", "to" : "string"},
		{"from" : "\bvarbinary\b", "to" : "binary"},
		{"from" : "\bbinary\b\s*\(\s*\)", "to" : "binary"},
		{"from" : "\btimestamp\b\s*\(\s*\d*\s*\)", "to" : "timestamp"},
		{"from" : "\bnvarchar\b\s*\(\s*\d+\s*\)", "to" : "string"},
		{"from" : "\bvarchar\b\s*\(\s*\d+\s*\)", "to" : "string"},
		{"from" : "\bchar\b\s*\(\s*\d+\s*\)", "to" : "string"},
		{"from" : "\bvarchar\b", "to" : "string"},
		{"from" : "\bchar\b", "to" : "string"},
		{"from" : "\bINT\b", "to" : "BIGINT"},
		{"from" : "\bnumeric\b\s*\(\s*1\s*\,\s*0\s*\)", "to" : "INT"},
		{"from" : "\bnumeric\s*\(\s*15\s*\,\s*0\s*\)", "to" : "INT"},
		{"from" : "\bnumeric\b\s*\(\s*\d+\s*\,\s*0\s*\)", "to" : "BIGINT"},
		{"from" : "\bhours\b", "to" : "hour"},

		{"from" : "(\w+)\s+\bidentity\s*\(.*?\)", "to" : "$1 identity", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "(\w+)\s+\bidentity\b", "to" : "$1 identity_Temp", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "(\w+)\s+\bidentity_Temp\b", "to" : "$1 bigint GENERATED ALWAYS AS identity", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\bNULLSEQUAL\b", "to" : ""},
		{"from" : ".*CURRENT_SESSION.*", "to" : ""},
		{"from" : "\"(.*?)\"", "to" : " `$1`"},
		//{"from" : "AS\s*\"(.*?)\"", "to" : "AS `$1`"},
		//{"from" : "\)\s*\"(.*?)\"", "to" : ") `$1`"},
		//{"from" : "\.\"(.*?)\"", "to" : ".`$1`"},
		
		
		{"from" : "(\w+\.\bFECHA_EMISION)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\bFECHA_EMISION)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\w+\.\bFECHA_PROCESO)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\bFECHA_PROCESO)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\w+\.\bFEC_MOVIMIENTO)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\bFEC_MOVIMIENTO)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\w+\.\bFECHA_RECARGA)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},
		{"from" : "(\bFECHA_RECARGA)\s*[\-|\+]\s*(\d+)", "to" : "date_add($1,$2)"},			
		{"from" : "(\w+\.\bFECHA\b)\s*([\-|\+]\s*\d+\/?\s*\d*)", "to" : "date_add($1,($2)::INT)"},
		{"from" : "(\bFECHA\b)\s*[\-|\+]\s*(\d+\/?\s*\d*)", "to" : "date_add($1,$2)"},
			
		{"from" : "(\w+)\s+\bdate\b", "to" : "$1 TIMESTAMP", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\s*\bDIRECT\b\s*", "to" : "", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\s*\bTRICKLE\b\s*", "to" : "", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "(\bDEFAULT\b.*?)\w+\.(\w+)", "to" : "$1$2", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\bDEFAULT\b(.*)\,\s*$", "to" : "GENERATED ALWAYS AS($1),", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\bDEFAULT\b(.*)\s*$", "to" : "GENERATED ALWAYS AS($1)", "statement_categories" : ["TABLE_DDL"]},
		//{"from" : "\bDEFAULT\b\s*\((.*?)\)(\:\:\w+)", "to" : "GENERATED ALWAYS AS ($1$2),", "statement_categories" : ["TABLE_DDL"]},
		//{"from" : "\bDEFAULT\b\s*\(", "to" : "GENERATED ALWAYS AS (", "statement_categories" : ["TABLE_DDL"]},
		//{"from" : "\bDEFAULT\b\s*(substring\(.*?\))", "to" : "GENERATED ALWAYS AS ($1),", "statement_categories" : ["TABLE_DDL"]},
		//{"from" : "\bDEFAULT\b\s*(.*?)\,", "to" : "GENERATED ALWAYS AS ($1),", "statement_categories" : ["TABLE_DDL"]},
		//{"from" : "\bDEFAULT\b\s+(NOW\(\))", "to" : "GENERATED ALWAYS AS ($1),", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\,\s*\*", "to" : "*", "statement_categories" : ["TABLE_DDL"]},
		{"from" : "\/\*\+ APPEND \*\/", "to" : ""}, //eliminate the /*+ APPEND */ hint
		{"from" : "partition by (\w\.?\w?\.?\w*+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
		{"from" : "partition by (\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
		{"from" : "partition by (\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
		{"from" : "partition by (\w+\s*\,\s*\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
		{"from" : "partition by (\w+\s*\,\s*\w+\s*\,\s*\w+\s*\,\s*\w+\s*)\)", "to" : "PARTITION BY $1 ORDER BY 1 )"},
		{"from" : "\bSET\s+SESSION\b\s+.*?\;", "to" : ""},
		{"from" : "\bSELECT\s+CURRENT_SESSION\(\)\;", "to" : ""},
		{"from" : "CLDW_APP_STG_MAINT_PKG\.COLLECT_TBL_STATS", "to" : "COLLECT_TBL_STATS"},
		{"from" : "set\s+resource_pool\s+to\s+rp_procesos\;", "to" : ""},
		{"from" : "^(\s*CREATE\s+\w+\s+INDEX\b)", "to" : "--$1"},
		{"from" : "\s*\-\s*\:DIAS_DELTA", "to" : ""},
		{"from" : "\s*\-\s*\:DIAS", "to" : ""},
		{"from" : "\:IND_FLUJO", "to" : "0"},
		
		
		{"from" : "\bGROUP\s+BY\b\s*\(", "to" : "GROUP_BY(", "statement_categories" : ["TABLE_DDL"]}
	],

	"block_subst" : [
		{"from" : "update\s+(\w*\.*\w+)\s+set\s+(.*?)where\s+(\w+)\s+in\s*(\(\s*select.*\))\s*\;", "to" : "MERGE INTO $1 tgt\nUSING$4 src on tgt.$3=src.$3\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		{"from" : "update\s*\/*.*?\*\/\s*(\w*\.*\w+)\s+set\s+(.*?)where\s+(\w+)\s+in(.*\))\s*\;", "to" : "MERGE INTO $1 tgt\nUSING$4 src on tgt.$3=src.$3\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		
		{"from": "update\s+\/*.*?\*\/\s*(\w+\.\w+\s*\w+)\s+SET\s*(.*?)from\s*(\(.*\))\s*(\w+)\s+WHERE(.*)\;", "to": "MERGE INTO $1\nUSING$3 $4 on $5\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		{"from": "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET\b(.*?)\bFROM(\s*\(.*\)\s*\w+\s+)where(.*?)\;", "to" : "MERGE INTO $1 USING $3 on $4\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		{"from": "UPDATE\s*\/\*.*?\*\/\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\w*\.*\w*\.*\w+\s+\w*\s*)where(.*?)\;", "to" : "MERGE INTO $1 USING $3 on $4\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		{"from": "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\w*\.*\w*\.*\w+\s+\w*\s*)where(.*?)\;", "to" : "MERGE INTO $1 USING $3 on $4\nWHEN MATCHED THEN\nUPDATE SET $2;"},
		{"from" : "UPDATE\s+(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*\w+)\s+.*WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		{"from" : "UPDATE\s*\/*.*?\*\/\s*(\w*\.*\w*\.*\w+\s+\w*\s*)\bSET(\b.*?)\bFROM\s+(\(.*\)\s*\w+)\s+.*WHERE(.*?)\;", "to" : "merge into $1 using $3\n\t on $4\n\t WHEN MATCHED THEN \n\t UPDATE SET\n\t $2;"},
		
		{"from" : "delete\s*\/*.*?\*\/\s*from\s+(\w*\.*\w+)\s+where\s+(\w+)\s+in\s*(\(.*?\)\s*)\;", "to" : "merge into $1 tgt \nusing $3 src\n\t\t\t on tgt.$2 = src.$2\n\t\t\t WHEN MATCHED THEN DELETE;"},
		{"from" : "delete\s+from\s+(\w*\.*\w+)\s+where\s+(\w+)\s+in\s*(\(.*?\)\s*)\;", "to" : "merge into $1 tgt \nusing $3 src\n\t\t\t on tgt.$2 = src.$2\n\t\t\t WHEN MATCHED THEN DELETE;"},
		
		{"from": "(.*)SEGMENT CREATION IMMEDIATE.*", "to" : "$1;",  "statement_categories" : ["TABLE_DDL"]},
		{"from": "USING INDEX.*COMPUTE STATISTICS", "to" : "",  "statement_categories" : ["TABLE_DDL"]},
		//{"from": "\(\s*(LEAD.*)([+-])\s*INTERVAL\s+'(\d+)'\s+(SECOND|MINUTE|HOUR)\s*\)", "to" : "DATEADD($4,$2$3,$1)"},
		{"from": "^\s*MERGE\s(.*)WHEN\s+MATCHED\s+THEN(.*)WHERE(.*)$", "to" : "MERGE $1\nAND $3\nWHEN MATCHED THEN $2", "first_match" : "1"},
		//{"from": "DELETE\s+.*?\s+FROM\s*(.*?)\s+JOIN\s+(.*)\bON\b", "to" : "DELETE FROM $1 USING $2 WHERE", "first_match" : "1"},
		{"from": "\bCREATE\s+FLEX\s+TABLE\b.*?\;", "to" : ""},
		{"from" : "^(\s*COPY\b.*?)\;", "to" : "/* $1 */"},

		{"from": "\bSELECT\s+DROP_PARTITIONS\s*\(.*?\;", "to" : "-- REMOVED SELECT DROP_PARTITIONS"},
		{"from": "\bSELECT\s+DROP_PARTITION\s*\(.*?\;", "to" : "-- REMOVED SELECT DROP_PARTITION"}
		
		
		//{"from" : "over\s*(\(.*\)\)s*-\s*interval\s('\d+')\s+(\w+)", "to" : "over (timestampadd($3, $2, $1) )"}
		//{"from": "(.*)", "to" : "$1\nadd something",  "statement_categories" : ["TABLE_DDL"], "first_match" : "1"}
		
		//Logging
		//{"from" : "(.*UTIL_PKG\.OPEN_FILE.*)", "to" : "'TEMP'/* $1 */", "first_match" : "1"}
		
		
	],
	
	"function_subst" : [
		//{"from" : "CONVERT", "output_template" : "TO_TIMESTAMP_NTZ($2,'mm/dd/yyyy')","arg_pattern" : {"1" : "DATETIME","3" : "101"}},
		//{"from" : "CONVERT", "output_template" : "TO_TIMESTAMP_NTZ($2)","arg_pattern" : {"1" : "DATETIME"}},
		//{"from" : "CONVERT", "output_template" : "TO_CHAR($2,'yyyy-mm-dd hh:mi:ss.FF3')","arg_pattern" : {"3" : "121"}},
		//{"from" : "CONVERT", "output_template" : "TO_CHAR($2,'mm/dd/yyyy')","arg_pattern" : {"3" : "101"}},
		//{"from" : "CONVERT", "output_template" : "TO_CHAR($2,'mm-dd-yyyy')","arg_pattern" : {"3" : "110"}},
		//{"from" : "CONVERT", "output_template" : "TO_CHAR($2,'yyyymmdd')","arg_pattern" : {"3" : "112"}},
		{"from" : "CONVERT", "output_template" : "TO_NUMBER($2)","arg_pattern" : {"1" : "(INT|FLOAT)"}},
		{"from" : "GETDATE", "output_template" : "CURRENT_TIMESTAMP"},
				
		{"from": "\'DD\'\:\:varchar\(2\)", "to": "'DD'"},
		{"from": "geometry", "output_template" : "string"},
		{"from": "to_char", "num_args" : "1","output_template" : "string($1)"},
		{"from": "to_char", "num_args" : "2","output_template" : "WEEKOFYEAR($1)","arg_pattern" : {"2" : "'WW'"}},
		{"from": "to_char", "num_args" : "2","to" : "date_format"},
		
		{"from": "TRUNC", "num_args" : "1","output_template" : "date_trunc1('DAY',$1)"},
		{"from" : "TRUNC", "output_template" : "date_trunc1('DAY',$1)","arg_pattern" : {"2" : "DD"}},
		{"from": "TRUNC", "num_args" : "2", "output_template" : "date_trunc1($2,$1)"},
		{"from": "TRUNC", "num_args" : "3", "output_template" : "date_trunc1($2,$1,$3)"},
		{"from": "date_trunc1", "to" : "date_trunc"},
		
		{"from" : "LOCALTIMESTAMP", "output_template" : "CURRENT_TIMESTAMP()"},
		{"from" : "to_number","num_args" : "1","output_template" : "to_number($1,'999999999999999999999999999999999999.99')"},
		{"from" : "datediff","num_args" : "3","output_template" : "datediff(DAY,$2,$3)","arg_pattern" : {"1" : "(DD|\bD\b|'DAY')"}},
		{"from" : "datediff","num_args" : "3","output_template" : "datediff(SECOND,$2,$3)","arg_pattern" : {"1" : "(SS|\bS\b)"}},
		{"from" : "datediff","num_args" : "3","output_template" : "datediff(MONTH,$2,$3)","arg_pattern" : {"1" : "'MONTH'"}},
		{"from" : "TIMESTAMPADD","num_args" : "3","output_template" : "TIMESTAMPADD(SECOND,$2,$3)","arg_pattern" : {"1" : "'s'|ss|\bs\b|'SECOND'"}},
		
		{"from" : "timestampdiff","num_args" : "3","output_template" : "datediff(SECOND,$2,$3)","arg_pattern" : {"1" : "'second'"}},
		//{"from" : "datediff","num_args" : "3","output_template" : "datediff(DAY,$2,$3)","arg_pattern" : {"1" : "DD|'DD'|D|'D'|'DAY')"}},
		{"from" : "regexp_ilike", "to" : "regexp_like"},
		
		{"from" : "ISNULL", "to" : "NVL"},
		{"from" : "SPLIT_PARTB", "to" : "SPLIT_PART"},
		{"from" : "substrb", "to" : "SUBSTRING"},
		
		{"from" : "INSTR", "output_template" : "locate($2,$1)"},
		{"from" : "AGE_IN_MONTHS","output_template" :"floor(MONTHS_BETWEEN($1,$2))"},
		{"from" : "AGE_IN_MONTHS","output_template" :"floor(MONTHS_BETWEEN(current_timestamp,$1))"},
		{"from" : "PARTITION_BY","output_template" :"-- PARTITION BY($1)\n"},
		{"from" : "GROUP_BY","output_template" :"-- GROUP BY($1)\n"},
		//{"from" : "OVER","output_template" :"OVER($1 ORDER BY 1)"},

		//in arg_placement section, the key represents the target arg order, value represents the source arg order or default
		{"from": "WEEK", "to": "WEEKOFYEAR"},
		{"from": "MONTHS_BETWEEN", "to": "DATEDIFF"},  //swap args
		{"from": "datepart", "to" : "date_part"},
		{"from": "TO_DATE", "to" : "TO_TIMESTAMP"},
		{"from": "CURRENT_TIMESTAMP", "output_template" : "CURRENT_TIMESTAMP"},
		{"from": "STORAGE", "to" : "__BLANK__",  "statement_categories" : ["TABLE_DDL"]},
		{"from": "WITH_CLUSTERED", "to" : "__BLANK__"},
		{"from": "WITH_DISTRIBUTION", "to" : "__BLANK__"},
		{"from": "WITH_LOCATION", "to" : "__BLANK__"}
		
		//{"from": "ADD_MONTHS"}, -- as is
		//{"from": "LAST_DAY"} -- as is
	]
}

