Metadata-Version: 2.3
Name: ceda-datapoint
Version: 0.4.12
Summary: Datapoint provides python-based search/access tools for using data primarily from the CEDA Archive.
License: BSD 3
Author: Daniel Westwood
Author-email: daniel.westwood@stfc.ac.uk
Requires-Python: >=3.9,<4
Classifier: License :: Other/Proprietary License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: aiohttp (>=3.11.7,<4.0.0)
Requires-Dist: cfapyx (>=2025.2.27,<2026.0.0)
Requires-Dist: fsspec (>=2024.9.0,<2025.0.0)
Requires-Dist: kerchunk (>=0.2.6,<0.3.0)
Requires-Dist: matplotlib (>=3.9.2,<4.0.0)
Requires-Dist: pystac-client (>=0.7,<0.8)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Requires-Dist: rioxarray (>=0.15.0,<0.16.0)
Requires-Dist: xarray (>=2024.6.0,<2025.0.0)
Requires-Dist: xdoctest (>=1.2.0,<2.0.0)
Requires-Dist: zarr (>=2.15.0,<3.1)
Description-Content-Type: text/markdown

# DataPoint package

[![PyPI version](https://badge.fury.io/py/ceda-datapoint.svg)](https://pypi.python.org/pypi/ceda-datapoint/)

**ceda-datapoint** is a Python package which provides Python-based search/access tools for using data primarily from the CEDA Archive. For some time we've been generating so-called 
Cloud Formats which act as representations, references or mappers to data stored in the CEDA Archive. Most of our data is in archival formats like NetCDF/HDF which makes them great for use with the HPC architecture on which the archive resides (see the [JASMIN homepage](https://jasmin.ac.uk/) for more details), but not so good for open access outside of JASMIN. 

See the documentation at https://cedadev.github.io/datapoint for more information.

## Installation

The DataPoint module is now an installable module with pip!
```
pip install ceda-datapoint
```

## Basic usage

See the documentation for a more in-depth description of how to run a search query and access data.
```
from ceda_datapoint import DataPointClient
client = DataPointClient(org='CEDA)
# Continue to perform searches and access data
```

