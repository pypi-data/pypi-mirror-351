"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from lambdadb.types import BaseModel
from lambdadb.utils import FieldMetadata, PathParamMetadata, SecurityMetadata
import pydantic
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class DeleteProjectSecurityTypedDict(TypedDict):
    admin_api_key: str


class DeleteProjectSecurity(BaseModel):
    admin_api_key: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="x-api-key",
            )
        ),
    ]


class DeleteProjectRequestTypedDict(TypedDict):
    project_name: str
    r"""Project name."""


class DeleteProjectRequest(BaseModel):
    project_name: Annotated[
        str,
        pydantic.Field(alias="projectName"),
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Project name."""


class DeleteProjectResponseTypedDict(TypedDict):
    r"""Project delete request accepted."""

    message: NotRequired[str]


class DeleteProjectResponse(BaseModel):
    r"""Project delete request accepted."""

    message: Optional[str] = None
