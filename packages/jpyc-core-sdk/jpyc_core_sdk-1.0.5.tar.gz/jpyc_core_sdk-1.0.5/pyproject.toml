[project]
name = "jpyc-core-sdk"
version = "1.0.5"
requires-python = ">=3.12"
license = "MIT"
description = "A Python SDK for interacting with JPYCv2 contracts"
readme = "README.md"
keywords = [
    "jpyc",
    "jpy",
    "stablecoin",
    "ethereum",
    "evm",
    "erc20",
    "blockchain",
    "web3py",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Programming Language :: Python :: 3.15",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
authors = [
    { name = "SeiyaKobayashi", email = "eng@seiya.work" },
    { name = "mameta", email = "mameta.zk@gmail.com" },
]
maintainers = [
    { name = "SeiyaKobayashi", email = "eng@seiya.work" },
    { name = "mameta", email = "mameta.zk@gmail.com" },
]
# production dependencies
dependencies = [
    "eth-typing>=5.2.1",
    "pydantic>=2.11.4",
    "web3>=7.11.0",
]

[project.urls]
repository = "https://github.com/jcam1/python-sdk"
documentation = "https://github.com/jcam1/python-sdk/tree/main/docs/core"
"Bug Tracker" = "https://github.com/jcam1/python-sdk/issues/new?template=bug_report.md"

[dependency-groups]
# development dependencies
dev = [
    "mypy>=1.15.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "pytest-mock>=3.14.0",
    "ruff>=0.11.9",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# setuptools

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
jpyc_core_sdk = ["artifacts/*.json"]

# pytest

[tool.pytest.ini_options]
testpaths = ["../../tests"]
python_files = "test_*.py"
python_functions = "test_*"
filterwarnings = [
    "ignore::DeprecationWarning",
]

# ruff

[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4

[tool.ruff.lint]
select = ["B", "C4", "E", "F", "I", "UP", "W"]
ignore = ["B904"]
fixable = ["ALL"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

# mypy

[tool.mypy]
python_version = "3.12"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
ignore_missing_imports = false
