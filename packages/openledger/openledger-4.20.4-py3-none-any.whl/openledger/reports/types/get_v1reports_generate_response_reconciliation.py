# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class GetV1ReportsGenerateResponseReconciliation(UniversalBaseModel):
    plaid_accounts_total: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="plaidAccountsTotal")
    ] = None
    ledger_cash_balance: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="ledgerCashBalance")
    ] = None
    difference: typing.Optional[float] = None
    plaid_accounts: typing_extensions.Annotated[
        typing.Optional[typing.List[typing.Optional[typing.Any]]], FieldMetadata(alias="plaidAccounts")
    ] = pydantic.Field(default=None)
    """
    List of Plaid accounts and their balances
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
