# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_v1reports_overview_response_filter_info_date_range import GetV1ReportsOverviewResponseFilterInfoDateRange
from .get_v1reports_overview_response_filter_info_interval import GetV1ReportsOverviewResponseFilterInfoInterval
from .get_v1reports_overview_response_filter_info_status_filter import (
    GetV1ReportsOverviewResponseFilterInfoStatusFilter,
)


class GetV1ReportsOverviewResponseFilterInfo(UniversalBaseModel):
    status_filter: typing_extensions.Annotated[
        typing.Optional[GetV1ReportsOverviewResponseFilterInfoStatusFilter], FieldMetadata(alias="statusFilter")
    ] = None
    date_range: typing_extensions.Annotated[
        typing.Optional[GetV1ReportsOverviewResponseFilterInfoDateRange], FieldMetadata(alias="dateRange")
    ] = None
    interval: typing.Optional[GetV1ReportsOverviewResponseFilterInfoInterval] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
