# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawCategoriesClient, RawCategoriesClient
from .types.get_v1categories_response import GetV1CategoriesResponse
from .types.post_v1categories_request_type import PostV1CategoriesRequestType
from .types.post_v1categories_response import PostV1CategoriesResponse

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class CategoriesClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCategoriesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCategoriesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCategoriesClient
        """
        return self._raw_client

    def get_categories(
        self, *, entity_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> GetV1CategoriesResponse:
        """
        Retrieves all categories

        Parameters
        ----------
        entity_id : str
            The ID of the entity

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetV1CategoriesResponse
            Categories retrieved successfully

        Examples
        --------
        from openledger import OpenLedgerClient

        client = OpenLedgerClient(
            token="YOUR_TOKEN",
        )
        client.categories.get_categories(
            entity_id="entityId",
        )
        """
        _response = self._raw_client.get_categories(entity_id=entity_id, request_options=request_options)
        return _response.data

    def create_a_new_category(
        self,
        *,
        entity_id: str,
        name: str,
        type: PostV1CategoriesRequestType,
        sub_type_code: typing.Optional[int] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> PostV1CategoriesResponse:
        """
        Creates a new category for the specified entity

        Parameters
        ----------
        entity_id : str
            The ID of the entity to create the category for

        name : str
            The name of the category

        type : PostV1CategoriesRequestType
            The type of category. Must be one of:
            * ASSET - For asset accounts
            * LIABILITY - For liability accounts
            * EQUITY - For equity accounts
            * REVENUE - For revenue accounts
            * EXPENSE - For expense accounts

        sub_type_code : typing.Optional[int]
            Optional subtype code for the category

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PostV1CategoriesResponse
            Category created successfully

        Examples
        --------
        from openledger import OpenLedgerClient

        client = OpenLedgerClient(
            token="YOUR_TOKEN",
        )
        client.categories.create_a_new_category(
            entity_id="entityId",
            name="name",
            type="ASSET",
        )
        """
        _response = self._raw_client.create_a_new_category(
            entity_id=entity_id, name=name, type=type, sub_type_code=sub_type_code, request_options=request_options
        )
        return _response.data


class AsyncCategoriesClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCategoriesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCategoriesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCategoriesClient
        """
        return self._raw_client

    async def get_categories(
        self, *, entity_id: str, request_options: typing.Optional[RequestOptions] = None
    ) -> GetV1CategoriesResponse:
        """
        Retrieves all categories

        Parameters
        ----------
        entity_id : str
            The ID of the entity

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetV1CategoriesResponse
            Categories retrieved successfully

        Examples
        --------
        import asyncio

        from openledger import AsyncOpenLedgerClient

        client = AsyncOpenLedgerClient(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.categories.get_categories(
                entity_id="entityId",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_categories(entity_id=entity_id, request_options=request_options)
        return _response.data

    async def create_a_new_category(
        self,
        *,
        entity_id: str,
        name: str,
        type: PostV1CategoriesRequestType,
        sub_type_code: typing.Optional[int] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> PostV1CategoriesResponse:
        """
        Creates a new category for the specified entity

        Parameters
        ----------
        entity_id : str
            The ID of the entity to create the category for

        name : str
            The name of the category

        type : PostV1CategoriesRequestType
            The type of category. Must be one of:
            * ASSET - For asset accounts
            * LIABILITY - For liability accounts
            * EQUITY - For equity accounts
            * REVENUE - For revenue accounts
            * EXPENSE - For expense accounts

        sub_type_code : typing.Optional[int]
            Optional subtype code for the category

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PostV1CategoriesResponse
            Category created successfully

        Examples
        --------
        import asyncio

        from openledger import AsyncOpenLedgerClient

        client = AsyncOpenLedgerClient(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.categories.create_a_new_category(
                entity_id="entityId",
                name="name",
                type="ASSET",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.create_a_new_category(
            entity_id=entity_id, name=name, type=type, sub_type_code=sub_type_code, request_options=request_options
        )
        return _response.data
