# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .put_v1transactions_approve_response_results_item_transaction import (
    PutV1TransactionsApproveResponseResultsItemTransaction,
)


class PutV1TransactionsApproveResponseResultsItem(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Transaction ID
    """

    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether this transaction was approved successfully
    """

    transaction: typing.Optional[PutV1TransactionsApproveResponseResultsItemTransaction] = pydantic.Field(default=None)
    """
    The updated transaction data
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if the approval failed
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
