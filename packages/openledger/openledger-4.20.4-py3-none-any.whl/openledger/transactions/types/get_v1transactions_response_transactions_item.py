# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_v1transactions_response_transactions_item_credit_account import (
    GetV1TransactionsResponseTransactionsItemCreditAccount,
)
from .get_v1transactions_response_transactions_item_debit_account import (
    GetV1TransactionsResponseTransactionsItemDebitAccount,
)
from .get_v1transactions_response_transactions_item_plaid_account import (
    GetV1TransactionsResponseTransactionsItemPlaidAccount,
)
from .get_v1transactions_response_transactions_item_status import GetV1TransactionsResponseTransactionsItemStatus


class GetV1TransactionsResponseTransactionsItem(UniversalBaseModel):
    id: typing.Optional[str] = None
    entity_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="entityId")] = None
    timestamp: typing.Optional[dt.datetime] = None
    amount: typing.Optional[float] = None
    currency: typing.Optional[str] = None
    description: typing.Optional[str] = None
    debit_account_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="debitAccountId")] = None
    credit_account_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="creditAccountId")] = None
    status: typing.Optional[GetV1TransactionsResponseTransactionsItemStatus] = None
    metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    date: typing.Optional[dt.datetime] = None
    transaction_date: typing.Optional[dt.datetime] = None
    account_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accountType")] = None
    financial_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="financialType")] = None
    category: typing.Optional[str] = None
    category_id: typing.Optional[str] = None
    debit_account: typing_extensions.Annotated[
        typing.Optional[GetV1TransactionsResponseTransactionsItemDebitAccount], FieldMetadata(alias="debitAccount")
    ] = None
    credit_account: typing_extensions.Annotated[
        typing.Optional[GetV1TransactionsResponseTransactionsItemCreditAccount], FieldMetadata(alias="creditAccount")
    ] = None
    plaid_account: typing.Optional[GetV1TransactionsResponseTransactionsItemPlaidAccount] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
