# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_v1transactions_counterparties_response_counterparties_item import (
    GetV1TransactionsCounterpartiesResponseCounterpartiesItem,
)


class GetV1TransactionsCounterpartiesResponse(UniversalBaseModel):
    success: typing.Optional[bool] = None
    counterparties: typing.Optional[typing.List[GetV1TransactionsCounterpartiesResponseCounterpartiesItem]] = None
    next_cursor: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="nextCursor")] = pydantic.Field(
        default=None
    )
    """
    Cursor for the next page of results
    """

    has_more: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="hasMore")] = pydantic.Field(
        default=None
    )
    """
    Whether there are more results available
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
