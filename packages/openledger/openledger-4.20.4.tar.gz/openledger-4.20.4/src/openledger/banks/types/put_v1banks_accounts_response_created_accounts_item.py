# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class PutV1BanksAccountsResponseCreatedAccountsItem(UniversalBaseModel):
    id: typing.Optional[str] = None
    account_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accountName")] = None
    account_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accountType")] = None
    account_mask: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="accountMask")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
