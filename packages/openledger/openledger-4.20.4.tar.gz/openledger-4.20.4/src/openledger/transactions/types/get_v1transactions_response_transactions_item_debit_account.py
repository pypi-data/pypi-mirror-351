# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class GetV1TransactionsResponseTransactionsItemDebitAccount(UniversalBaseModel):
    id: typing.Optional[str] = None
    name: typing.Optional[str] = None
    type: typing.Optional[str] = None
    financial_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="financialType")] = None
    code: typing.Optional[str] = None
    sub_type_code: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="subTypeCode")] = None
    is_category: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="isCategory")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
