# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class PutV1EntitiesResponse(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier of the updated entity
    """

    external_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="externalId")] = pydantic.Field(
        default=None
    )
    """
    External identifier for the entity
    """

    legal_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="legalName")] = pydantic.Field(
        default=None
    )
    """
    Updated legal name
    """

    tin: typing.Optional[str] = pydantic.Field(default=None)
    """
    Updated Tax Identification Number
    """

    us_state: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="usState")] = pydantic.Field(
        default=None
    )
    """
    Updated US state code
    """

    entity_type: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="entityType")] = pydantic.Field(
        default=None
    )
    """
    Updated entity type
    """

    phone_number: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="phoneNumber")] = (
        pydantic.Field(default=None)
    )
    """
    Updated phone number
    """

    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    Updated status
    """

    updated_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="updatedAt")] = (
        pydantic.Field(default=None)
    )
    """
    When the entity was last updated
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
