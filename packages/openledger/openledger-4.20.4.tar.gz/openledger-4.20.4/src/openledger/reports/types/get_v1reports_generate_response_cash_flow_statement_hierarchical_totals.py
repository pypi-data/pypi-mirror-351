# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class GetV1ReportsGenerateResponseCashFlowStatementHierarchicalTotals(UniversalBaseModel):
    total_operating_activities: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalOperatingActivities")
    ] = None
    total_investing_activities: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalInvestingActivities")
    ] = None
    total_financing_activities: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalFinancingActivities")
    ] = None
    net_change_in_cash: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="netChangeInCash")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
