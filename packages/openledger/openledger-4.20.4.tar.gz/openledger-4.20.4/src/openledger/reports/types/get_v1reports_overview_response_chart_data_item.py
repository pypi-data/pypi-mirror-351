# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class GetV1ReportsOverviewResponseChartDataItem(UniversalBaseModel):
    date: typing.Optional[str] = pydantic.Field(default=None)
    """
    Formatted date (e.g., "Jan 2024" for January)
    """

    revenue: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="Revenue")] = None
    expenses: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="Expenses")] = None
    profit: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="Profit")] = None
    value: typing.Optional[float] = pydantic.Field(default=None)
    """
    Cash balance value
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
