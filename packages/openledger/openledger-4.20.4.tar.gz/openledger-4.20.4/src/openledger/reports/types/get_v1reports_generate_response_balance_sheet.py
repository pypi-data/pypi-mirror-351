# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_v1reports_generate_response_balance_sheet_hierarchical import (
    GetV1ReportsGenerateResponseBalanceSheetHierarchical,
)


class GetV1ReportsGenerateResponseBalanceSheet(UniversalBaseModel):
    hierarchical: typing.Optional[GetV1ReportsGenerateResponseBalanceSheetHierarchical] = None
    total_current_assets: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalCurrentAssets")
    ] = None
    total_non_current_assets: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalNonCurrentAssets")
    ] = None
    total_assets: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="totalAssets")] = None
    total_current_liabilities: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalCurrentLiabilities")
    ] = None
    total_non_current_liabilities: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="totalNonCurrentLiabilities")
    ] = None
    total_liabilities: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="totalLiabilities")] = (
        None
    )
    total_equity: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="totalEquity")] = None
    liabilities_and_equity: typing_extensions.Annotated[
        typing.Optional[float], FieldMetadata(alias="liabilitiesAndEquity")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
