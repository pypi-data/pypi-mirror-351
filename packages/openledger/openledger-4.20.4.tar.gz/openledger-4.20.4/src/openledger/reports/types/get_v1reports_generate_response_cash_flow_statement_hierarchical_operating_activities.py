# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .get_v1reports_generate_response_cash_flow_statement_hierarchical_operating_activities_adjustments import (
    GetV1ReportsGenerateResponseCashFlowStatementHierarchicalOperatingActivitiesAdjustments,
)


class GetV1ReportsGenerateResponseCashFlowStatementHierarchicalOperatingActivities(UniversalBaseModel):
    net_income: typing_extensions.Annotated[typing.Optional[float], FieldMetadata(alias="netIncome")] = None
    adjustments: typing.Optional[
        GetV1ReportsGenerateResponseCashFlowStatementHierarchicalOperatingActivitiesAdjustments
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
