# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class GetV1ReportsGeneralLedgerResponseAccountsItemBalance(UniversalBaseModel):
    debits_pending: typing.Optional[str] = pydantic.Field(default=None)
    """
    Pending debit amount
    """

    debits_posted: typing.Optional[str] = pydantic.Field(default=None)
    """
    Posted debit amount
    """

    credits_pending: typing.Optional[str] = pydantic.Field(default=None)
    """
    Pending credit amount
    """

    credits_posted: typing.Optional[str] = pydantic.Field(default=None)
    """
    Posted credit amount
    """

    timestamp: typing.Optional[str] = pydantic.Field(default=None)
    """
    Timestamp of the balance
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
