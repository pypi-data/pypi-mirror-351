name: Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    uses: ./.github/workflows/build-test.yml

  tag-releases:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    outputs:
      new_version: ${{ steps.tag_releases.outputs.new_version }}
    steps:
      - uses: actions/checkout@v3
      - name: Tag Releases
        id: tag_releases
        run: |
          version="$(grep -Po "(?<=^version = \")[0-9\.]+" pyproject.toml)"
          echo "Current version: '$version'"
          if git ls-remote --tags origin | grep "${version}$"; then
            echo Current version has already been tagged. Skipping
          else
            echo Version has been updated. Tagging.
            git tag $version
            echo "new_version=$version" >> $GITHUB_OUTPUT
          fi
      - name: Push Tags
        run: |
          git push --tags || :

  publish:
    needs: [build-and-test, tag-releases]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Publish package
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}
