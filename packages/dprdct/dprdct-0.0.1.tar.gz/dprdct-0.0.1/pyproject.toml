[build-system]
requires = ["hatchling >= 1.26"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/dprdct/__about__.py"


[project]
name = "dprdct"
dynamic = ["version"]            # uv fills this from the source file below
description = ""
readme = "README.md"
requires-python = ">=3.7"
license = "MIT"
keywords = ["rag","vectors","retrieval-augmented-generation","retrieval","vector-database","vector-search","vector-store","embeddings","llm","large-language-models"]
authors = [
  { name = "Ross Murphy", email = "ross.a.murphy@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "load-dotenv>=0.1.0",
    "pydantic>=2.5.3",
    "pytest>=7.4.4",
    "requests",
    "ruff>=0.11.8",
    "tqdm",
]

###############################################################################
#                              uv-specific configuration
###############################################################################
sources = [
  { path = "src/dprdct/__about__.py", pattern = "__version__ = \"(?P<version>[^\"]+)\"" }
]

[tool.uv]

# Options parsed automatically by `uv publish` (all are optional;
# credentials are *not* stored here â€“ rely on ~/.pypirc or env vars).
[tool.uv.publish]
repository    = "pypi"
skip-existing = true
sign          = false

###############################################################################
#                               auxiliary tooling
###############################################################################
[tool.pytest]
testpaths = ["tests"]

[tool.black]
target-version = ["py37"]
line-length = 120
skip-string-normalization = true

[tool.ruff]
target-version = "py37"
line-length = 120
select = [
  "A", "ARG", "B", "C", "DTZ", "E", "EM", "F", "FBT", "I", "ICN", "ISC", "N",
  "PLC", "PLE", "PLR", "PLW", "Q", "RUF", "S", "T", "TID", "UP", "W", "YTT",
]
ignore = [
  "UP006",
  # Allow non-abstract empty methods in ABCs
  "B027",
  # Allow boolean positional values such as dict.get(..., True)
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
]
unfixable = ["F401"]   # Don't touch unused imports

[tool.ruff.isort]
known-first-party = ["dprdct"]

[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.per-file-ignores]
"tests/**/*" = ["PLR2004", "S101", "TID252"]

[tool.coverage.run]
source_pkgs = ["dprdct", "tests"]
branch       = true
parallel     = true
omit         = ["src/dprdct/__about__.py"]

[tool.coverage.paths]
dotproduct_sdk = ["src/dprdct", "*/dprdct-python/src/dprdct"]
tests          = ["tests", "*/python_sdk/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
