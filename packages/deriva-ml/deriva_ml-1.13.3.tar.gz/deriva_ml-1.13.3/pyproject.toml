[build-system]
requires = ["setuptools>=64", "wheel", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"


[project]
name = "deriva-ml"
dynamic = ["version"]
authors = [
    { name = "ISRD", email = "isrd-dev@isi.edu" },
]
description = "Utilities to simplify use of Dervia and Pandas to create reproducable ML pipelines"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "bump-my-version",
    "deriva~=1.7.7",
    "pandas",
    "regex~=2024.7.24",
    "pydantic>=2.10.6",
    "semver>3.0.0",
     "setuptools>=64",
    "setuptools-scm>=8.0",
    "nbstripout",
    "papermill"
]

[tool.setuptools.package-data]
deriva_ml = ["schema_setup/*.json"]

[tool.setuptools_scm]

[tool.bumpversion]
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[project.scripts]
deriva-ml-table-comments-utils = "deriva_ml.schema_setup.table_comments_utils:main"
deriva-ml-create-schema = "deriva_ml.schema_setup.create_schema:main"
deriva-ml-alter-annotation = "deriva_ml.schema_setup.alter_annotation:main"
deriva-ml-run-notebook = "deriva_ml.run_notebook:main"


[metadata]
license = "Apache 2.0"
keywords = ["deriva-ml"]