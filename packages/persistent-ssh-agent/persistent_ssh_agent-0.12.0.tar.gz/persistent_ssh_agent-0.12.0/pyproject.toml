[tool.poetry]
name = "persistent-ssh-agent"
version = "0.12.0"
description = "A Python library for persistent SSH agent management with automatic key handling, focusing on Windows compatibility and seamless Git integration."
authors = ["longhao <hal.long@outlook.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8"
cryptography = ">=45.0.0"
loguru = ">=0.7.0"
click = ">=8.1.0"

[tool.poetry.scripts]
persistent_ssh_agent = "persistent_ssh_agent.cli:main"
persistent-ssh-agent = "persistent_ssh_agent.cli:main"

[tool.poetry.group.docs.dependencies]
sphinx = ">=8.0"
furo = "*"
sphinx-autobuild = "*"
sphinx-copybutton = "*"
doc8 = ">=1.1.1"
sphinx-intl = "*"
myst-parser = ">=4.0.0"

[tool.poetry.group.test.dependencies]
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
pytest-benchmark = "*"
pytest-timeout = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.12.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
    "persistent_ssh_agent/__version__.py"
]

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311', 'py312', "py313"]
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | _build
    | buck-out
    | build
    | transx/_vendor
    | dist
    | examples/locales
    | examples/demo.py
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.isort]
profile = "black"
atomic = true
include_trailing_comma = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
src_paths = ["transx", "tests"]
filter_files = true
known_first_party = "transx"

# Enforce import section headers.
import_heading_future = "Import future modules"
import_heading_stdlib = "Import built-in modules"
import_heading_thirdparty = "Import third-party modules"
import_heading_firstparty = "Import local modules"

force_sort_within_sections = true
force_single_line = true

# All project unrelated unknown imports belong to third-party.
default_section = "THIRDPARTY"
skip_glob = []


[tool.ruff]
line-length = 120
target-version = "py37"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "B",   # flake8-bugbear
    "C",   # flake8-comprehensions
    "I",   # isort
    "Q",   # flake8-quotes
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
]

ignore = [
    "I001",  # isort
    "B904",  # raise-without-from
    "F821",  # undefined-name - for unicode type
    "F541",  # f-string
    "SIM108", # if-else-block-instead-of-if-exp
    "PTH",    # all pathlib related rules
    "UP",     # all upgrade suggestions
    "ARG001", # unused function argument
    "ARG002", # unused method argument
    "D100",   # missing module docstring
    "D101",   # missing class docstring
    "D102",   # missing method docstring
    "D103",   # missing function docstring
    "D104",   # missing package docstring
    "D105",   # missing magic method docstring
    "D107",   # missing __init__ docstring
    "W293",   # blank line contains whitespace
    "E501",   # line too long
    "C901",   # function too complex
    "E402",   # module level import not at top of file
    "RUF005", # consider using list expansion syntax
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "W291", "SIM102", "SIM103", "SIM117", "F811"]
"examples/*" = ["D", "RUF001"]
"noxfile.py" = ["E402"]

[tool.ruff.lint.isort]
known-first-party = ["transx"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "double"

exclude = [
    ".git",
    ".nox",
    ".tox",
    ".venv",
    "build",
    "dist",
    "venv",
]

[tool.towncrier]
package = "persistent_ssh_agent"
package_dir = "."
filename = "CHANGELOG.md"
directory = "changelog.d"
title_format = "## [{version}] - {project_date}"
template = "changelog.d/template.rst"
underlines = ["", "", ""]
issue_format = "[#{issue}](https://github.com/loonghao/persistent_ssh_agent/issues/{issue})"

  [[tool.towncrier.type]]
  directory = "feature"
  name = "Features"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "bugfix"
  name = "Bug Fixes"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "doc"
  name = "Documentation"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "removal"
  name = "Removals and Deprecations"
  showcontent = true

  [[tool.towncrier.type]]
  directory = "misc"
  name = "Misc"
  showcontent = true
