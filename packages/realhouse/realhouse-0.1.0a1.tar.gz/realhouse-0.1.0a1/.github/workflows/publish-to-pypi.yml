# .github/workflows/publish-to-pypi.yml
name: Publish to PyPI

on:
  # Trigger on new releases
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12', '3.13']
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        pytest tests/
    
    - name: Run flake8
      run: |
        flake8 src/realhouse/ tests/ --max-line-length=88 --max-complexity=10

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for setuptools_scm
        ref: ${{ github.event.release.tag_name }}  # Checkout the exact release tag
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine setuptools_scm
    
    - name: Verify clean version
      run: |
        python -c "
        import setuptools_scm
        version = setuptools_scm.get_version()
        print(f'Detected version: {version}')
        if '+' in version:
            raise ValueError(f'Dev version detected: {version}. Should be building from release tag.')
        "
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check distribution
      run: |
        twine check dist/*
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment: pypi
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.event.release.tag_name }}  # Checkout the exact release tag
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}