"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations

from typing import Literal

import pydantic
from pydantic.functional_validators import AfterValidator
from typing_extensions import Annotated, TypedDict

from friendli_core.types import BaseModel
from friendli_core.utils import validate_const


class PlatformFilesDeleteResultTypedDict(TypedDict):
    deleted: bool
    r"""Deletion status. `true` if deleted, otherwise `false`."""
    id: str
    r"""ID of the file of interest."""
    object: Literal["file"]
    r"""The object type, which is always `file`."""


class PlatformFilesDeleteResult(BaseModel):
    deleted: bool
    r"""Deletion status. `true` if deleted, otherwise `false`."""

    id: str
    r"""ID of the file of interest."""

    OBJECT: Annotated[
        Annotated[Literal["file"], AfterValidator(validate_const("file"))],
        pydantic.Field(alias="object"),
    ] = "file"
    r"""The object type, which is always `file`."""
