[project]
name = "mcp-pack"
version = "0.3.0"
authors = [
  { name="Katherine Rosenfeld"},
]
description = "Package for accessing package artifacts via MCP"
readme = "README.md"
requires-python = ">=3.11"

dependencies = [
    "ipykernel>=6.29.5",
    "mcp[cli]>=1.6.0",
    "qdrant-client>=1.13.3",
    "sentence-transformers>=4.1.0",
    "nbconvert>=7.16.6",
    "nbformat>=5.10.4",
    "openai>=1.75.0",
    "python-dotenv>=1.1.0",
]

[dependency-groups]
dev= [
    "ipykernel>=6.29.5",
    "mcp[cli]>=1.6.0",
    "qdrant-client>=1.13.3",
    "sentence-transformers>=4.1.0",
    "nbconvert>=7.16.6",
    "nbformat>=5.10.4",
    "openai>=1.75.0",
    "python-dotenv>=1.1.0",

]
mcp_client = [
    "langchain>=0.3.24",
    "langchain-mcp-adapters>=0.0.9",
    "langgraph>=0.4.0",
    "langchain-core>=0.3.56",
    "langchain-openai>=0.3.14",
    "streamlit>=1.45.0",
    "grandalf>=0.8",
    "nest-asyncio>=1.6.0",
    "fastapi>=0.115.12",
    "uvicorn>=0.34.2",
    "graphviz>=0.20.3",
    "python-dotenv>=1.1.0",
]

[build-system]
requires = ["hatchling>=1.11.0"]
build-backend = "hatchling.build"

[project.scripts]
mcp_pack = "mcp_pack.cli:main"

[tool.uv]
default-groups = ["dev"]

[tool.bumpversion]
current_version = "0.3.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'version = "{current_version}"'
replace = 'version = "{new_version}"'

[[tool.bumpversion.files]]
filename = "src/mcp_pack/version.py"
search = '__version__ = "{current_version}"'
replace = '__version__ = "{new_version}"'

[[tool.bumpversion.files]]
filename = 'src/mcp_pack/version.py'
search = "__versiondate__ = '\\d{{4}}-\\d{{2}}-\\d{{2}}'"
replace = "__versiondate__ = '{now:%Y-%m-%d}'"
regex = true
