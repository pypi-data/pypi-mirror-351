project_name: Nengo
pkg_name: nengo
repo_name: nengo/nengo
description: Tools for building and simulating large-scale neural models
author: Nengo Developers
author_email: terry.stewart@gmail.com

copyright_start: 2013
license: gpl-v2
main_branch: main

license_rst: {}

contributing_rst: {}

contributors_rst: {}

manifest_in:
  graft:
    - nengo-data
  recursive-include:
    - nengo *.md
    - nengo *.rst
    - nengo *.txt
    - nengo *.npz

setup_py:
  package_data:
    nengo:
      - nengo-data/nengorc
  include_package_data: True
  py_modules:
    - pytest_nengo
  entry_points:
    nengo.backends:
      - reference = nengo:Simulator
    pytest11:
      - nengo = pytest_nengo
  install_req:
    - numpy>=1.19
  docs_req:
    - sphinx>=1.8
    - jupyter
    - matplotlib>=1.4
    - nbsphinx
    - numpydoc>=0.6
    - nengo_sphinx_theme>=1.2.0
  optional_req:
    - scipy>=0.13
    - scikit-learn
  tests_req:
    - jupyter
    - matplotlib>=1.4
    - pytest>=3.9.1
    - pytest-allclose
    - pytest-plt
    - pytest-rng
  classifiers:
    - "Development Status :: 5 - Production/Stable"
    - "Framework :: Nengo"
    - "Intended Audience :: Science/Research"
    - "Operating System :: OS Independent"
    - "Programming Language :: Python :: 3 :: Only"
    - "Programming Language :: Python :: 3.6"
    - "Programming Language :: Python :: 3.7"
    - "Programming Language :: Python :: 3.8"
    - "Programming Language :: Python :: 3.9"
    - "Topic :: Scientific/Engineering :: Artificial Intelligence"

setup_cfg:
  codespell:
    ignore_words:
      - bu
      - inh
  coverage:
    exclude_lines:
      - "^[ \\t]*assert False"
    omit_files:
      - "/tmp/pytest-*"
      - "*/_vendor/*"
      - "*/version.py"
      - "*/spa/*"
      # omit filter_design.py until it gets moved to nengo/_vendor
      - "nengo/utils/filter_design.py"
  flake8:
    exclude:
      - compat.py
      - nengo/_vendor
  pytest:
    norecursedirs:
      - "plots"
      - "nengo/_vendor"
    filterwarnings:
      - always
      - "ignore::ImportWarning"
      - "ignore:(Buffer|Memory|The nengo\\.spa):DeprecationWarning"
      - "ignore:Skipping some optimization steps"
      - "ignore:SciPy is not installed"
      - "ignore:numpy.(dtype|ufunc) size changed"
      - 'ignore:Object <BasalGanglia "bg"> has already been built'
      - 'ignore:Object <Thalamus "thalamus"> has already been built'
      - "ignore:IPython.core.inputsplitter is deprecated"
      - "ignore:'step_math' has been renamed"
    plt_filename_drop:
      - ^nengo\.
      - tests\.
  pylint:
    ignore:
      - _vendor
      - compat.py
      - spa
    disable:
      - missing-docstring
      - redefined-outer-name
    known_third_party:
      - mpl_toolkits
      - pytest_allclose

docs_conf_py:
  intersphinx_mapping:
    scipy: "https://docs.scipy.org/doc/scipy/reference"
    sklearn: "https://scikit-learn.org/dev"
  extensions:
    - nengo_sphinx_theme.ext.autoautosummary
    - nengo_sphinx_theme.ext.resolvedefaults
    - sphinx.ext.inheritance_diagram
  doctest_setup:
    - "import numpy as np"
    - "if np.__version__ >= '1.14':"
    - "    np.set_printoptions(legacy='1.13')"
    - "import matplotlib.pyplot as plt"
  html_redirects:
    backend_api.html: backend-api.html
    examples/advanced/functions_and_tuning_curves.html: examples/advanced/functions-and-tuning-curves.html
    examples/advanced/inhibitory_gating.html: examples/advanced/inhibitory-gating.html
    examples/advanced/matrix_multiplication.html: examples/advanced/matrix-multiplication.html
    examples/advanced/nef_algorithm.html: examples/advanced/nef-algorithm.html
    examples/advanced/nef_summary.html: examples/advanced/nef-summary.html
    examples/basic/2d_representation.html: examples/basic/2d-representation.html
    examples/basic/communication_channel.html: examples/basic/communication-channel.html
    examples/basic/many_neurons.html: examples/basic/many-neurons.html
    examples/basic/single_neuron.html: examples/basic/single-neuron.html
    examples/basic/two_neurons.html: examples/basic/two-neurons.html
    examples/dynamics/controlled_integrator.html: examples/dynamics/controlled-integrator.html
    examples/dynamics/controlled_integrator2.html: examples/dynamics/controlled-integrator2.html
    examples/dynamics/controlled_oscillator.html: examples/dynamics/controlled-oscillator.html
    examples/dynamics/lorenz_attractor.html: examples/dynamics/lorenz-attractor.html
    examples/learning/learn_associations.html: examples/learning/learn-associations.html
    examples/learning/learn_communication_channel.html: examples/learning/learn-communication-channel.html
    examples/learning/learn_product.html: examples/learning/learn-product.html
    examples/learning/learn_square.html: examples/learning/learn-square.html
    examples/learning/learn_unsupervised.html: examples/learning/learn-unsupervised.html
    examples/networks/basal_ganglia.html: examples/networks/basal-ganglia.html
    examples/networks/ensemble_array.html: examples/networks/ensemble-array.html
    examples/networks/integrator_network.html: examples/networks/integrator-network.html
    examples/usage/delay_node.html: examples/usage/delay-node.html
    examples/usage/network_design_advanced.html: examples/usage/network-design-advanced.html
    examples/usage/network_design.html: examples/usage/network-design.html
    examples/usage/rectified_linear.html: examples/usage/rectified-linear.html
    examples/usage/tuning_curves.html: examples/usage/tuning-curves.html
    frontend_api.html: frontend-api.html
    getting_started.html: getting-started.html
    improving_performance.html: improving-performance.html
    user_guide.html: user-guide.html
  autoautosummary_change_modules:
    nengo:
      - nengo.learning_rules.PES
      - nengo.learning_rules.RLS
      - nengo.learning_rules.BCM
      - nengo.learning_rules.Oja
      - nengo.learning_rules.Voja
      - nengo.neurons.Direct
      - nengo.neurons.RectifiedLinear
      - nengo.neurons.SpikingRectifiedLinear
      - nengo.neurons.Sigmoid
      - nengo.neurons.Tanh
      - nengo.neurons.LIF
      - nengo.neurons.LIFRate
      - nengo.neurons.AdaptiveLIF
      - nengo.neurons.AdaptiveLIFRate
      - nengo.neurons.Izhikevich
      - nengo.neurons.RegularSpiking
      - nengo.neurons.PoissonSpiking
      - nengo.neurons.StochasticSpiking
      - nengo.synapses.LinearFilter
      - nengo.synapses.Lowpass
      - nengo.synapses.Alpha
      - nengo.transforms.Dense
      - nengo.transforms.Sparse
      - nengo.transforms.Convolution
      - nengo.transforms.ConvolutionTranspose
      - nengo.transforms.Conv
      - nengo.transforms.ConvTranspose
      - nengo.config.Config
    nengo.builder:
      - nengo.builder.operator.Operator
      - nengo.builder.signal.Signal

ci_scripts:
  - template: static
  - template: test
    pip_install:
      - $NUMPY
  - template: test
    output_name: test-coverage
    pip_install:
      - $NUMPY
    coverage: true
  - template: test
    output_name: test-coverage-scipy
    pip_install:
      - $NUMPY
      - scipy
      - scikit-learn
    coverage: true
  - template: docs
    pip_install:
      - $NUMPY
      - scipy
      - matplotlib
  - template: deploy
    wheel: true

pyproject_toml:
  black_exclude:
    - "_vendor/"

version_py:
  major: 4
  minor: 1
  patch: 0
  release: true

