# coding: utf-8

"""
    IIoT OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiot_openapi.models.sub_event_prop_setting import SubEventPropSetting

class TestSubEventPropSetting(unittest.TestCase):
    """SubEventPropSetting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubEventPropSetting:
        """Test SubEventPropSetting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubEventPropSetting`
        """
        model = SubEventPropSetting()
        if include_optional:
            return SubEventPropSetting(
                name = '',
                start_trigger = iiot_openapi.models.event_trigger.EventTrigger(
                    condition = '', 
                    duratioin = '', ),
                end_trigger = iiot_openapi.models.event_trigger.EventTrigger(
                    condition = '', 
                    duratioin = '', ),
                expressions = [
                    iiot_openapi.models.event_gen_expression.EventGenExpression(
                        name = '', 
                        class = '', 
                        condition = '', 
                        expression = '', 
                        triggers = [
                            ''
                            ], )
                    ]
            )
        else:
            return SubEventPropSetting(
                name = '',
                start_trigger = iiot_openapi.models.event_trigger.EventTrigger(
                    condition = '', 
                    duratioin = '', ),
        )
        """

    def testSubEventPropSetting(self):
        """Test SubEventPropSetting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
