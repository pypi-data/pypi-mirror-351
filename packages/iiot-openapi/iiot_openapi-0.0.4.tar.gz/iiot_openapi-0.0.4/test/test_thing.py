# coding: utf-8

"""
    IIoT OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiot_openapi.models.thing import Thing

class TestThing(unittest.TestCase):
    """Thing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Thing:
        """Test Thing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Thing`
        """
        model = Thing()
        if include_optional:
            return Thing(
                thing_id = '',
                thing_name = '',
                model_id = '',
                tags = {
                    'key' : ''
                    },
                description = '',
                properties = {
                    'key' : iiot_openapi.models.reference_conf_dto.ReferenceConfDto(
                        property_ref = iiot_openapi.models.property_ref.PropertyRef(
                            thing_id = '', 
                            property_path = '', ), 
                        value = iiot_openapi.models.value.value(), )
                    },
                components = {
                    'key' : iiot_openapi.models.component_reference_conf_dto.ComponentReferenceConfDto(
                        properties = {
                            'key' : iiot_openapi.models.reference_conf_dto.ReferenceConfDto(
                                property_ref = iiot_openapi.models.property_ref.PropertyRef(
                                    thing_id = '', 
                                    property_path = '', ), 
                                value = iiot_openapi.models.value.value(), )
                            }, )
                    },
                created_time = '',
                updated_time = ''
            )
        else:
            return Thing(
                thing_id = '',
                thing_name = '',
                model_id = '',
        )
        """

    def testThing(self):
        """Test Thing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
