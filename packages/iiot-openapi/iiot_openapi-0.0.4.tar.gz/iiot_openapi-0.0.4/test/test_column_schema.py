# coding: utf-8

"""
    IIoT OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiot_openapi.models.column_schema import ColumnSchema

class TestColumnSchema(unittest.TestCase):
    """ColumnSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ColumnSchema:
        """Test ColumnSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ColumnSchema`
        """
        model = ColumnSchema()
        if include_optional:
            return ColumnSchema(
                id = '',
                name = '',
                dic_id = '',
                data_schema = iiot_openapi.models.data_schema.DataSchema(
                    type = 'bool', 
                    integer_schema = iiot_openapi.models.integer_schema.IntegerSchema(
                        min = 56, 
                        max = 56, ), 
                    double_schema = iiot_openapi.models.double_schema.DoubleSchema(
                        min = 1.337, 
                        max = 1.337, ), 
                    string_schema = iiot_openapi.models.string_schema.StringSchema(
                        min_length = 56, 
                        max_length = 56, ), 
                    object_schema = iiot_openapi.models.string_schema.StringSchema(
                        min_length = 56, 
                        max_length = 56, ), )
            )
        else:
            return ColumnSchema(
                id = '',
                name = '',
                data_schema = iiot_openapi.models.data_schema.DataSchema(
                    type = 'bool', 
                    integer_schema = iiot_openapi.models.integer_schema.IntegerSchema(
                        min = 56, 
                        max = 56, ), 
                    double_schema = iiot_openapi.models.double_schema.DoubleSchema(
                        min = 1.337, 
                        max = 1.337, ), 
                    string_schema = iiot_openapi.models.string_schema.StringSchema(
                        min_length = 56, 
                        max_length = 56, ), 
                    object_schema = iiot_openapi.models.string_schema.StringSchema(
                        min_length = 56, 
                        max_length = 56, ), ),
        )
        """

    def testColumnSchema(self):
        """Test ColumnSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
