# coding: utf-8

"""
    IIoT OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiot_openapi.models.dictionary import Dictionary

class TestDictionary(unittest.TestCase):
    """Dictionary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Dictionary:
        """Test Dictionary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Dictionary`
        """
        model = Dictionary()
        if include_optional:
            return Dictionary(
                dic_id = '',
                dic_name = '',
                data_type = '',
                catalog_id = '',
                values = [
                    iiot_openapi.models.dic_item.DicItem(
                        value = '', 
                        name = '', 
                        description = '', )
                    ],
                create_time = '',
                update_time = ''
            )
        else:
            return Dictionary(
                dic_id = '',
                dic_name = '',
                data_type = '',
                catalog_id = '',
                values = [
                    iiot_openapi.models.dic_item.DicItem(
                        value = '', 
                        name = '', 
                        description = '', )
                    ],
                create_time = '',
                update_time = '',
        )
        """

    def testDictionary(self):
        """Test Dictionary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
