# coding: utf-8

"""
    IIoT OpenAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 5.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiot_openapi.models.batch_list_thing_snapshots_req_things_inner import BatchListThingSnapshotsReqThingsInner

class TestBatchListThingSnapshotsReqThingsInner(unittest.TestCase):
    """BatchListThingSnapshotsReqThingsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchListThingSnapshotsReqThingsInner:
        """Test BatchListThingSnapshotsReqThingsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchListThingSnapshotsReqThingsInner`
        """
        model = BatchListThingSnapshotsReqThingsInner()
        if include_optional:
            return BatchListThingSnapshotsReqThingsInner(
                thing_id = '',
                components = {
                    'key' : iiot_openapi.models.properties_get_req.PropertiesGetReq(
                        properties = [
                            ''
                            ], 
                        components = {
                            'key' : iiot_openapi.models.properties_get_req.PropertiesGetReq()
                            }, )
                    }
            )
        else:
            return BatchListThingSnapshotsReqThingsInner(
                thing_id = '',
        )
        """

    def testBatchListThingSnapshotsReqThingsInner(self):
        """Test BatchListThingSnapshotsReqThingsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
