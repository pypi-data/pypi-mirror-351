[build-system]
build-backend = "setuptools.build_meta"
requires = [
  "setuptools >= 61.0.0",
  "versioneer[toml]==0.29",
]

[project]
name = "access_py_telemetry"
description = "Contains ipython extensions to automatically add telemetry to registered function calls from Ipython kernels"
readme = "README.md"
requires-python = ">=3.10"
authors = [
  { name = "ACCESS-NRI" },
]
maintainers = [
  { name = "ACCESS-NRI" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
license = {text = "Apache Software License 2.0"}
dependencies = [
   "ipython>=7.0.0",
   "pydantic>=2.0.0",
   "pyyaml>=6.0.0",
   "httpx>=0.28.0",
]

dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "coverage",  # testing
    "mypy",  # linting
    "pytest",  # testing
    "ruff",  # linting
    "pytest-httpserver", # #Endpoints for testing.
    "intake",
    "access-nri-intake",
    "numpy",
]

[project.scripts]
access-py-telemetry = "access_py_telemetry.cli:configure_telemetry"

[project.urls]

bugs = "https://github.com/ACCESS-NRI/access-py-telemetry/issues"
changelog = "https://github.com/ACCESS-NRI/access-py-telemetry/blob/main/CHANGELOG.md"
homepage = "https://github.com/ACCESS-NRI/access-py-telemetry"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.package-data]
"*" = ["*.*"]


# Mypy
# ----

[tool.mypy]
files = "src"
exclude = [
  "src/access_py_telemetry/_version.py",
]

# Use strict defaults
strict = true
warn_unreachable = true
warn_unused_ignores = true
warn_no_return = true

[tool.versioneer]
VCS = "git"
style = "pep440"
versionfile_source = "src/access_py_telemetry/_version.py"
versionfile_build = "access_py_telemetry/_version.py"
tag_prefix = "v"
parentdir_prefix = "access-py-telemetry"

[tool.coverage.run]
omit = [
    "*/_version.py",
    "*/data/__init__.py",
]

[tool.ruff]
target-version = "py310"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
ignore = [
    "E402",
    "E501",
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]

[tool.ruff.mccabe]
max-complexity = 18

[tool.ruff.isort]
known-first-party = ["access_py_telemetry"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"