Metadata-Version: 2.4
Name: peloterm
Version: 0.1.3
Summary: A terminal-based cycling metrics visualization tool
Project-URL: Homepage, https://github.com/yourusername/peloterm
Project-URL: Repository, https://github.com/yourusername/peloterm
Project-URL: Issues, https://github.com/yourusername/peloterm/issues
Author-email: Andrew Marder <andrew.n.marder@gmail.com>
License: MIT
License-File: LICENSE
Keywords: bluetooth,cycling,metrics,peloton,terminal
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Utilities
Requires-Python: >=3.10
Requires-Dist: bleak>=0.21.1
Requires-Dist: fastapi>=0.110.0
Requires-Dist: fitparse>=1.2.0
Requires-Dist: pyyaml>=6.0.1
Requires-Dist: requests>=2.28.0
Requires-Dist: rich>=13.7.0
Requires-Dist: stravalib>=1.6.0
Requires-Dist: typer>=0.9.0
Requires-Dist: uvicorn>=0.27.1
Requires-Dist: websockets>=12.0
Provides-Extra: dev
Requires-Dist: fitparse>=1.2.0; extra == 'dev'
Requires-Dist: httpx>=0.24.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Requires-Dist: websockets>=11.0.0; extra == 'dev'
Description-Content-Type: text/markdown

# Peloterm

A cycling metrics application that connects to Bluetooth sensors to display real-time performance data while you ride. Supports embedding compatible streaming content (like Jellyfin) in the built-in media player using HTML iframes. When you're done, easily save and upload your rides to Strava.

## Features

- Real-time BLE sensor connection (heart rate, power, cadence, speed)
- Modern web-based UI with configurable video integration
- Automatic ride recording with FIT file generation
- Interactive Strava upload
- Smart listening mode - turn on devices when you're ready

## Installation

```bash
pip install peloterm
```

## Quick Start

1. **First time setup - scan for your sensors:**
   ```bash
   peloterm scan
   ```
   This saves your device addresses to a config file, so you only need to do this once.

2. **Start your ride:**
   ```bash
   peloterm start
   ```

3. **Turn on your devices** when prompted and start cycling!

4. **Press Ctrl+C when done** to stop the session.

## Web Interface

When you run `peloterm start`, a web interface opens at http://localhost:8000 with:
- Real-time cycling metrics
- Interactive chart
- Configurable video panel (Jellyfin by default)

## Contributing

Want to contribute? Check out our [CONTRIBUTING.md](CONTRIBUTING.md) for development setup, project structure, and how to submit pull requests.
