******
0.10.0
******

Released 9 of June 2020.


Contributors
============

A total of 4 people contributed to this release.  People with a "+" by their
names contributed a patch for the first time.

* Jonas Lundholm Bertelsen
* Nick Papior
* Pol Febrer +
* Thomas Frederiksen

Pull requests merged
====================

A total of 8 pull requests were merged for this release.

* #174: Enhancing the siesta outSile
* #180: Fixed some bugs in the out sile
* #197: WIP: improved Geometry.sort, for #191
* #210: Added __repr__ to some common classes
* #211: Cleaned setup.py and removed shipped sources
* #212: Moved a parenthesis that went unnoticed during pathlib conversion
* #215: ENH: added first Dispatcher method
* #226: ufunc on SparseCSR and derived types

* Exposing sisl_toolbox as a module for external contributions
  Now stuff contributed from 3rd parties can easily be included
  in a toolbox which is a separate module.

* Changed asarray (as*) methods for SparseGeometry
  Now we have a dispatch class which enables one
  to store the behaviour as variables and then post-process

* Using `*.geom` or `geometry.atom` is now deprecated, use
  `*.geometry` and `geometry.atoms` instead (respectively)

* Added spin-rotation for density matrices, this will
  enable sisl to manipulate DM and write them for
  Siesta calculations

* Enabled all numpy.ufuncs (np.exp(H))

* Added nanoribbons construction (@tfrederiksen)

* Internal change to pathlib for files and paths

* Added velocity calculations for NC+SOC Hamiltonians

* Sparse pattern transposes of non-full matrices, fixed bug

* Changed Geometry.sort to be more diverse (this may break old code)
  This new way of sorting is way more flexible and allows very fine
  control, fixes #191, #197

* Added a bilayer geometry which can create twisted bilayers #181, #186

* Enabled VASP `*CAR` files to write/read dynamic specifications #185

* Enabled `xarray.DataArray` returning from BrillouinZone objects #182

* Several improvements to outSileSiesta.read_scf #174, #180

* A huge performance increase for data extraction in tbtncSileTbtrans
  (thanks to Gaetano Calogero for finding the bottleneck)

* Added preliminary usage of Mixers, primarily intented for extending
  sisl operations where SCF are used (may heavily change).

* Lots of small bug-fixes

* Now sisl is Python >=3.6 only, #162

This release was helped by the following committers (THANKS):

* Thomas Frederiksen
* Pol Febrer
* Jonas Lundholm Bertelsen
* Bernhard Kretz
