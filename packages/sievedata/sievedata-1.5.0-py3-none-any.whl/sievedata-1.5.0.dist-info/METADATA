Metadata-Version: 2.2
Name: sievedata
Version: 1.5.0
Summary: Sieve CLI and Python Client
Home-page: https://github.com/sieve-data/sieve
Author: Sieve Team
Author-email: developer@sievedata.com
License: unlicensed
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: requests<3.0,>=2.0
Requires-Dist: click<9.0,>=8.0
Requires-Dist: pydantic<3.0,>=2.0
Requires-Dist: pathlib<2.0,>=1.0.1
Requires-Dist: tqdm<5.0,>=4.64.1
Requires-Dist: networkx<4.0.0,>=3.0
Requires-Dist: typeguard<5.0.0,>=4.0.0
Requires-Dist: typer<1.0.0,>=0.7.0
Requires-Dist: rich<14.0.0,>=13.0.0
Requires-Dist: cloudpickle<4.0.0,>=3.0.0
Requires-Dist: docstring_parser<1.0.0,>=0.16.0
Requires-Dist: jsonref<2.0.0,>=1.0.0
Requires-Dist: protobuf<5.0.0,>=3.10.0
Requires-Dist: pyyaml<7.0.0,>=6.0.0
Requires-Dist: grpcio<2.0.0,>=1.60.0
Requires-Dist: sseclient<1.0.0,>=0.0.20
Requires-Dist: python-dateutil<3.0.0,>=2.8.0
Requires-Dist: pathspec<1.0,>=0.12
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Sieve
The Sieve package and Python client. See the [Sieve Documentation](https://docs.sievedata.com/guide/intro) for usage information.

## Integration Tests
Push your local client package branch
```
# sieve
git checkout -b newbranch
git push -u origin newbranch
```

Now push to server repository to start the ci
- make typecheck will fail
```
# server
git checkout -b newbranch
git commit --allow-empty -m "Trigger Build"
git push -u origin newbranch
```

Make a pr, add a comment with "/pulmi"; it will create infra for testing. Pulumi action takes a little while. When it's done, a CI context should be created. You might get unrelated errors, if you do rerun the CI

When it goes thru, go to the context

	https://app.circleci.com/settings/organization/github/sieve-data/contexts

Delete `SIEVE_WHEEL_NAME` and then replace the value with a different wheel name (as to not break dev release), e.g.
```
SIEVE_WHEEL_NAME: “sievedata-mybranch-filenone-py3-none-any.whl”
```

Now push client package again. `Run Tests` fail sometimes, as long as `build_push` passes you are good.




