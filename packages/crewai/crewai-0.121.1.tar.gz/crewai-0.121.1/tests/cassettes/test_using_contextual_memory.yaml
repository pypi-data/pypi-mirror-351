interactions:
- request:
    body: !!binary |
      Cr4RCiQKIgoMc2VydmljZS5uYW1lEhIKEGNyZXdBSS10ZWxlbWV0cnkSlREKEgoQY3Jld2FpLnRl
      bGVtZXRyeRKQAgoQGsuh0ozCjqDdrnSYRFjxXhIIHvwk9HGSCqEqDlRhc2sgRXhlY3V0aW9uMAE5
      kJNN6D9M+BdB0Lrgb0BM+BdKLgoIY3Jld19rZXkSIgogNzVkOWY1NzUyMjYzOTJlZmJkZWQwZmFi
      ZWQ1NjU2ZWJKMQoHY3Jld19pZBImCiRlMGU5MDNkZC0yNTM1LTQ4M2ItODc1ZC1hMzFmNzU0Njdh
      MjZKLgoIdGFza19rZXkSIgogMzBmMzI4NjNhMmViNzk4ZDEwOTZjOTA3MDI4MDk4MzBKMQoHdGFz
      a19pZBImCiRkZGMzZWJhZi0zOWM5LTQ5NmUtODMwYi1mMjc5NWFmMTA3NWN6AhgBhQEAAQAAEo4C
      ChD2lYB7shD2y6369dKr/dP2Egh/zLf68A87yCoMVGFzayBDcmVhdGVkMAE5uBb8b0BM+BdBmD/9
      b0BM+BdKLgoIY3Jld19rZXkSIgogNzVkOWY1NzUyMjYzOTJlZmJkZWQwZmFiZWQ1NjU2ZWJKMQoH
      Y3Jld19pZBImCiRlMGU5MDNkZC0yNTM1LTQ4M2ItODc1ZC1hMzFmNzU0NjdhMjZKLgoIdGFza19r
      ZXkSIgogM2QwYmRlZTMxMjdhZjk5MGIzNjZjMTJkZGJkNGE4YTZKMQoHdGFza19pZBImCiRhNjNh
      MTdkNS00Zjc2LTQxN2MtODA3My04OWIwMGYzNDdmMTl6AhgBhQEAAQAAEpUBChChq/2Hsf948ocn
      p8x7nLQ6EggRzXNhGI6MMCoKVG9vbCBVc2FnZTABOaCtN6tATPgXQQCSOatATPgXShoKDmNyZXdh
      aV92ZXJzaW9uEggKBjAuNjEuMEohCgl0b29sX25hbWUSFAoSbXVsdGlwbGNhdGlvbl90b29sSg4K
      CGF0dGVtcHRzEgIYAXoCGAGFAQABAAASkAIKEHEI2ovCgLwKxFtNb58W+MYSCHmYTDwhvyLWKg5U
      YXNrIEV4ZWN1dGlvbjABOaCR/W9ATPgXQZhhUtBATPgXSi4KCGNyZXdfa2V5EiIKIDc1ZDlmNTc1
      MjI2MzkyZWZiZGVkMGZhYmVkNTY1NmViSjEKB2NyZXdfaWQSJgokZTBlOTAzZGQtMjUzNS00ODNi
      LTg3NWQtYTMxZjc1NDY3YTI2Si4KCHRhc2tfa2V5EiIKIDNkMGJkZWUzMTI3YWY5OTBiMzY2YzEy
      ZGRiZDRhOGE2SjEKB3Rhc2tfaWQSJgokYTYzYTE3ZDUtNGY3Ni00MTdjLTgwNzMtODliMDBmMzQ3
      ZjE5egIYAYUBAAEAABKeBwoQ0hFAuumibHOPVhnXh/NzvRIIaSuwW8ZM2RUqDENyZXcgQ3JlYXRl
      ZDABOdDeLt9ATPgXQWiQMN9ATPgXShoKDmNyZXdhaV92ZXJzaW9uEggKBjAuNjEuMEoaCg5weXRo
      b25fdmVyc2lvbhIICgYzLjExLjdKLgoIY3Jld19rZXkSIgogYzk3YjVmZWI1ZDFiNjZiYjU5MDA2
      YWFhMDFhMjljZDZKMQoHY3Jld19pZBImCiRiOTE0NjE4ZS0yYTRmLTQ0M2YtOGMxOC02ZmUwOGIw
      ZWI1NDRKHAoMY3Jld19wcm9jZXNzEgwKCnNlcXVlbnRpYWxKEQoLY3Jld19tZW1vcnkSAhABShoK
      FGNyZXdfbnVtYmVyX29mX3Rhc2tzEgIYAUobChVjcmV3X251bWJlcl9vZl9hZ2VudHMSAhgBSswC
      CgtjcmV3X2FnZW50cxK8Agq5Alt7ImtleSI6ICIwN2Q5OWI2MzA0MTFkMzVmZDkwNDdhNTMyZDUz
      ZGRhNyIsICJpZCI6ICI3ZTYwYWU3My1mMjdhLTQxODktODc0NS03NjQxZGI3N2VmMWQiLCAicm9s
      ZSI6ICJSZXNlYXJjaGVyIiwgInZlcmJvc2U/IjogZmFsc2UsICJtYXhfaXRlciI6IDE1LCAibWF4
      X3JwbSI6IG51bGwsICJmdW5jdGlvbl9jYWxsaW5nX2xsbSI6ICIiLCAibGxtIjogImdwdC00byIs
      ICJkZWxlZ2F0aW9uX2VuYWJsZWQ/IjogZmFsc2UsICJhbGxvd19jb2RlX2V4ZWN1dGlvbj8iOiBm
      YWxzZSwgIm1heF9yZXRyeV9saW1pdCI6IDIsICJ0b29sc19uYW1lcyI6IFtdfV1K/wEKCmNyZXdf
      dGFza3MS8AEK7QFbeyJrZXkiOiAiNjM5OTY1MTdmM2YzZjFjOTRkNmJiNjE3YWEwYjFjNGYiLCAi
      aWQiOiAiZDliZDVlNzktOWQ2OC00YWRmLTk5MzQtMTg5NjNlNDE1MTkzIiwgImFzeW5jX2V4ZWN1
      dGlvbj8iOiBmYWxzZSwgImh1bWFuX2lucHV0PyI6IGZhbHNlLCAiYWdlbnRfcm9sZSI6ICJSZXNl
      YXJjaGVyIiwgImFnZW50X2tleSI6ICIwN2Q5OWI2MzA0MTFkMzVmZDkwNDdhNTMyZDUzZGRhNyIs
      ICJ0b29sc19uYW1lcyI6IFtdfV16AhgBhQEAAQAAEo4CChAzFvoicD/btFQuCCsR6KaZEgh5R+cv
      Q0TSXioMVGFzayBDcmVhdGVkMAE5KKY830BM+BdBAAA930BM+BdKLgoIY3Jld19rZXkSIgogYzk3
      YjVmZWI1ZDFiNjZiYjU5MDA2YWFhMDFhMjljZDZKMQoHY3Jld19pZBImCiRiOTE0NjE4ZS0yYTRm
      LTQ0M2YtOGMxOC02ZmUwOGIwZWI1NDRKLgoIdGFza19rZXkSIgogNjM5OTY1MTdmM2YzZjFjOTRk
      NmJiNjE3YWEwYjFjNGZKMQoHdGFza19pZBImCiRkOWJkNWU3OS05ZDY4LTRhZGYtOTkzNC0xODk2
      M2U0MTUxOTN6AhgBhQEAAQAA
    headers:
      Accept:
      - '*/*'
      Accept-Encoding:
      - gzip, deflate
      Connection:
      - keep-alive
      Content-Length:
      - '2241'
      Content-Type:
      - application/x-protobuf
      User-Agent:
      - OTel-OTLP-Exporter-Python/1.27.0
    method: POST
    uri: https://telemetry.crewai.com:4319/v1/traces
  response:
    body:
      string: "\n\0"
    headers:
      Content-Length:
      - '2'
      Content-Type:
      - application/x-protobuf
      Date:
      - Tue, 24 Sep 2024 21:45:01 GMT
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are Researcher. You''re
      an expert in research and you love to learn new things.\nYour personal goal
      is: You research about math.\nTo give my best complete final answer to the task
      use the exact following format:\n\nThought: I now can give a great answer\nFinal
      Answer: Your final answer must be the great and the most complete as possible,
      it must be outcome described.\n\nI MUST use these formats, my job depends on
      it!"}, {"role": "user", "content": "\nCurrent Task: Research a topic to teach
      a kid aged 6 about math.\n\nThis is the expect criteria for your final answer:
      A topic, explanation, angle, and examples.\nyou MUST return the actual complete
      content as the final answer, not a summary.\n\n# Useful context: \n<MagicMock
      name=''build_context_for_task()'' id=''6251497744''>\n\nBegin! This is VERY
      important to you, use the tools available and give your best Final Answer, your
      job depends on it!\n\nThought:"}], "model": "gpt-4o"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '985'
      content-type:
      - application/json
      cookie:
      - __cf_bm=9.8sBYBkvBR8R1K_bVF7xgU..80XKlEIg3N2OBbTSCU-1727214102-1.0.1.1-.qiTLXbPamYUMSuyNsOEB9jhGu.jOifujOrx9E2JZvStbIZ9RTIiE44xKKNfLPxQkOi6qAT3h6htK8lPDGV_5g;
        _cfuvid=lbRdAddVWV6W3f5Dm9SaOPWDUOxqtZBSPr_fTW26nEA-1727213194587-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.47.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.47.0
      x-stainless-raw-response:
      - 'true'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.7
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    content: "{\n  \"id\": \"chatcmpl-AB7d4BrARnIWeNI7ngTDSTGu9XBPA\",\n  \"object\":
      \"chat.completion\",\n  \"created\": 1727214298,\n  \"model\": \"gpt-4o-2024-05-13\",\n
      \ \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\":
      \"assistant\",\n        \"content\": \"I now can give a great answer.\\nFinal
      Answer: \\n**Topic**: Basic Addition\\n\\n**Explanation**:\\nAddition is a fundamental
      concept in math that means combining two or more numbers to get a new total.
      It's like putting together pieces of a puzzle to see the whole picture. When
      we add, we take two or more groups of things and count them all together.\\n\\n**Angle**:\\nUse
      relatable and engaging real-life scenarios to illustrate addition, making it
      fun and easier for a 6-year-old to understand and apply.\\n\\n**Examples**:\\n\\n1.
      **Counting Apples**:\\n   Let's say you have 2 apples and your friend gives
      you 3 more apples. How many apples do you have in total?\\n   - You start with
      2 apples.\\n   - Your friend gives you 3 more apples.\\n   - Now, you count
      all the apples together: 2 + 3 = 5.\\n   - So, you have 5 apples in total.\\n\\n2.
      **Toy Cars**:\\n   Imagine you have 4 toy cars and you find 2 more toy cars
      in your room. How many toy cars do you have now?\\n   - You start with 4 toy
      cars.\\n   - You find 2 more toy cars.\\n   - You count them all together: 4
      + 2 = 6.\\n   - So, you have 6 toy cars in total.\\n\\n3. **Drawing Pictures**:\\n
      \  If you draw 3 pictures today and 2 pictures tomorrow, how many pictures will
      you have drawn in total?\\n   - You draw 3 pictures today.\\n   - You draw 2
      pictures tomorrow.\\n   - You add them together: 3 + 2 = 5.\\n   - So, you will
      have drawn 5 pictures in total.\\n\\n4. **Using Fingers**:\\n   Let's use your
      fingers to practice addition. Show 3 fingers on one hand and 1 finger on the
      other hand. How many fingers are you holding up?\\n   - 3 fingers on one hand.\\n
      \  - 1 finger on the other hand.\\n   - Put them together and count: 3 + 1 =
      4.\\n   - So, you are holding up 4 fingers.\\n\\nBy using objects that kids
      are familiar with, such as apples, toy cars, drawings, and even their own fingers,
      we can make the concept of addition relatable and enjoyable. Practicing with
      real items helps children visualize the math and understand that addition is
      simply combining groups to find out how many there are altogether.\",\n        \"refusal\":
      null\n      },\n      \"logprobs\": null,\n      \"finish_reason\": \"stop\"\n
      \   }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 205,\n    \"completion_tokens\":
      511,\n    \"total_tokens\": 716,\n    \"completion_tokens_details\": {\n      \"reasoning_tokens\":
      0\n    }\n  },\n  \"system_fingerprint\": \"fp_3537616b13\"\n}\n"
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8c85f5764a851cf3-GRU
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 24 Sep 2024 21:45:06 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '7751'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '30000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '29999765'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_2ac1e3cef69e9b09b7ade0e1d010fc08
    http_version: HTTP/1.1
    status_code: 200
- request:
    body: '{"input": ["I now can give a great answer. Final Answer:  **Topic**: Basic
      Addition  **Explanation**: Addition is a fundamental concept in math that means
      combining two or more numbers to get a new total. It''s like putting together
      pieces of a puzzle to see the whole picture. When we add, we take two or more
      groups of things and count them all together.  **Angle**: Use relatable and
      engaging real-life scenarios to illustrate addition, making it fun and easier
      for a 6-year-old to understand and apply.  **Examples**:  1. **Counting Apples**:    Let''s
      say you have 2 apples and your friend gives you 3 more apples. How many apples
      do you have in total?    - You start with 2 apples.    - Your friend gives you
      3 more apples.    - Now, you count all the apples together: 2 + 3 = 5.    -
      So, you have 5 apples in total.  2. **Toy Cars**:    Imagine you have 4 toy
      cars and you find 2 more toy cars in your room. How many toy cars do you have
      now?    - You start with 4 toy cars.    - You find 2 more toy cars.    - You
      count them all together: 4 + 2 = 6.    - So, you have 6 toy cars in total.  3.
      **Drawing Pictures**:    If you draw 3 pictures today and 2 pictures tomorrow,
      how many pictures will you have drawn in total?    - You draw 3 pictures today.    -
      You draw 2 pictures tomorrow.    - You add them together: 3 + 2 = 5.    - So,
      you will have drawn 5 pictures in total.  4. **Using Fingers**:    Let''s use
      your fingers to practice addition. Show 3 fingers on one hand and 1 finger on
      the other hand. How many fingers are you holding up?    - 3 fingers on one hand.    -
      1 finger on the other hand.    - Put them together and count: 3 + 1 = 4.    -
      So, you are holding up 4 fingers.  By using objects that kids are familiar with,
      such as apples, toy cars, drawings, and even their own fingers, we can make
      the concept of addition relatable and enjoyable. Practicing with real items
      helps children visualize the math and understand that addition is simply combining
      groups to find out how many there are altogether."], "model": "text-embedding-3-small",
      "encoding_format": "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2092'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 946752784c86fab2-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 27 May 2025 17:44:46 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=nIvwNySkdxxMcQP8yoJxQU5XAqkhjB3Vxogh6j04oos-1748367886-1.0.1.1-b6fYxgJdQa3VtEvLJHmR1bOMxFqNgbRyfhWYx8Rt6OwwXmvzU9iKBnGgf1960F9KVgXD1U5aO0wcqRp6rIx_mnC_Wkoti6UEx5rKRY6aevo;
        path=/; expires=Tue, 27-May-25 18:14:46 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=W_0kndCjCZtmj1b7Yd5GUlWE3ouSLZk.hZNGN4Vyjhw-1748367886614-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '113'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-6b5d94d96-z669m
      x-envoy-upstream-service-time:
      - '121'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999496'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 3ms
      x-request-id:
      - req_477f2c8c4256e461faa5696db9e53736
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Assess the quality of the task
      completed based on the description, expected output, and actual results.\n\nTask
      Description:\nResearch a topic to teach a kid aged 6 about math.\n\nExpected
      Output:\nA topic, explanation, angle, and examples.\n\nActual Output:\nI now
      can give a great answer.\nFinal Answer: \n**Topic**: Basic Addition\n\n**Explanation**:\nAddition
      is a fundamental concept in math that means combining two or more numbers to
      get a new total. It''s like putting together pieces of a puzzle to see the whole
      picture. When we add, we take two or more groups of things and count them all
      together.\n\n**Angle**:\nUse relatable and engaging real-life scenarios to illustrate
      addition, making it fun and easier for a 6-year-old to understand and apply.\n\n**Examples**:\n\n1.
      **Counting Apples**:\n   Let''s say you have 2 apples and your friend gives
      you 3 more apples. How many apples do you have in total?\n   - You start with
      2 apples.\n   - Your friend gives you 3 more apples.\n   - Now, you count all
      the apples together: 2 + 3 = 5.\n   - So, you have 5 apples in total.\n\n2.
      **Toy Cars**:\n   Imagine you have 4 toy cars and you find 2 more toy cars in
      your room. How many toy cars do you have now?\n   - You start with 4 toy cars.\n   -
      You find 2 more toy cars.\n   - You count them all together: 4 + 2 = 6.\n   -
      So, you have 6 toy cars in total.\n\n3. **Drawing Pictures**:\n   If you draw
      3 pictures today and 2 pictures tomorrow, how many pictures will you have drawn
      in total?\n   - You draw 3 pictures today.\n   - You draw 2 pictures tomorrow.\n   -
      You add them together: 3 + 2 = 5.\n   - So, you will have drawn 5 pictures in
      total.\n\n4. **Using Fingers**:\n   Let''s use your fingers to practice addition.
      Show 3 fingers on one hand and 1 finger on the other hand. How many fingers
      are you holding up?\n   - 3 fingers on one hand.\n   - 1 finger on the other
      hand.\n   - Put them together and count: 3 + 1 = 4.\n   - So, you are holding
      up 4 fingers.\n\nBy using objects that kids are familiar with, such as apples,
      toy cars, drawings, and even their own fingers, we can make the concept of addition
      relatable and enjoyable. Practicing with real items helps children visualize
      the math and understand that addition is simply combining groups to find out
      how many there are altogether.\n\nPlease provide:\n- Bullet points suggestions
      to improve future similar tasks\n- A score from 0 to 10 evaluating on completion,
      quality, and overall performance- Entities extracted from the task output, if
      any, their type, description, and relationships"}], "model": "gpt-4o-mini",
      "tool_choice": {"type": "function", "function": {"name": "TaskEvaluation"}},
      "tools": [{"type": "function", "function": {"name": "TaskEvaluation", "description":
      "Correctly extracted `TaskEvaluation` with all the required parameters with
      correct types", "parameters": {"$defs": {"Entity": {"properties": {"name": {"description":
      "The name of the entity.", "title": "Name", "type": "string"}, "type": {"description":
      "The type of the entity.", "title": "Type", "type": "string"}, "description":
      {"description": "Description of the entity.", "title": "Description", "type":
      "string"}, "relationships": {"description": "Relationships of the entity.",
      "items": {"type": "string"}, "title": "Relationships", "type": "array"}}, "required":
      ["name", "type", "description", "relationships"], "title": "Entity", "type":
      "object"}}, "properties": {"suggestions": {"description": "Suggestions to improve
      future similar tasks.", "items": {"type": "string"}, "title": "Suggestions",
      "type": "array"}, "quality": {"description": "A score from 0 to 10 evaluating
      on completion, quality, and overall performance, all taking into account the
      task description, expected output, and the result of the task.", "title": "Quality",
      "type": "number"}, "entities": {"description": "Entities extracted from the
      task output.", "items": {"$ref": "#/$defs/Entity"}, "title": "Entities", "type":
      "array"}}, "required": ["entities", "quality", "suggestions"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4092'
      content-type:
      - application/json
      cookie:
      - _cfuvid=v_wJZ5m7qCjrnRfks0gT2GAk9yR14BdIDAQiQR7xxI8-1735266215000-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-raw-response:
      - 'true'
      x-stainless-read-timeout:
      - '600.0'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//tFbbbts4EH33Vwz4LAe5uEnstzRtgSDdRbGb3RaoAmNMjiQmFKnw4sQJ
        8u8LkoplNy6w6MUPhsHhnDlzzoDjpxEAk4LNgPEGPW87NX67cGJ1dzl9d3X/78HN44e7j2146Pab
        qpp8UayIGWZxQ9y/ZO1x03aKvDQ6h7kl9BRRD04mp0fHJ6enxynQGkEqptWdH0/MuJVajg/3Dyfj
        /ZPxwWmf3RjJybEZfB0BADyl78hTC3pgM9gvXk5acg5rYrP1JQBmjYonDJ2TzqP2rBiC3GhPOlLX
        QamNgDdGzTkqNRTOn6eN34NYqNT8jF9OHr+cXNx8/lOeP36+/zg5ry8uyW7Uy9CrLhGqguZrkTbi
        6/PZN8UAmMY25V6hu32/RBVwBwIAQ1uHlrSP7NlTyVyoa3LxrivZ7GvJPlmzlIKgNZZAak8WuZdL
        AlKUEsEbIF1jTeAbAt5IJaAK1jdk90pWlOxCcxUEwVK6gApQCgfGgpBYW2wTQJ6EiAf00CnUia7L
        +X9nTpAKSy/JgW/QAypl7qEyFhrUwo2Nhi6x41SAC7wBdMBN0F7qGrpm5SRHBXkIe+wzIeAu9B1n
        WNLcBLvdjzfgG6lvAbUAZ9SSoLNmoah1YHS8KC2Ye71XsuuiZHcBlfSrks2mRclI+8Q6CvpUJmtK
        NivZW3SSw5kQMlZPdKLlKfYH+oZa9InxudGcOp9uCHLcyi5nzEp2BlXQAqN0qKBF3wDP13M3Ui8j
        3ShEu5A6KqFDuyCbdDcLj1IDgjceVZbEksrqN7Lrh6B30CVF6AGjWQ5MNaiLXTwqwJsVcLSuSEoJ
        i/dJe8l9sBQ1v34uNjU4fwE4SwDbIrzPlXb3rV+IRB7BDSTSQMYhio314qYZi05a0t/t8q94lPOT
        872MpoJtp153cWVWcI72x+hnhyL/F/EgOBK72vgN1N/1Fn3qLfo5B3rDExFBrdHOW/T0Oxv4JxX+
        IHVN9ifZVxkkkmhIdeAJ4yOynqHGmlA3w0uyfg5/VWPXz2zrgX4e7fp9vbF+LFXBoXq9l1Br4zOZ
        uJiu+8jzegcqU8cnzH2TyiqppWvmltCl1cKcN12mFSmk4ixsrU/WWdN2fu7NLaVyJ9NpxmPDih+i
        h5PjPppenSFwsD95U+xAnAvyKNOGXS91jrwhMeQOyx2DkGYjMNro+zWfXdi5d6nr/wM/BHh0lsS8
        syQk3+55uGYprp/vXVvrnAgzR3YpOc29JBu9EFRhUPmfCXMr56md56ntrEx/T1jVzY8m+GaCND3i
        bPQ8+g8AAP//AwCKW3qerAkAAA==
    headers:
      CF-RAY:
      - 9467527ba95b67b5-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 27 May 2025 17:44:51 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=W90134gwddaMwE32WEPamxV1PKXtSNt1DzHEhSHMH2Y-1748367891-1.0.1.1-2.wnGomT3WnLiB.01fyjzk9jJOuI05EwaqUhGlMePUA_ErB3Ub8Tc2ft0wex1CX_fi0Nx3PXR4IuMjFgbQ.8DZd2Ac0tvc7eBE31EcjObG8;
        path=/; expires=Tue, 27-May-25 18:14:51 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=fJyYuYMZOVHcT1QXTUp_YJaajJjIZWySxGPOVjTRBQA-1748367891636-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '4854'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      x-envoy-upstream-service-time:
      - '4856'
      x-ratelimit-limit-requests:
      - '30000'
      x-ratelimit-limit-tokens:
      - '150000000'
      x-ratelimit-remaining-requests:
      - '29999'
      x-ratelimit-remaining-tokens:
      - '149999368'
      x-ratelimit-reset-requests:
      - 2ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_dce064fab2f39799853878c10482524f
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Counting Apples(Example): An example of using apples to explain
      addition to children."], "model": "text-embedding-3-small", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '164'
      content-type:
      - application/json
      cookie:
      - __cf_bm=nIvwNySkdxxMcQP8yoJxQU5XAqkhjB3Vxogh6j04oos-1748367886-1.0.1.1-b6fYxgJdQa3VtEvLJHmR1bOMxFqNgbRyfhWYx8Rt6OwwXmvzU9iKBnGgf1960F9KVgXD1U5aO0wcqRp6rIx_mnC_Wkoti6UEx5rKRY6aevo;
        _cfuvid=W_0kndCjCZtmj1b7Yd5GUlWE3ouSLZk.hZNGN4Vyjhw-1748367886614-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 9467529b0d69fb44-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 27 May 2025 17:44:52 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '144'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-58f7f7856-4nzw8
      x-envoy-upstream-service-time:
      - '147'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_0e09e7e6339eedfe700740513ac34213
    status:
      code: 200
      message: OK
- request:
    body: '{"input": ["Drawing Pictures(Example): An example of using drawings to
      demonstrate addition."], "model": "text-embedding-3-small", "encoding_format":
      "base64"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '159'
      content-type:
      - application/json
      cookie:
      - __cf_bm=nIvwNySkdxxMcQP8yoJxQU5XAqkhjB3Vxogh6j04oos-1748367886-1.0.1.1-b6fYxgJdQa3VtEvLJHmR1bOMxFqNgbRyfhWYx8Rt6OwwXmvzU9iKBnGgf1960F9KVgXD1U5aO0wcqRp6rIx_mnC_Wkoti6UEx5rKRY6aevo;
        _cfuvid=W_0kndCjCZtmj1b7Yd5GUlWE3ouSLZk.hZNGN4Vyjhw-1748367886614-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.68.2
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.68.2
      x-stainless-read-timeout:
      - '600'
      x-stainless-retry-count:
      - '0'
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.12.9
    method: POST
    uri: https://api.openai.com/v1/embeddings
  response:
    body:
      string: !!binary |
        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
    headers:
      CF-RAY:
      - 946752a01b33fb44-SJC
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 27 May 2025 17:44:52 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      access-control-allow-origin:
      - '*'
      access-control-expose-headers:
      - X-Request-ID
      alt-svc:
      - h3=":443"; ma=86400
      cf-cache-status:
      - DYNAMIC
      openai-model:
      - text-embedding-3-small
      openai-organization:
      - crewai-iuxna1
      openai-processing-ms:
      - '51'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains; preload
      via:
      - envoy-router-canary-5dc664d874-9jhzk
      x-envoy-upstream-service-time:
      - '53'
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9999980'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_ef10f0678c699b1a9a7993eeef7f0a82
    status:
      code: 200
      message: OK
version: 1
